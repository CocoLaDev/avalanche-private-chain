{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialReverts","type":"tuple[]","internalType":"struct VmSafe.PotentialRevert[]","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialRevert","type":"tuple","internalType":"struct VmSafe.PotentialRevert","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cloneAccount","inputs":[{"name":"source","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"contains","inputs":[{"name":"subject","type":"string","internalType":"string"},{"name":"search","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBroadcast","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple","internalType":"struct VmSafe.BroadcastTxSummary","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployments","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddresses","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getStateDiff","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStateDiffJson","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomBytes4","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"randomBytes8","inputs":[],"outputs":[{"name":"","type":"bytes8","internalType":"bytes8"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"language","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToState","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToStateAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotState","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startDebugTraceRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnDebugTraceRecording","inputs":[],"outputs":[{"name":"step","type":"tuple[]","internalType":"struct VmSafe.DebugStep[]","components":[{"name":"stack","type":"uint256[]","internalType":"uint256[]"},{"name":"memoryInput","type":"bytes","internalType":"bytes"},{"name":"opcode","type":"uint8","internalType":"uint8"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isOutOfGas","type":"bool","internalType":"bool"},{"name":"contractAddr","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert((address,bool,bytes))":"d8591eeb","assumeNoRevert((address,bool,bytes)[])":"8a4592cc","assumeNoRevert()":"285b366a","attachDelegation((uint8,bytes32,bytes32,uint64,address))":"14ae3519","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","cloneAccount(address,address)":"533d61c9","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","contains(string,string)":"3fb18aec","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deleteStateSnapshot(uint256)":"08d6b37a","deleteStateSnapshots()":"e0933c74","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(address,uint64)":"b43aece3","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmit(bool,bool,bool,bool,address,uint64)":"c339d02c","expectEmit(bool,bool,bool,bool,uint64)":"5e1d1c33","expectEmit(uint64)":"4c74a335","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(address,uint64)":"1ff5f952","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes,address,uint64)":"d345fb1f","expectRevert(bytes,uint64)":"4994c273","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectRevert(bytes4,address,uint64)":"b0762d73","expectRevert(bytes4,uint64)":"e45ca72d","expectRevert(uint64)":"4ee38244","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getBroadcast(string,uint64,uint8)":"3dc90cb3","getBroadcasts(string,uint64)":"f2fa4a26","getBroadcasts(string,uint64,uint8)":"f7afe919","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getDeployment(string)":"a8091d97","getDeployment(string,uint64)":"0debd5d6","getDeployments(string,uint64)":"74e133dd","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","getStateDiff()":"80df01cc","getStateDiffJson()":"f54fe009","getWallets()":"db7a4605","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,bytes4,bytes)":"08e0c537","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCall(address,uint256,bytes4,bytes)":"e7b36a3d","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,bytes4,bytes)":"2dfba5df","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockCallRevert(address,uint256,bytes4,bytes)":"596c8f04","mockCalls(address,bytes,bytes[])":"5c5c3de9","mockCalls(address,uint256,bytes,bytes[])":"08bcbae1","mockFunction(address,address,bytes)":"adf84d21","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prank(address,address,bool)":"7d73d042","prank(address,bool)":"a7f8bf5c","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomBytes4()":"9b7cd579","randomBytes8()":"0497b0a5","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","rememberKeys(string,string,string,uint32)":"f8d58eaf","rememberKeys(string,string,uint32)":"97cb9189","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revertToState(uint256)":"c2527405","revertToStateAndDelete(uint256)":"3a1985dc","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signAndAttachDelegation(address,uint256)":"c7fa7288","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signDelegation(address,uint256)":"5b593c7b","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","snapshotGasLastCall(string)":"dd9fca12","snapshotGasLastCall(string,string)":"200c6772","snapshotState()":"9cd23835","snapshotValue(string,string,uint256)":"6d2b27d8","snapshotValue(string,uint256)":"51db805a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startDebugTraceRecording()":"419c8832","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startPrank(address,address,bool)":"4eb859b5","startPrank(address,bool)":"1cc0b435","startSnapshotGas(string)":"3cad9d7b","startSnapshotGas(string,string)":"6cd0cc53","startStateDiffRecording()":"cf22e3c9","stopAndReturnDebugTraceRecording()":"ced398a2","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","stopSnapshotGas()":"f6402eda","stopSnapshotGas(string)":"773b2805","stopSnapshotGas(string,string)":"0c9db707","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with all topic and data checks enabled.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool,address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with the provided topics.\"},\"expectEmit(bool,bool,bool,bool,uint64)\":{\"notice\":\"Expect a given number of logs with the provided topics.\"},\"expectEmit(uint64)\":{\"notice\":\"Expect a given number of logs with all topic and data checks enabled.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data.\"},\"expectRevert(bytes,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectRevert(bytes4,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data.\"},\"expectRevert(bytes4,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that match the revert data.\"},\"expectRevert(uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized dd by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized dd by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized dd by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCall(address,uint256,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCallRevert(address,uint256,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb19ccfe76bfd0bd40fadb0922bf76704b20b44b830b595af09333a7139886245\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f3aa36195af25a4f5bc27025c052d3c9b701d4923606a6e899ed81949afc50c1\",\"dweb:/ipfs/QmRmXPsVw6tHVw8oXzmZqYewnhnDjttfsE2YCpWPEdWMp9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert[]","name":"potentialReverts","type":"tuple[]","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert","name":"potentialRevert","type":"tuple","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cloneAccount"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"search","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"contains","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcast","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployments","outputs":[{"internalType":"address[]","name":"deployedAddresses","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiff","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiffJson","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes4","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes8","outputs":[{"internalType":"bytes8","name":"","type":"bytes8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"string","name":"language","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToState","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToStateAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshotState","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startDebugTraceRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnDebugTraceRecording","outputs":[{"internalType":"struct VmSafe.DebugStep[]","name":"step","type":"tuple[]","components":[{"internalType":"uint256[]","name":"stack","type":"uint256[]"},{"internalType":"bytes","name":"memoryInput","type":"bytes"},{"internalType":"uint8","name":"opcode","type":"uint8"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isOutOfGas","type":"bool"},{"internalType":"address","name":"contractAddr","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"view","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert((address,bool,bytes))":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"assumeNoRevert((address,bool,bytes)[])":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"attachDelegation((uint8,bytes32,bytes32,uint64,address))":{"notice":"Designate the next call as an EIP-7702 transaction"},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"cloneAccount(address,address)":{"notice":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"contains(string,string)":{"notice":"Returns true if `search` is found in `subject`, false otherwise."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"deleteSnapshots()":{"notice":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"deleteStateSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteStateSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool,address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with the provided topics."},"expectEmit(bool,bool,bool,bool,uint64)":{"notice":"Expect a given number of logs with the provided topics."},"expectEmit(uint64)":{"notice":"Expect a given number of logs with all topic and data checks enabled."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"expectRevert(bytes,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectRevert(bytes4,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"expectRevert(bytes4,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"expectRevert(uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized dd by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized dd by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized dd by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBroadcast(string,uint64,uint8)":{"notice":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`."},"getBroadcasts(string,uint64)":{"notice":"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getBroadcasts(string,uint64,uint8)":{"notice":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployment(string)":{"notice":"Returns the most recent deployment for the current `chainId`."},"getDeployment(string,uint64)":{"notice":"Returns the most recent deployment for the given contract on `chainId`"},"getDeployments(string,uint64)":{"notice":"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"getStateDiff()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session."},"getStateDiffJson()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"getWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call from the callee perspective."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,bytes4,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCall(address,uint256,bytes4,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,bytes4,bytes)":{"notice":"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockCallRevert(address,uint256,bytes4,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCalls(address,bytes,bytes[])":{"notice":"Mocks multiple calls to an address, returning specified data for each call."},"mockCalls(address,uint256,bytes,bytes[])":{"notice":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns a random `bool`."},"randomBytes(uint256)":{"notice":"Returns a random byte array value of the given length."},"randomBytes4()":{"notice":"Returns a random fixed-size byte array of length 4."},"randomBytes8()":{"notice":"Returns a random fixed-size byte array of length 8."},"randomInt()":{"notice":"Returns a random `int256` value."},"randomInt(uint256)":{"notice":"Returns a random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns a random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"rememberKeys(string,string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"rememberKeys(string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"revertToAndDelete(uint256)":{"notice":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"revertToState(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"revertToStateAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signAndAttachDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization for delegation"},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"snapshotGasLastCall(string)":{"notice":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"snapshotGasLastCall(string,string)":{"notice":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"snapshotState()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`."},"snapshotValue(string,string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name in a group."},"snapshotValue(string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startDebugTraceRecording()":{"notice":"Records the debug trace during the run."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"startSnapshotGas(string)":{"notice":"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name."},"startSnapshotGas(string,string)":{"notice":"Start a snapshot capture of the current gas usage by name in a group."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnDebugTraceRecording()":{"notice":"Stop debug trace recording and returns the recorded debug trace."},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"stopSnapshotGas()":{"notice":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"stopSnapshotGas(string)":{"notice":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name."},"stopSnapshotGas(string,string)":{"notice":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0xb19ccfe76bfd0bd40fadb0922bf76704b20b44b830b595af09333a7139886245","urls":["bzz-raw://f3aa36195af25a4f5bc27025c052d3c9b701d4923606a6e899ed81949afc50c1","dweb:/ipfs/QmRmXPsVw6tHVw8oXzmZqYewnhnDjttfsE2YCpWPEdWMp9"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":17728,"exportedSymbols":{"Vm":[17727],"VmSafe":[16710]},"nodeType":"SourceUnit","src":"117:117909:14","nodes":[{"id":12949,"nodeType":"PragmaDirective","src":"117:31:14","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12950,"nodeType":"PragmaDirective","src":"149:33:14","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":16710,"nodeType":"ContractDefinition","src":"409:92469:14","nodes":[{"id":12958,"nodeType":"EnumDefinition","src":"529:533:14","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":12952,"nodeType":"StructuredDocumentation","src":"432:92:14","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":12953,"name":"None","nameLocation":"610:4:14","nodeType":"EnumValue","src":"610:4:14"},{"id":12954,"name":"Broadcast","nameLocation":"714:9:14","nodeType":"EnumValue","src":"714:9:14"},{"id":12955,"name":"RecurrentBroadcast","nameLocation":"829:18:14","nodeType":"EnumValue","src":"829:18:14"},{"id":12956,"name":"Prank","nameLocation":"939:5:14","nodeType":"EnumValue","src":"939:5:14"},{"id":12957,"name":"RecurrentPrank","nameLocation":"1042:14:14","nodeType":"EnumValue","src":"1042:14:14"}],"name":"CallerMode","nameLocation":"534:10:14"},{"id":12971,"nodeType":"EnumDefinition","src":"1118:791:14","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":12959,"nodeType":"StructuredDocumentation","src":"1068:45:14","text":"The kind of account access that occurred."},"members":[{"id":12960,"name":"Call","nameLocation":"1186:4:14","nodeType":"EnumValue","src":"1186:4:14"},{"id":12961,"name":"DelegateCall","nameLocation":"1252:12:14","nodeType":"EnumValue","src":"1252:12:14"},{"id":12962,"name":"CallCode","nameLocation":"1322:8:14","nodeType":"EnumValue","src":"1322:8:14"},{"id":12963,"name":"StaticCall","nameLocation":"1390:10:14","nodeType":"EnumValue","src":"1390:10:14"},{"id":12964,"name":"Create","nameLocation":"1446:6:14","nodeType":"EnumValue","src":"1446:6:14"},{"id":12965,"name":"SelfDestruct","nameLocation":"1505:12:14","nodeType":"EnumValue","src":"1505:12:14"},{"id":12966,"name":"Resume","nameLocation":"1644:6:14","nodeType":"EnumValue","src":"1644:6:14"},{"id":12967,"name":"Balance","nameLocation":"1703:7:14","nodeType":"EnumValue","src":"1703:7:14"},{"id":12968,"name":"Extcodesize","nameLocation":"1764:11:14","nodeType":"EnumValue","src":"1764:11:14"},{"id":12969,"name":"Extcodehash","nameLocation":"1829:11:14","nodeType":"EnumValue","src":"1829:11:14"},{"id":12970,"name":"Extcodecopy","nameLocation":"1892:11:14","nodeType":"EnumValue","src":"1892:11:14"}],"name":"AccountAccessKind","nameLocation":"1123:17:14"},{"id":12982,"nodeType":"EnumDefinition","src":"1949:683:14","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":12972,"nodeType":"StructuredDocumentation","src":"1915:29:14","text":"Forge execution contexts."},"members":[{"id":12973,"name":"TestGroup","nameLocation":"2047:9:14","nodeType":"EnumValue","src":"2047:9:14"},{"id":12974,"name":"Test","nameLocation":"2109:4:14","nodeType":"EnumValue","src":"2109:4:14"},{"id":12975,"name":"Coverage","nameLocation":"2170:8:14","nodeType":"EnumValue","src":"2170:8:14"},{"id":12976,"name":"Snapshot","nameLocation":"2235:8:14","nodeType":"EnumValue","src":"2235:8:14"},{"id":12977,"name":"ScriptGroup","nameLocation":"2327:11:14","nodeType":"EnumValue","src":"2327:11:14"},{"id":12978,"name":"ScriptDryRun","nameLocation":"2393:12:14","nodeType":"EnumValue","src":"2393:12:14"},{"id":12979,"name":"ScriptBroadcast","nameLocation":"2472:15:14","nodeType":"EnumValue","src":"2472:15:14"},{"id":12980,"name":"ScriptResume","nameLocation":"2551:12:14","nodeType":"EnumValue","src":"2551:12:14"},{"id":12981,"name":"Unknown","nameLocation":"2619:7:14","nodeType":"EnumValue","src":"2619:7:14"}],"name":"ForgeContext","nameLocation":"1954:12:14"},{"id":12987,"nodeType":"EnumDefinition","src":"2696:208:14","nodes":[],"canonicalName":"VmSafe.BroadcastTxType","documentation":{"id":12983,"nodeType":"StructuredDocumentation","src":"2638:53:14","text":"The transaction type (`txType`) of the broadcast."},"members":[{"id":12984,"name":"Call","nameLocation":"2770:4:14","nodeType":"EnumValue","src":"2770:4:14"},{"id":12985,"name":"Create","nameLocation":"2829:6:14","nodeType":"EnumValue","src":"2829:6:14"},{"id":12986,"name":"Create2","nameLocation":"2891:7:14","nodeType":"EnumValue","src":"2891:7:14"}],"name":"BroadcastTxType","nameLocation":"2701:15:14"},{"id":12996,"nodeType":"StructDefinition","src":"2966:237:14","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":12988,"nodeType":"StructuredDocumentation","src":"2910:51:14","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":12991,"mutability":"mutable","name":"topics","nameLocation":"3064:6:14","nodeType":"VariableDeclaration","scope":12996,"src":"3054:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3054:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12990,"nodeType":"ArrayTypeName","src":"3054:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12993,"mutability":"mutable","name":"data","nameLocation":"3122:4:14","nodeType":"VariableDeclaration","scope":12996,"src":"3116:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12992,"name":"bytes","nodeType":"ElementaryTypeName","src":"3116:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12995,"mutability":"mutable","name":"emitter","nameLocation":"3189:7:14","nodeType":"VariableDeclaration","scope":12996,"src":"3181:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12994,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2973:3:14","scope":16710,"visibility":"public"},{"id":13002,"nodeType":"StructDefinition","src":"3272:119:14","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":12997,"nodeType":"StructuredDocumentation","src":"3209:58:14","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":12999,"mutability":"mutable","name":"key","nameLocation":"3337:3:14","nodeType":"VariableDeclaration","scope":13002,"src":"3330:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12998,"name":"string","nodeType":"ElementaryTypeName","src":"3330:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13001,"mutability":"mutable","name":"url","nameLocation":"3381:3:14","nodeType":"VariableDeclaration","scope":13002,"src":"3374:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13000,"name":"string","nodeType":"ElementaryTypeName","src":"3374:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3279:3:14","scope":16710,"visibility":"public"},{"id":13023,"nodeType":"StructDefinition","src":"3451:615:14","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":13003,"nodeType":"StructuredDocumentation","src":"3397:49:14","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":13005,"mutability":"mutable","name":"emitter","nameLocation":"3532:7:14","nodeType":"VariableDeclaration","scope":13023,"src":"3524:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13004,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13008,"mutability":"mutable","name":"topics","nameLocation":"3626:6:14","nodeType":"VariableDeclaration","scope":13023,"src":"3616:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13007,"nodeType":"ArrayTypeName","src":"3616:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13010,"mutability":"mutable","name":"data","nameLocation":"3684:4:14","nodeType":"VariableDeclaration","scope":13023,"src":"3678:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13009,"name":"bytes","nodeType":"ElementaryTypeName","src":"3678:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13012,"mutability":"mutable","name":"blockHash","nameLocation":"3733:9:14","nodeType":"VariableDeclaration","scope":13023,"src":"3725:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3725:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13014,"mutability":"mutable","name":"blockNumber","nameLocation":"3788:11:14","nodeType":"VariableDeclaration","scope":13023,"src":"3781:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13013,"name":"uint64","nodeType":"ElementaryTypeName","src":"3781:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13016,"mutability":"mutable","name":"transactionHash","nameLocation":"3850:15:14","nodeType":"VariableDeclaration","scope":13023,"src":"3842:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3842:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13018,"mutability":"mutable","name":"transactionIndex","nameLocation":"3929:16:14","nodeType":"VariableDeclaration","scope":13023,"src":"3922:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13017,"name":"uint64","nodeType":"ElementaryTypeName","src":"3922:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13020,"mutability":"mutable","name":"logIndex","nameLocation":"3989:8:14","nodeType":"VariableDeclaration","scope":13023,"src":"3981:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13019,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13022,"mutability":"mutable","name":"removed","nameLocation":"4052:7:14","nodeType":"VariableDeclaration","scope":13023,"src":"4047:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13021,"name":"bool","nodeType":"ElementaryTypeName","src":"4047:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3458:10:14","scope":16710,"visibility":"public"},{"id":13035,"nodeType":"StructDefinition","src":"4142:334:14","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":13024,"nodeType":"StructuredDocumentation","src":"4072:65:14","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":13026,"mutability":"mutable","name":"errorMessage","nameLocation":"4213:12:14","nodeType":"VariableDeclaration","scope":13035,"src":"4206:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13025,"name":"string","nodeType":"ElementaryTypeName","src":"4206:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13028,"mutability":"mutable","name":"path","nameLocation":"4276:4:14","nodeType":"VariableDeclaration","scope":13035,"src":"4269:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13027,"name":"string","nodeType":"ElementaryTypeName","src":"4269:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13030,"mutability":"mutable","name":"depth","nameLocation":"4332:5:14","nodeType":"VariableDeclaration","scope":13035,"src":"4325:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13029,"name":"uint64","nodeType":"ElementaryTypeName","src":"4325:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13032,"mutability":"mutable","name":"isDir","nameLocation":"4397:5:14","nodeType":"VariableDeclaration","scope":13035,"src":"4392:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13031,"name":"bool","nodeType":"ElementaryTypeName","src":"4392:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13034,"mutability":"mutable","name":"isSymlink","nameLocation":"4460:9:14","nodeType":"VariableDeclaration","scope":13035,"src":"4455:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13033,"name":"bool","nodeType":"ElementaryTypeName","src":"4455:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"4149:8:14","scope":16710,"visibility":"public"},{"id":13051,"nodeType":"StructDefinition","src":"4706:599:14","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":13036,"nodeType":"StructuredDocumentation","src":"4482:219:14","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":13038,"mutability":"mutable","name":"isDir","nameLocation":"4792:5:14","nodeType":"VariableDeclaration","scope":13051,"src":"4787:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13037,"name":"bool","nodeType":"ElementaryTypeName","src":"4787:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13040,"mutability":"mutable","name":"isSymlink","nameLocation":"4863:9:14","nodeType":"VariableDeclaration","scope":13051,"src":"4858:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13039,"name":"bool","nodeType":"ElementaryTypeName","src":"4858:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13042,"mutability":"mutable","name":"length","nameLocation":"4955:6:14","nodeType":"VariableDeclaration","scope":13051,"src":"4947:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13041,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13044,"mutability":"mutable","name":"readOnly","nameLocation":"5046:8:14","nodeType":"VariableDeclaration","scope":13051,"src":"5041:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13043,"name":"bool","nodeType":"ElementaryTypeName","src":"5041:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13046,"mutability":"mutable","name":"modified","nameLocation":"5135:8:14","nodeType":"VariableDeclaration","scope":13051,"src":"5127:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13045,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13048,"mutability":"mutable","name":"accessed","nameLocation":"5211:8:14","nodeType":"VariableDeclaration","scope":13051,"src":"5203:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13047,"name":"uint256","nodeType":"ElementaryTypeName","src":"5203:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13050,"mutability":"mutable","name":"created","nameLocation":"5291:7:14","nodeType":"VariableDeclaration","scope":13051,"src":"5283:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13049,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4713:10:14","scope":16710,"visibility":"public"},{"id":13061,"nodeType":"StructDefinition","src":"5359:277:14","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":13052,"nodeType":"StructuredDocumentation","src":"5311:43:14","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":13054,"mutability":"mutable","name":"addr","nameLocation":"5424:4:14","nodeType":"VariableDeclaration","scope":13061,"src":"5416:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13053,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13056,"mutability":"mutable","name":"publicKeyX","nameLocation":"5486:10:14","nodeType":"VariableDeclaration","scope":13061,"src":"5478:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13055,"name":"uint256","nodeType":"ElementaryTypeName","src":"5478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13058,"mutability":"mutable","name":"publicKeyY","nameLocation":"5554:10:14","nodeType":"VariableDeclaration","scope":13061,"src":"5546:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13057,"name":"uint256","nodeType":"ElementaryTypeName","src":"5546:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13060,"mutability":"mutable","name":"privateKey","nameLocation":"5619:10:14","nodeType":"VariableDeclaration","scope":13061,"src":"5611:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13059,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5366:6:14","scope":16710,"visibility":"public"},{"id":13069,"nodeType":"StructDefinition","src":"5681:213:14","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":13062,"nodeType":"StructuredDocumentation","src":"5642:34:14","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":13064,"mutability":"mutable","name":"exitCode","nameLocation":"5752:8:14","nodeType":"VariableDeclaration","scope":13069,"src":"5746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":13063,"name":"int32","nodeType":"ElementaryTypeName","src":"5746:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":13066,"mutability":"mutable","name":"stdout","nameLocation":"5829:6:14","nodeType":"VariableDeclaration","scope":13069,"src":"5823:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13065,"name":"bytes","nodeType":"ElementaryTypeName","src":"5823:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13068,"mutability":"mutable","name":"stderr","nameLocation":"5881:6:14","nodeType":"VariableDeclaration","scope":13069,"src":"5875:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13067,"name":"bytes","nodeType":"ElementaryTypeName","src":"5875:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5688:9:14","scope":16710,"visibility":"public"},{"id":13075,"nodeType":"StructDefinition","src":"5943:184:14","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":13070,"nodeType":"StructuredDocumentation","src":"5900:38:14","text":"Information on the chain and fork."},"members":[{"constant":false,"id":13072,"mutability":"mutable","name":"forkId","nameLocation":"6044:6:14","nodeType":"VariableDeclaration","scope":13075,"src":"6036:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13074,"mutability":"mutable","name":"chainId","nameLocation":"6113:7:14","nodeType":"VariableDeclaration","scope":13075,"src":"6105:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13073,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5950:9:14","scope":16710,"visibility":"public"},{"id":13107,"nodeType":"StructDefinition","src":"6188:1837:14","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":13076,"nodeType":"StructuredDocumentation","src":"6133:50:14","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":13079,"mutability":"mutable","name":"chainInfo","nameLocation":"6280:9:14","nodeType":"VariableDeclaration","scope":13107,"src":"6270:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13075_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":13078,"nodeType":"UserDefinedTypeName","pathNode":{"id":13077,"name":"ChainInfo","nameLocations":["6270:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":13075,"src":"6270:9:14"},"referencedDeclaration":13075,"src":"6270:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13075_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":13082,"mutability":"mutable","name":"kind","nameLocation":"6743:4:14","nodeType":"VariableDeclaration","scope":13107,"src":"6725:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12971","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":13081,"nodeType":"UserDefinedTypeName","pathNode":{"id":13080,"name":"AccountAccessKind","nameLocations":["6725:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":12971,"src":"6725:17:14"},"referencedDeclaration":12971,"src":"6725:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12971","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":13084,"mutability":"mutable","name":"account","nameLocation":"6920:7:14","nodeType":"VariableDeclaration","scope":13107,"src":"6912:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13083,"name":"address","nodeType":"ElementaryTypeName","src":"6912:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13086,"mutability":"mutable","name":"accessor","nameLocation":"6983:8:14","nodeType":"VariableDeclaration","scope":13107,"src":"6975:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13085,"name":"address","nodeType":"ElementaryTypeName","src":"6975:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13088,"mutability":"mutable","name":"initialized","nameLocation":"7194:11:14","nodeType":"VariableDeclaration","scope":13107,"src":"7189:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13087,"name":"bool","nodeType":"ElementaryTypeName","src":"7189:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13090,"mutability":"mutable","name":"oldBalance","nameLocation":"7280:10:14","nodeType":"VariableDeclaration","scope":13107,"src":"7272:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13089,"name":"uint256","nodeType":"ElementaryTypeName","src":"7272:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13092,"mutability":"mutable","name":"newBalance","nameLocation":"7455:10:14","nodeType":"VariableDeclaration","scope":13107,"src":"7447:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13091,"name":"uint256","nodeType":"ElementaryTypeName","src":"7447:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13094,"mutability":"mutable","name":"deployedCode","nameLocation":"7532:12:14","nodeType":"VariableDeclaration","scope":13107,"src":"7526:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13093,"name":"bytes","nodeType":"ElementaryTypeName","src":"7526:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13096,"mutability":"mutable","name":"value","nameLocation":"7616:5:14","nodeType":"VariableDeclaration","scope":13107,"src":"7608:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13095,"name":"uint256","nodeType":"ElementaryTypeName","src":"7608:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13098,"mutability":"mutable","name":"data","nameLocation":"7690:4:14","nodeType":"VariableDeclaration","scope":13107,"src":"7684:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13097,"name":"bytes","nodeType":"ElementaryTypeName","src":"7684:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13100,"mutability":"mutable","name":"reverted","nameLocation":"7785:8:14","nodeType":"VariableDeclaration","scope":13107,"src":"7780:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13099,"name":"bool","nodeType":"ElementaryTypeName","src":"7780:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13104,"mutability":"mutable","name":"storageAccesses","nameLocation":"7907:15:14","nodeType":"VariableDeclaration","scope":13107,"src":"7891:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13121_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":13102,"nodeType":"UserDefinedTypeName","pathNode":{"id":13101,"name":"StorageAccess","nameLocations":["7891:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":13121,"src":"7891:13:14"},"referencedDeclaration":13121,"src":"7891:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$13121_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":13103,"nodeType":"ArrayTypeName","src":"7891:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13121_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":13106,"mutability":"mutable","name":"depth","nameLocation":"8013:5:14","nodeType":"VariableDeclaration","scope":13107,"src":"8006:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13105,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"6195:13:14","scope":16710,"visibility":"public"},{"id":13121,"nodeType":"StructDefinition","src":"8087:425:14","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":13108,"nodeType":"StructuredDocumentation","src":"8031:51:14","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":13110,"mutability":"mutable","name":"account","nameLocation":"8177:7:14","nodeType":"VariableDeclaration","scope":13121,"src":"8169:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13109,"name":"address","nodeType":"ElementaryTypeName","src":"8169:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13112,"mutability":"mutable","name":"slot","nameLocation":"8241:4:14","nodeType":"VariableDeclaration","scope":13121,"src":"8233:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8233:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13114,"mutability":"mutable","name":"isWrite","nameLocation":"8298:7:14","nodeType":"VariableDeclaration","scope":13121,"src":"8293:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13113,"name":"bool","nodeType":"ElementaryTypeName","src":"8293:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13116,"mutability":"mutable","name":"previousValue","nameLocation":"8366:13:14","nodeType":"VariableDeclaration","scope":13121,"src":"8358:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8358:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13118,"mutability":"mutable","name":"newValue","nameLocation":"8435:8:14","nodeType":"VariableDeclaration","scope":13121,"src":"8427:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8427:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13120,"mutability":"mutable","name":"reverted","nameLocation":"8497:8:14","nodeType":"VariableDeclaration","scope":13121,"src":"8492:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13119,"name":"bool","nodeType":"ElementaryTypeName","src":"8492:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"8094:13:14","scope":16710,"visibility":"public"},{"id":13133,"nodeType":"StructDefinition","src":"8563:458:14","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":13122,"nodeType":"StructuredDocumentation","src":"8518:40:14","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":13124,"mutability":"mutable","name":"gasLimit","nameLocation":"8629:8:14","nodeType":"VariableDeclaration","scope":13133,"src":"8622:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13123,"name":"uint64","nodeType":"ElementaryTypeName","src":"8622:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13126,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8685:12:14","nodeType":"VariableDeclaration","scope":13133,"src":"8678:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13125,"name":"uint64","nodeType":"ElementaryTypeName","src":"8678:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13128,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8866:13:14","nodeType":"VariableDeclaration","scope":13133,"src":"8859:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13127,"name":"uint64","nodeType":"ElementaryTypeName","src":"8859:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13130,"mutability":"mutable","name":"gasRefunded","nameLocation":"8934:11:14","nodeType":"VariableDeclaration","scope":13133,"src":"8928:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":13129,"name":"int64","nodeType":"ElementaryTypeName","src":"8928:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":13132,"mutability":"mutable","name":"gasRemaining","nameLocation":"9002:12:14","nodeType":"VariableDeclaration","scope":13133,"src":"8995:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13131,"name":"uint64","nodeType":"ElementaryTypeName","src":"8995:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8570:3:14","scope":16710,"visibility":"public"},{"id":13148,"nodeType":"StructDefinition","src":"9084:847:14","nodes":[],"canonicalName":"VmSafe.DebugStep","documentation":{"id":13134,"nodeType":"StructuredDocumentation","src":"9027:52:14","text":"The result of the `stopDebugTraceRecording` call"},"members":[{"constant":false,"id":13137,"mutability":"mutable","name":"stack","nameLocation":"9313:5:14","nodeType":"VariableDeclaration","scope":13148,"src":"9303:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13135,"name":"uint256","nodeType":"ElementaryTypeName","src":"9303:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13136,"nodeType":"ArrayTypeName","src":"9303:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13139,"mutability":"mutable","name":"memoryInput","nameLocation":"9617:11:14","nodeType":"VariableDeclaration","scope":13148,"src":"9611:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13138,"name":"bytes","nodeType":"ElementaryTypeName","src":"9611:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13141,"mutability":"mutable","name":"opcode","nameLocation":"9685:6:14","nodeType":"VariableDeclaration","scope":13148,"src":"9679:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13140,"name":"uint8","nodeType":"ElementaryTypeName","src":"9679:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13143,"mutability":"mutable","name":"depth","nameLocation":"9747:5:14","nodeType":"VariableDeclaration","scope":13148,"src":"9740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13142,"name":"uint64","nodeType":"ElementaryTypeName","src":"9740:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13145,"mutability":"mutable","name":"isOutOfGas","nameLocation":"9824:10:14","nodeType":"VariableDeclaration","scope":13148,"src":"9819:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13144,"name":"bool","nodeType":"ElementaryTypeName","src":"9819:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13147,"mutability":"mutable","name":"contractAddr","nameLocation":"9912:12:14","nodeType":"VariableDeclaration","scope":13148,"src":"9904:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13146,"name":"address","nodeType":"ElementaryTypeName","src":"9904:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DebugStep","nameLocation":"9091:9:14","scope":16710,"visibility":"public"},{"id":13161,"nodeType":"StructDefinition","src":"9991:600:14","nodes":[],"canonicalName":"VmSafe.BroadcastTxSummary","documentation":{"id":13149,"nodeType":"StructuredDocumentation","src":"9937:49:14","text":"Represents a transaction's broadcast details."},"members":[{"constant":false,"id":13151,"mutability":"mutable","name":"txHash","nameLocation":"10095:6:14","nodeType":"VariableDeclaration","scope":13161,"src":"10087:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10087:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13154,"mutability":"mutable","name":"txType","nameLocation":"10200:6:14","nodeType":"VariableDeclaration","scope":13161,"src":"10184:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$12987","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":13153,"nodeType":"UserDefinedTypeName","pathNode":{"id":13152,"name":"BroadcastTxType","nameLocations":["10184:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":12987,"src":"10184:15:14"},"referencedDeclaration":12987,"src":"10184:15:14","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$12987","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"},{"constant":false,"id":13156,"mutability":"mutable","name":"contractAddress","nameLocation":"10386:15:14","nodeType":"VariableDeclaration","scope":13161,"src":"10378:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13155,"name":"address","nodeType":"ElementaryTypeName","src":"10378:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13158,"mutability":"mutable","name":"blockNumber","nameLocation":"10473:11:14","nodeType":"VariableDeclaration","scope":13161,"src":"10466:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13157,"name":"uint64","nodeType":"ElementaryTypeName","src":"10466:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13160,"mutability":"mutable","name":"success","nameLocation":"10577:7:14","nodeType":"VariableDeclaration","scope":13161,"src":"10572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13159,"name":"bool","nodeType":"ElementaryTypeName","src":"10572:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BroadcastTxSummary","nameLocation":"9998:18:14","scope":16710,"visibility":"public"},{"id":13173,"nodeType":"StructDefinition","src":"10702:605:14","nodes":[],"canonicalName":"VmSafe.SignedDelegation","documentation":{"id":13162,"nodeType":"StructuredDocumentation","src":"10597:100:14","text":"Holds a signed EIP-7702 authorization for an authority account to delegate to an implementation."},"members":[{"constant":false,"id":13164,"mutability":"mutable","name":"v","nameLocation":"10813:1:14","nodeType":"VariableDeclaration","scope":13173,"src":"10807:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13163,"name":"uint8","nodeType":"ElementaryTypeName","src":"10807:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13166,"mutability":"mutable","name":"r","nameLocation":"10876:1:14","nodeType":"VariableDeclaration","scope":13173,"src":"10868:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10868:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13168,"mutability":"mutable","name":"s","nameLocation":"10940:1:14","nodeType":"VariableDeclaration","scope":13173,"src":"10932:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10932:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13170,"mutability":"mutable","name":"nonce","nameLocation":"11112:5:14","nodeType":"VariableDeclaration","scope":13173,"src":"11105:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13169,"name":"uint64","nodeType":"ElementaryTypeName","src":"11105:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13172,"mutability":"mutable","name":"implementation","nameLocation":"11286:14:14","nodeType":"VariableDeclaration","scope":13173,"src":"11278:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13171,"name":"address","nodeType":"ElementaryTypeName","src":"11278:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SignedDelegation","nameLocation":"10709:16:14","scope":16710,"visibility":"public"},{"id":13181,"nodeType":"StructDefinition","src":"11556:373:14","nodes":[],"canonicalName":"VmSafe.PotentialRevert","documentation":{"id":13174,"nodeType":"StructuredDocumentation","src":"11313:238:14","text":"Represents a \"potential\" revert reason from a single subsequent call when using `vm.assumeNoReverts`.\n Reverts that match will result in a FOUNDRY::ASSUME rejection, whereas unmatched reverts will be surfaced\n as normal."},"members":[{"constant":false,"id":13176,"mutability":"mutable","name":"reverter","nameLocation":"11692:8:14","nodeType":"VariableDeclaration","scope":13181,"src":"11684:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13175,"name":"address","nodeType":"ElementaryTypeName","src":"11684:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13178,"mutability":"mutable","name":"partialMatch","nameLocation":"11828:12:14","nodeType":"VariableDeclaration","scope":13181,"src":"11823:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13177,"name":"bool","nodeType":"ElementaryTypeName","src":"11823:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13180,"mutability":"mutable","name":"revertData","nameLocation":"11912:10:14","nodeType":"VariableDeclaration","scope":13181,"src":"11906:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13179,"name":"bytes","nodeType":"ElementaryTypeName","src":"11906:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PotentialRevert","nameLocation":"11563:15:14","scope":16710,"visibility":"public"},{"id":13190,"nodeType":"FunctionDefinition","src":"12072:91:14","nodes":[],"documentation":{"id":13182,"nodeType":"StructuredDocumentation","src":"11968:99:14","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12081:12:14","parameters":{"id":13185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13184,"mutability":"mutable","name":"walletLabel","nameLocation":"12110:11:14","nodeType":"VariableDeclaration","scope":13190,"src":"12094:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13183,"name":"string","nodeType":"ElementaryTypeName","src":"12094:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12093:29:14"},"returnParameters":{"id":13189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13188,"mutability":"mutable","name":"wallet","nameLocation":"12155:6:14","nodeType":"VariableDeclaration","scope":13190,"src":"12141:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13187,"nodeType":"UserDefinedTypeName","pathNode":{"id":13186,"name":"Wallet","nameLocations":["12141:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":13061,"src":"12141:6:14"},"referencedDeclaration":13061,"src":"12141:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12140:22:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13199,"nodeType":"FunctionDefinition","src":"12241:82:14","nodes":[],"documentation":{"id":13191,"nodeType":"StructuredDocumentation","src":"12169:67:14","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12250:12:14","parameters":{"id":13194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13193,"mutability":"mutable","name":"privateKey","nameLocation":"12271:10:14","nodeType":"VariableDeclaration","scope":13199,"src":"12263:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13192,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12262:20:14"},"returnParameters":{"id":13198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13197,"mutability":"mutable","name":"wallet","nameLocation":"12315:6:14","nodeType":"VariableDeclaration","scope":13199,"src":"12301:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13196,"nodeType":"UserDefinedTypeName","pathNode":{"id":13195,"name":"Wallet","nameLocations":["12301:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":13061,"src":"12301:6:14"},"referencedDeclaration":13061,"src":"12301:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12300:22:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13210,"nodeType":"FunctionDefinition","src":"12437:111:14","nodes":[],"documentation":{"id":13200,"nodeType":"StructuredDocumentation","src":"12329:103:14","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12446:12:14","parameters":{"id":13205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13202,"mutability":"mutable","name":"privateKey","nameLocation":"12467:10:14","nodeType":"VariableDeclaration","scope":13210,"src":"12459:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13201,"name":"uint256","nodeType":"ElementaryTypeName","src":"12459:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13204,"mutability":"mutable","name":"walletLabel","nameLocation":"12495:11:14","nodeType":"VariableDeclaration","scope":13210,"src":"12479:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13203,"name":"string","nodeType":"ElementaryTypeName","src":"12479:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12458:49:14"},"returnParameters":{"id":13209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13208,"mutability":"mutable","name":"wallet","nameLocation":"12540:6:14","nodeType":"VariableDeclaration","scope":13210,"src":"12526:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13207,"nodeType":"UserDefinedTypeName","pathNode":{"id":13206,"name":"Wallet","nameLocations":["12526:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":13061,"src":"12526:6:14"},"referencedDeclaration":13061,"src":"12526:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12525:22:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13220,"nodeType":"FunctionDefinition","src":"12696:102:14","nodes":[],"documentation":{"id":13211,"nodeType":"StructuredDocumentation","src":"12554:137:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"12705:9:14","parameters":{"id":13216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13213,"mutability":"mutable","name":"mnemonic","nameLocation":"12731:8:14","nodeType":"VariableDeclaration","scope":13220,"src":"12715:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13212,"name":"string","nodeType":"ElementaryTypeName","src":"12715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13215,"mutability":"mutable","name":"index","nameLocation":"12748:5:14","nodeType":"VariableDeclaration","scope":13220,"src":"12741:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13214,"name":"uint32","nodeType":"ElementaryTypeName","src":"12741:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12714:40:14"},"returnParameters":{"id":13219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13218,"mutability":"mutable","name":"privateKey","nameLocation":"12786:10:14","nodeType":"VariableDeclaration","scope":13220,"src":"12778:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12778:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12777:20:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13232,"nodeType":"FunctionDefinition","src":"12927:158:14","nodes":[],"documentation":{"id":13221,"nodeType":"StructuredDocumentation","src":"12804:118:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"12936:9:14","parameters":{"id":13228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13223,"mutability":"mutable","name":"mnemonic","nameLocation":"12962:8:14","nodeType":"VariableDeclaration","scope":13232,"src":"12946:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13222,"name":"string","nodeType":"ElementaryTypeName","src":"12946:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13225,"mutability":"mutable","name":"derivationPath","nameLocation":"12988:14:14","nodeType":"VariableDeclaration","scope":13232,"src":"12972:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13224,"name":"string","nodeType":"ElementaryTypeName","src":"12972:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13227,"mutability":"mutable","name":"index","nameLocation":"13011:5:14","nodeType":"VariableDeclaration","scope":13232,"src":"13004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13226,"name":"uint32","nodeType":"ElementaryTypeName","src":"13004:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12945:72:14"},"returnParameters":{"id":13231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13230,"mutability":"mutable","name":"privateKey","nameLocation":"13073:10:14","nodeType":"VariableDeclaration","scope":13232,"src":"13065:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13229,"name":"uint256","nodeType":"ElementaryTypeName","src":"13065:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13064:20:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13244,"nodeType":"FunctionDefinition","src":"13259:152:14","nodes":[],"documentation":{"id":13233,"nodeType":"StructuredDocumentation","src":"13091:163:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13268:9:14","parameters":{"id":13240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13235,"mutability":"mutable","name":"mnemonic","nameLocation":"13294:8:14","nodeType":"VariableDeclaration","scope":13244,"src":"13278:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13234,"name":"string","nodeType":"ElementaryTypeName","src":"13278:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13237,"mutability":"mutable","name":"index","nameLocation":"13311:5:14","nodeType":"VariableDeclaration","scope":13244,"src":"13304:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13236,"name":"uint32","nodeType":"ElementaryTypeName","src":"13304:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":13239,"mutability":"mutable","name":"language","nameLocation":"13334:8:14","nodeType":"VariableDeclaration","scope":13244,"src":"13318:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13238,"name":"string","nodeType":"ElementaryTypeName","src":"13318:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13277:66:14"},"returnParameters":{"id":13243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13242,"mutability":"mutable","name":"privateKey","nameLocation":"13399:10:14","nodeType":"VariableDeclaration","scope":13244,"src":"13391:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13241,"name":"uint256","nodeType":"ElementaryTypeName","src":"13391:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13390:20:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13258,"nodeType":"FunctionDefinition","src":"13566:184:14","nodes":[],"documentation":{"id":13245,"nodeType":"StructuredDocumentation","src":"13417:144:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13575:9:14","parameters":{"id":13254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13247,"mutability":"mutable","name":"mnemonic","nameLocation":"13601:8:14","nodeType":"VariableDeclaration","scope":13258,"src":"13585:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13246,"name":"string","nodeType":"ElementaryTypeName","src":"13585:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13249,"mutability":"mutable","name":"derivationPath","nameLocation":"13627:14:14","nodeType":"VariableDeclaration","scope":13258,"src":"13611:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13248,"name":"string","nodeType":"ElementaryTypeName","src":"13611:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13251,"mutability":"mutable","name":"index","nameLocation":"13650:5:14","nodeType":"VariableDeclaration","scope":13258,"src":"13643:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13250,"name":"uint32","nodeType":"ElementaryTypeName","src":"13643:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":13253,"mutability":"mutable","name":"language","nameLocation":"13673:8:14","nodeType":"VariableDeclaration","scope":13258,"src":"13657:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13252,"name":"string","nodeType":"ElementaryTypeName","src":"13657:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13584:98:14"},"returnParameters":{"id":13257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13256,"mutability":"mutable","name":"privateKey","nameLocation":"13738:10:14","nodeType":"VariableDeclaration","scope":13258,"src":"13730:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13255,"name":"uint256","nodeType":"ElementaryTypeName","src":"13730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13729:20:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13268,"nodeType":"FunctionDefinition","src":"13825:106:14","nodes":[],"documentation":{"id":13259,"nodeType":"StructuredDocumentation","src":"13756:64:14","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"13834:13:14","parameters":{"id":13262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13261,"mutability":"mutable","name":"privateKey","nameLocation":"13856:10:14","nodeType":"VariableDeclaration","scope":13268,"src":"13848:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13260,"name":"uint256","nodeType":"ElementaryTypeName","src":"13848:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13847:20:14"},"returnParameters":{"id":13267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13264,"mutability":"mutable","name":"publicKeyX","nameLocation":"13899:10:14","nodeType":"VariableDeclaration","scope":13268,"src":"13891:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13263,"name":"uint256","nodeType":"ElementaryTypeName","src":"13891:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13266,"mutability":"mutable","name":"publicKeyY","nameLocation":"13919:10:14","nodeType":"VariableDeclaration","scope":13268,"src":"13911:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13265,"name":"uint256","nodeType":"ElementaryTypeName","src":"13911:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13890:40:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13276,"nodeType":"FunctionDefinition","src":"14015:76:14","nodes":[],"documentation":{"id":13269,"nodeType":"StructuredDocumentation","src":"13937:73:14","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"14024:11:14","parameters":{"id":13272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13271,"mutability":"mutable","name":"privateKey","nameLocation":"14044:10:14","nodeType":"VariableDeclaration","scope":13276,"src":"14036:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13270,"name":"uint256","nodeType":"ElementaryTypeName","src":"14036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14035:20:14"},"returnParameters":{"id":13275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13274,"mutability":"mutable","name":"keyAddr","nameLocation":"14082:7:14","nodeType":"VariableDeclaration","scope":13276,"src":"14074:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13273,"name":"address","nodeType":"ElementaryTypeName","src":"14074:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14073:17:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13289,"nodeType":"FunctionDefinition","src":"14324:155:14","nodes":[],"documentation":{"id":13277,"nodeType":"StructuredDocumentation","src":"14097:222:14","text":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"97cb9189","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"14333:12:14","parameters":{"id":13284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13279,"mutability":"mutable","name":"mnemonic","nameLocation":"14362:8:14","nodeType":"VariableDeclaration","scope":13289,"src":"14346:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13278,"name":"string","nodeType":"ElementaryTypeName","src":"14346:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13281,"mutability":"mutable","name":"derivationPath","nameLocation":"14388:14:14","nodeType":"VariableDeclaration","scope":13289,"src":"14372:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13280,"name":"string","nodeType":"ElementaryTypeName","src":"14372:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13283,"mutability":"mutable","name":"count","nameLocation":"14411:5:14","nodeType":"VariableDeclaration","scope":13289,"src":"14404:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13282,"name":"uint32","nodeType":"ElementaryTypeName","src":"14404:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14345:72:14"},"returnParameters":{"id":13288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13287,"mutability":"mutable","name":"keyAddrs","nameLocation":"14469:8:14","nodeType":"VariableDeclaration","scope":13289,"src":"14452:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13285,"name":"address","nodeType":"ElementaryTypeName","src":"14452:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13286,"nodeType":"ArrayTypeName","src":"14452:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14451:27:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13304,"nodeType":"FunctionDefinition","src":"14738:203:14","nodes":[],"documentation":{"id":13290,"nodeType":"StructuredDocumentation","src":"14485:248:14","text":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"f8d58eaf","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"14747:12:14","parameters":{"id":13299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13292,"mutability":"mutable","name":"mnemonic","nameLocation":"14785:8:14","nodeType":"VariableDeclaration","scope":13304,"src":"14769:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13291,"name":"string","nodeType":"ElementaryTypeName","src":"14769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13294,"mutability":"mutable","name":"derivationPath","nameLocation":"14819:14:14","nodeType":"VariableDeclaration","scope":13304,"src":"14803:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13293,"name":"string","nodeType":"ElementaryTypeName","src":"14803:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13296,"mutability":"mutable","name":"language","nameLocation":"14859:8:14","nodeType":"VariableDeclaration","scope":13304,"src":"14843:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13295,"name":"string","nodeType":"ElementaryTypeName","src":"14843:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13298,"mutability":"mutable","name":"count","nameLocation":"14884:5:14","nodeType":"VariableDeclaration","scope":13304,"src":"14877:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13297,"name":"uint32","nodeType":"ElementaryTypeName","src":"14877:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14759:136:14"},"returnParameters":{"id":13303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13302,"mutability":"mutable","name":"keyAddrs","nameLocation":"14931:8:14","nodeType":"VariableDeclaration","scope":13304,"src":"14914:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13300,"name":"address","nodeType":"ElementaryTypeName","src":"14914:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13301,"nodeType":"ArrayTypeName","src":"14914:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14913:27:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13317,"nodeType":"FunctionDefinition","src":"15220:102:14","nodes":[],"documentation":{"id":13305,"nodeType":"StructuredDocumentation","src":"14947:268:14","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15229:11:14","parameters":{"id":13311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13308,"mutability":"mutable","name":"wallet","nameLocation":"15257:6:14","nodeType":"VariableDeclaration","scope":13317,"src":"15241:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13307,"nodeType":"UserDefinedTypeName","pathNode":{"id":13306,"name":"Wallet","nameLocations":["15241:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":13061,"src":"15241:6:14"},"referencedDeclaration":13061,"src":"15241:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":13310,"mutability":"mutable","name":"digest","nameLocation":"15273:6:14","nodeType":"VariableDeclaration","scope":13317,"src":"15265:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15265:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15240:40:14"},"returnParameters":{"id":13316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13313,"mutability":"mutable","name":"r","nameLocation":"15307:1:14","nodeType":"VariableDeclaration","scope":13317,"src":"15299:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15299:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13315,"mutability":"mutable","name":"vs","nameLocation":"15318:2:14","nodeType":"VariableDeclaration","scope":13317,"src":"15310:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15310:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15298:23:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13329,"nodeType":"FunctionDefinition","src":"15633:103:14","nodes":[],"documentation":{"id":13318,"nodeType":"StructuredDocumentation","src":"15328:300:14","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15642:11:14","parameters":{"id":13323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13320,"mutability":"mutable","name":"privateKey","nameLocation":"15662:10:14","nodeType":"VariableDeclaration","scope":13329,"src":"15654:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13319,"name":"uint256","nodeType":"ElementaryTypeName","src":"15654:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13322,"mutability":"mutable","name":"digest","nameLocation":"15682:6:14","nodeType":"VariableDeclaration","scope":13329,"src":"15674:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15674:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15653:36:14"},"returnParameters":{"id":13328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13325,"mutability":"mutable","name":"r","nameLocation":"15721:1:14","nodeType":"VariableDeclaration","scope":13329,"src":"15713:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15713:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13327,"mutability":"mutable","name":"vs","nameLocation":"15732:2:14","nodeType":"VariableDeclaration","scope":13329,"src":"15724:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15724:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15712:23:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13339,"nodeType":"FunctionDefinition","src":"16412:83:14","nodes":[],"documentation":{"id":13330,"nodeType":"StructuredDocumentation","src":"15742:665:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16421:11:14","parameters":{"id":13333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13332,"mutability":"mutable","name":"digest","nameLocation":"16441:6:14","nodeType":"VariableDeclaration","scope":13339,"src":"16433:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16433:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16432:16:14"},"returnParameters":{"id":13338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13335,"mutability":"mutable","name":"r","nameLocation":"16480:1:14","nodeType":"VariableDeclaration","scope":13339,"src":"16472:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16472:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13337,"mutability":"mutable","name":"vs","nameLocation":"16491:2:14","nodeType":"VariableDeclaration","scope":13339,"src":"16483:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16483:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16471:23:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13351,"nodeType":"FunctionDefinition","src":"16909:99:14","nodes":[],"documentation":{"id":13340,"nodeType":"StructuredDocumentation","src":"16501:403:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16918:11:14","parameters":{"id":13345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13342,"mutability":"mutable","name":"signer","nameLocation":"16938:6:14","nodeType":"VariableDeclaration","scope":13351,"src":"16930:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13341,"name":"address","nodeType":"ElementaryTypeName","src":"16930:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13344,"mutability":"mutable","name":"digest","nameLocation":"16954:6:14","nodeType":"VariableDeclaration","scope":13351,"src":"16946:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16946:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16929:32:14"},"returnParameters":{"id":13350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13347,"mutability":"mutable","name":"r","nameLocation":"16993:1:14","nodeType":"VariableDeclaration","scope":13351,"src":"16985:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16985:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13349,"mutability":"mutable","name":"vs","nameLocation":"17004:2:14","nodeType":"VariableDeclaration","scope":13351,"src":"16996:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16984:23:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13363,"nodeType":"FunctionDefinition","src":"17082:99:14","nodes":[],"documentation":{"id":13352,"nodeType":"StructuredDocumentation","src":"17014:63:14","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"17091:8:14","parameters":{"id":13357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13354,"mutability":"mutable","name":"privateKey","nameLocation":"17108:10:14","nodeType":"VariableDeclaration","scope":13363,"src":"17100:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13353,"name":"uint256","nodeType":"ElementaryTypeName","src":"17100:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13356,"mutability":"mutable","name":"digest","nameLocation":"17128:6:14","nodeType":"VariableDeclaration","scope":13363,"src":"17120:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17120:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17099:36:14"},"returnParameters":{"id":13362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13359,"mutability":"mutable","name":"r","nameLocation":"17167:1:14","nodeType":"VariableDeclaration","scope":13363,"src":"17159:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17159:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13361,"mutability":"mutable","name":"s","nameLocation":"17178:1:14","nodeType":"VariableDeclaration","scope":13363,"src":"17170:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17170:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17158:22:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13378,"nodeType":"FunctionDefinition","src":"17223:103:14","nodes":[],"documentation":{"id":13364,"nodeType":"StructuredDocumentation","src":"17187:31:14","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17232:4:14","parameters":{"id":13370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13367,"mutability":"mutable","name":"wallet","nameLocation":"17253:6:14","nodeType":"VariableDeclaration","scope":13378,"src":"17237:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13366,"nodeType":"UserDefinedTypeName","pathNode":{"id":13365,"name":"Wallet","nameLocations":["17237:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":13061,"src":"17237:6:14"},"referencedDeclaration":13061,"src":"17237:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":13369,"mutability":"mutable","name":"digest","nameLocation":"17269:6:14","nodeType":"VariableDeclaration","scope":13378,"src":"17261:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17261:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17236:40:14"},"returnParameters":{"id":13377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13372,"mutability":"mutable","name":"v","nameLocation":"17301:1:14","nodeType":"VariableDeclaration","scope":13378,"src":"17295:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13371,"name":"uint8","nodeType":"ElementaryTypeName","src":"17295:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13374,"mutability":"mutable","name":"r","nameLocation":"17312:1:14","nodeType":"VariableDeclaration","scope":13378,"src":"17304:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17304:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13376,"mutability":"mutable","name":"s","nameLocation":"17323:1:14","nodeType":"VariableDeclaration","scope":13378,"src":"17315:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17315:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17294:31:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13392,"nodeType":"FunctionDefinition","src":"17400:104:14","nodes":[],"documentation":{"id":13379,"nodeType":"StructuredDocumentation","src":"17332:63:14","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17409:4:14","parameters":{"id":13384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13381,"mutability":"mutable","name":"privateKey","nameLocation":"17422:10:14","nodeType":"VariableDeclaration","scope":13392,"src":"17414:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13380,"name":"uint256","nodeType":"ElementaryTypeName","src":"17414:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13383,"mutability":"mutable","name":"digest","nameLocation":"17442:6:14","nodeType":"VariableDeclaration","scope":13392,"src":"17434:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17434:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17413:36:14"},"returnParameters":{"id":13391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13386,"mutability":"mutable","name":"v","nameLocation":"17479:1:14","nodeType":"VariableDeclaration","scope":13392,"src":"17473:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13385,"name":"uint8","nodeType":"ElementaryTypeName","src":"17473:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13388,"mutability":"mutable","name":"r","nameLocation":"17490:1:14","nodeType":"VariableDeclaration","scope":13392,"src":"17482:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17482:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13390,"mutability":"mutable","name":"s","nameLocation":"17501:1:14","nodeType":"VariableDeclaration","scope":13392,"src":"17493:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17493:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17472:31:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13404,"nodeType":"FunctionDefinition","src":"17943:84:14","nodes":[],"documentation":{"id":13393,"nodeType":"StructuredDocumentation","src":"17510:428:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17952:4:14","parameters":{"id":13396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13395,"mutability":"mutable","name":"digest","nameLocation":"17965:6:14","nodeType":"VariableDeclaration","scope":13404,"src":"17957:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17957:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17956:16:14"},"returnParameters":{"id":13403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13398,"mutability":"mutable","name":"v","nameLocation":"18002:1:14","nodeType":"VariableDeclaration","scope":13404,"src":"17996:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13397,"name":"uint8","nodeType":"ElementaryTypeName","src":"17996:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13400,"mutability":"mutable","name":"r","nameLocation":"18013:1:14","nodeType":"VariableDeclaration","scope":13404,"src":"18005:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18005:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13402,"mutability":"mutable","name":"s","nameLocation":"18024:1:14","nodeType":"VariableDeclaration","scope":13404,"src":"18016:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18016:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17995:31:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13418,"nodeType":"FunctionDefinition","src":"18204:100:14","nodes":[],"documentation":{"id":13405,"nodeType":"StructuredDocumentation","src":"18033:166:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18213:4:14","parameters":{"id":13410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13407,"mutability":"mutable","name":"signer","nameLocation":"18226:6:14","nodeType":"VariableDeclaration","scope":13418,"src":"18218:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13406,"name":"address","nodeType":"ElementaryTypeName","src":"18218:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13409,"mutability":"mutable","name":"digest","nameLocation":"18242:6:14","nodeType":"VariableDeclaration","scope":13418,"src":"18234:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18234:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18217:32:14"},"returnParameters":{"id":13417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13412,"mutability":"mutable","name":"v","nameLocation":"18279:1:14","nodeType":"VariableDeclaration","scope":13418,"src":"18273:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13411,"name":"uint8","nodeType":"ElementaryTypeName","src":"18273:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13414,"mutability":"mutable","name":"r","nameLocation":"18290:1:14","nodeType":"VariableDeclaration","scope":13418,"src":"18282:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18282:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13416,"mutability":"mutable","name":"s","nameLocation":"18301:1:14","nodeType":"VariableDeclaration","scope":13418,"src":"18293:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18293:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18272:31:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13426,"nodeType":"FunctionDefinition","src":"18491:80:14","nodes":[],"documentation":{"id":13419,"nodeType":"StructuredDocumentation","src":"18348:138:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"18500:10:14","parameters":{"id":13422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13421,"mutability":"mutable","name":"name","nameLocation":"18527:4:14","nodeType":"VariableDeclaration","scope":13426,"src":"18511:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13420,"name":"string","nodeType":"ElementaryTypeName","src":"18511:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18510:22:14"},"returnParameters":{"id":13425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13424,"mutability":"mutable","name":"value","nameLocation":"18564:5:14","nodeType":"VariableDeclaration","scope":13426,"src":"18556:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13423,"name":"address","nodeType":"ElementaryTypeName","src":"18556:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18555:15:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13437,"nodeType":"FunctionDefinition","src":"18754:112:14","nodes":[],"documentation":{"id":13427,"nodeType":"StructuredDocumentation","src":"18577:172:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"18763:10:14","parameters":{"id":13432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13429,"mutability":"mutable","name":"name","nameLocation":"18790:4:14","nodeType":"VariableDeclaration","scope":13437,"src":"18774:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13428,"name":"string","nodeType":"ElementaryTypeName","src":"18774:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13431,"mutability":"mutable","name":"delim","nameLocation":"18812:5:14","nodeType":"VariableDeclaration","scope":13437,"src":"18796:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13430,"name":"string","nodeType":"ElementaryTypeName","src":"18796:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18773:45:14"},"returnParameters":{"id":13436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13435,"mutability":"mutable","name":"value","nameLocation":"18859:5:14","nodeType":"VariableDeclaration","scope":13437,"src":"18842:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13433,"name":"address","nodeType":"ElementaryTypeName","src":"18842:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13434,"nodeType":"ArrayTypeName","src":"18842:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18841:24:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13445,"nodeType":"FunctionDefinition","src":"19012:74:14","nodes":[],"documentation":{"id":13438,"nodeType":"StructuredDocumentation","src":"18872:135:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19021:7:14","parameters":{"id":13441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13440,"mutability":"mutable","name":"name","nameLocation":"19045:4:14","nodeType":"VariableDeclaration","scope":13445,"src":"19029:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13439,"name":"string","nodeType":"ElementaryTypeName","src":"19029:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19028:22:14"},"returnParameters":{"id":13444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13443,"mutability":"mutable","name":"value","nameLocation":"19079:5:14","nodeType":"VariableDeclaration","scope":13445,"src":"19074:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13442,"name":"bool","nodeType":"ElementaryTypeName","src":"19074:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19073:12:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13456,"nodeType":"FunctionDefinition","src":"19266:106:14","nodes":[],"documentation":{"id":13446,"nodeType":"StructuredDocumentation","src":"19092:169:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19275:7:14","parameters":{"id":13451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13448,"mutability":"mutable","name":"name","nameLocation":"19299:4:14","nodeType":"VariableDeclaration","scope":13456,"src":"19283:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13447,"name":"string","nodeType":"ElementaryTypeName","src":"19283:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13450,"mutability":"mutable","name":"delim","nameLocation":"19321:5:14","nodeType":"VariableDeclaration","scope":13456,"src":"19305:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13449,"name":"string","nodeType":"ElementaryTypeName","src":"19305:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19282:45:14"},"returnParameters":{"id":13455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13454,"mutability":"mutable","name":"value","nameLocation":"19365:5:14","nodeType":"VariableDeclaration","scope":13456,"src":"19351:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13452,"name":"bool","nodeType":"ElementaryTypeName","src":"19351:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13453,"nodeType":"ArrayTypeName","src":"19351:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"19350:21:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13464,"nodeType":"FunctionDefinition","src":"19521:80:14","nodes":[],"documentation":{"id":13457,"nodeType":"StructuredDocumentation","src":"19378:138:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"19530:10:14","parameters":{"id":13460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13459,"mutability":"mutable","name":"name","nameLocation":"19557:4:14","nodeType":"VariableDeclaration","scope":13464,"src":"19541:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13458,"name":"string","nodeType":"ElementaryTypeName","src":"19541:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19540:22:14"},"returnParameters":{"id":13463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13462,"mutability":"mutable","name":"value","nameLocation":"19594:5:14","nodeType":"VariableDeclaration","scope":13464,"src":"19586:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19586:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19585:15:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13475,"nodeType":"FunctionDefinition","src":"19784:112:14","nodes":[],"documentation":{"id":13465,"nodeType":"StructuredDocumentation","src":"19607:172:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"19793:10:14","parameters":{"id":13470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13467,"mutability":"mutable","name":"name","nameLocation":"19820:4:14","nodeType":"VariableDeclaration","scope":13475,"src":"19804:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13466,"name":"string","nodeType":"ElementaryTypeName","src":"19804:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13469,"mutability":"mutable","name":"delim","nameLocation":"19842:5:14","nodeType":"VariableDeclaration","scope":13475,"src":"19826:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13468,"name":"string","nodeType":"ElementaryTypeName","src":"19826:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19803:45:14"},"returnParameters":{"id":13474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13473,"mutability":"mutable","name":"value","nameLocation":"19889:5:14","nodeType":"VariableDeclaration","scope":13475,"src":"19872:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19872:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13472,"nodeType":"ArrayTypeName","src":"19872:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"19871:24:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13483,"nodeType":"FunctionDefinition","src":"20043:83:14","nodes":[],"documentation":{"id":13476,"nodeType":"StructuredDocumentation","src":"19902:136:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20052:8:14","parameters":{"id":13479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13478,"mutability":"mutable","name":"name","nameLocation":"20077:4:14","nodeType":"VariableDeclaration","scope":13483,"src":"20061:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13477,"name":"string","nodeType":"ElementaryTypeName","src":"20061:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20060:22:14"},"returnParameters":{"id":13482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13481,"mutability":"mutable","name":"value","nameLocation":"20119:5:14","nodeType":"VariableDeclaration","scope":13483,"src":"20106:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13480,"name":"bytes","nodeType":"ElementaryTypeName","src":"20106:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20105:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13494,"nodeType":"FunctionDefinition","src":"20307:108:14","nodes":[],"documentation":{"id":13484,"nodeType":"StructuredDocumentation","src":"20132:170:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20316:8:14","parameters":{"id":13489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13486,"mutability":"mutable","name":"name","nameLocation":"20341:4:14","nodeType":"VariableDeclaration","scope":13494,"src":"20325:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13485,"name":"string","nodeType":"ElementaryTypeName","src":"20325:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13488,"mutability":"mutable","name":"delim","nameLocation":"20363:5:14","nodeType":"VariableDeclaration","scope":13494,"src":"20347:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13487,"name":"string","nodeType":"ElementaryTypeName","src":"20347:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20324:45:14"},"returnParameters":{"id":13493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13492,"mutability":"mutable","name":"value","nameLocation":"20408:5:14","nodeType":"VariableDeclaration","scope":13494,"src":"20393:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13490,"name":"bytes","nodeType":"ElementaryTypeName","src":"20393:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13491,"nodeType":"ArrayTypeName","src":"20393:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"20392:22:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13502,"nodeType":"FunctionDefinition","src":"20517:77:14","nodes":[],"documentation":{"id":13495,"nodeType":"StructuredDocumentation","src":"20421:91:14","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"20526:9:14","parameters":{"id":13498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13497,"mutability":"mutable","name":"name","nameLocation":"20552:4:14","nodeType":"VariableDeclaration","scope":13502,"src":"20536:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13496,"name":"string","nodeType":"ElementaryTypeName","src":"20536:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20535:22:14"},"returnParameters":{"id":13501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13500,"mutability":"mutable","name":"result","nameLocation":"20586:6:14","nodeType":"VariableDeclaration","scope":13502,"src":"20581:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13499,"name":"bool","nodeType":"ElementaryTypeName","src":"20581:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20580:13:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13510,"nodeType":"FunctionDefinition","src":"20742:75:14","nodes":[],"documentation":{"id":13503,"nodeType":"StructuredDocumentation","src":"20600:137:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"20751:6:14","parameters":{"id":13506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13505,"mutability":"mutable","name":"name","nameLocation":"20774:4:14","nodeType":"VariableDeclaration","scope":13510,"src":"20758:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13504,"name":"string","nodeType":"ElementaryTypeName","src":"20758:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20757:22:14"},"returnParameters":{"id":13509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13508,"mutability":"mutable","name":"value","nameLocation":"20810:5:14","nodeType":"VariableDeclaration","scope":13510,"src":"20803:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13507,"name":"int256","nodeType":"ElementaryTypeName","src":"20803:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20802:14:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13521,"nodeType":"FunctionDefinition","src":"20999:107:14","nodes":[],"documentation":{"id":13511,"nodeType":"StructuredDocumentation","src":"20823:171:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21008:6:14","parameters":{"id":13516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13513,"mutability":"mutable","name":"name","nameLocation":"21031:4:14","nodeType":"VariableDeclaration","scope":13521,"src":"21015:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13512,"name":"string","nodeType":"ElementaryTypeName","src":"21015:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13515,"mutability":"mutable","name":"delim","nameLocation":"21053:5:14","nodeType":"VariableDeclaration","scope":13521,"src":"21037:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13514,"name":"string","nodeType":"ElementaryTypeName","src":"21037:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21014:45:14"},"returnParameters":{"id":13520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13519,"mutability":"mutable","name":"value","nameLocation":"21099:5:14","nodeType":"VariableDeclaration","scope":13521,"src":"21083:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13517,"name":"int256","nodeType":"ElementaryTypeName","src":"21083:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13518,"nodeType":"ArrayTypeName","src":"21083:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21082:23:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13531,"nodeType":"FunctionDefinition","src":"21297:91:14","nodes":[],"documentation":{"id":13522,"nodeType":"StructuredDocumentation","src":"21112:180:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21306:5:14","parameters":{"id":13527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13524,"mutability":"mutable","name":"name","nameLocation":"21328:4:14","nodeType":"VariableDeclaration","scope":13531,"src":"21312:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13523,"name":"string","nodeType":"ElementaryTypeName","src":"21312:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13526,"mutability":"mutable","name":"defaultValue","nameLocation":"21339:12:14","nodeType":"VariableDeclaration","scope":13531,"src":"21334:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13525,"name":"bool","nodeType":"ElementaryTypeName","src":"21334:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21311:41:14"},"returnParameters":{"id":13530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13529,"mutability":"mutable","name":"value","nameLocation":"21381:5:14","nodeType":"VariableDeclaration","scope":13531,"src":"21376:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13528,"name":"bool","nodeType":"ElementaryTypeName","src":"21376:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21375:12:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13541,"nodeType":"FunctionDefinition","src":"21582:97:14","nodes":[],"documentation":{"id":13532,"nodeType":"StructuredDocumentation","src":"21394:183:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21591:5:14","parameters":{"id":13537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13534,"mutability":"mutable","name":"name","nameLocation":"21613:4:14","nodeType":"VariableDeclaration","scope":13541,"src":"21597:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13533,"name":"string","nodeType":"ElementaryTypeName","src":"21597:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13536,"mutability":"mutable","name":"defaultValue","nameLocation":"21627:12:14","nodeType":"VariableDeclaration","scope":13541,"src":"21619:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13535,"name":"uint256","nodeType":"ElementaryTypeName","src":"21619:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21596:44:14"},"returnParameters":{"id":13540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13539,"mutability":"mutable","name":"value","nameLocation":"21672:5:14","nodeType":"VariableDeclaration","scope":13541,"src":"21664:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13538,"name":"uint256","nodeType":"ElementaryTypeName","src":"21664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21663:15:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13555,"nodeType":"FunctionDefinition","src":"21907:164:14","nodes":[],"documentation":{"id":13542,"nodeType":"StructuredDocumentation","src":"21685:217:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21916:5:14","parameters":{"id":13550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13544,"mutability":"mutable","name":"name","nameLocation":"21938:4:14","nodeType":"VariableDeclaration","scope":13555,"src":"21922:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13543,"name":"string","nodeType":"ElementaryTypeName","src":"21922:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13546,"mutability":"mutable","name":"delim","nameLocation":"21960:5:14","nodeType":"VariableDeclaration","scope":13555,"src":"21944:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13545,"name":"string","nodeType":"ElementaryTypeName","src":"21944:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13549,"mutability":"mutable","name":"defaultValue","nameLocation":"21986:12:14","nodeType":"VariableDeclaration","scope":13555,"src":"21967:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13547,"name":"address","nodeType":"ElementaryTypeName","src":"21967:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13548,"nodeType":"ArrayTypeName","src":"21967:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"21921:78:14"},"returnParameters":{"id":13554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13553,"mutability":"mutable","name":"value","nameLocation":"22064:5:14","nodeType":"VariableDeclaration","scope":13555,"src":"22047:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13551,"name":"address","nodeType":"ElementaryTypeName","src":"22047:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13552,"nodeType":"ArrayTypeName","src":"22047:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22046:24:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13569,"nodeType":"FunctionDefinition","src":"22299:164:14","nodes":[],"documentation":{"id":13556,"nodeType":"StructuredDocumentation","src":"22077:217:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22308:5:14","parameters":{"id":13564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13558,"mutability":"mutable","name":"name","nameLocation":"22330:4:14","nodeType":"VariableDeclaration","scope":13569,"src":"22314:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13557,"name":"string","nodeType":"ElementaryTypeName","src":"22314:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13560,"mutability":"mutable","name":"delim","nameLocation":"22352:5:14","nodeType":"VariableDeclaration","scope":13569,"src":"22336:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13559,"name":"string","nodeType":"ElementaryTypeName","src":"22336:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13563,"mutability":"mutable","name":"defaultValue","nameLocation":"22378:12:14","nodeType":"VariableDeclaration","scope":13569,"src":"22359:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22359:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13562,"nodeType":"ArrayTypeName","src":"22359:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22313:78:14"},"returnParameters":{"id":13568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13567,"mutability":"mutable","name":"value","nameLocation":"22456:5:14","nodeType":"VariableDeclaration","scope":13569,"src":"22439:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22439:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13566,"nodeType":"ArrayTypeName","src":"22439:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22438:24:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13583,"nodeType":"FunctionDefinition","src":"22690:162:14","nodes":[],"documentation":{"id":13570,"nodeType":"StructuredDocumentation","src":"22469:216:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22699:5:14","parameters":{"id":13578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13572,"mutability":"mutable","name":"name","nameLocation":"22721:4:14","nodeType":"VariableDeclaration","scope":13583,"src":"22705:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13571,"name":"string","nodeType":"ElementaryTypeName","src":"22705:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13574,"mutability":"mutable","name":"delim","nameLocation":"22743:5:14","nodeType":"VariableDeclaration","scope":13583,"src":"22727:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13573,"name":"string","nodeType":"ElementaryTypeName","src":"22727:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13577,"mutability":"mutable","name":"defaultValue","nameLocation":"22768:12:14","nodeType":"VariableDeclaration","scope":13583,"src":"22750:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13575,"name":"string","nodeType":"ElementaryTypeName","src":"22750:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13576,"nodeType":"ArrayTypeName","src":"22750:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22704:77:14"},"returnParameters":{"id":13582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13581,"mutability":"mutable","name":"value","nameLocation":"22845:5:14","nodeType":"VariableDeclaration","scope":13583,"src":"22829:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13579,"name":"string","nodeType":"ElementaryTypeName","src":"22829:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13580,"nodeType":"ArrayTypeName","src":"22829:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22828:23:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13597,"nodeType":"FunctionDefinition","src":"23078:160:14","nodes":[],"documentation":{"id":13584,"nodeType":"StructuredDocumentation","src":"22858:215:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23087:5:14","parameters":{"id":13592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13586,"mutability":"mutable","name":"name","nameLocation":"23109:4:14","nodeType":"VariableDeclaration","scope":13597,"src":"23093:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13585,"name":"string","nodeType":"ElementaryTypeName","src":"23093:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13588,"mutability":"mutable","name":"delim","nameLocation":"23131:5:14","nodeType":"VariableDeclaration","scope":13597,"src":"23115:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13587,"name":"string","nodeType":"ElementaryTypeName","src":"23115:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13591,"mutability":"mutable","name":"defaultValue","nameLocation":"23155:12:14","nodeType":"VariableDeclaration","scope":13597,"src":"23138:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13589,"name":"bytes","nodeType":"ElementaryTypeName","src":"23138:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13590,"nodeType":"ArrayTypeName","src":"23138:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23092:76:14"},"returnParameters":{"id":13596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13595,"mutability":"mutable","name":"value","nameLocation":"23231:5:14","nodeType":"VariableDeclaration","scope":13597,"src":"23216:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13593,"name":"bytes","nodeType":"ElementaryTypeName","src":"23216:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13594,"nodeType":"ArrayTypeName","src":"23216:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23215:22:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13607,"nodeType":"FunctionDefinition","src":"23431:95:14","nodes":[],"documentation":{"id":13598,"nodeType":"StructuredDocumentation","src":"23244:182:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23440:5:14","parameters":{"id":13603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13600,"mutability":"mutable","name":"name","nameLocation":"23462:4:14","nodeType":"VariableDeclaration","scope":13607,"src":"23446:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13599,"name":"string","nodeType":"ElementaryTypeName","src":"23446:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13602,"mutability":"mutable","name":"defaultValue","nameLocation":"23475:12:14","nodeType":"VariableDeclaration","scope":13607,"src":"23468:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13601,"name":"int256","nodeType":"ElementaryTypeName","src":"23468:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23445:43:14"},"returnParameters":{"id":13606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13605,"mutability":"mutable","name":"value","nameLocation":"23519:5:14","nodeType":"VariableDeclaration","scope":13607,"src":"23512:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13604,"name":"int256","nodeType":"ElementaryTypeName","src":"23512:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23511:14:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13617,"nodeType":"FunctionDefinition","src":"23720:97:14","nodes":[],"documentation":{"id":13608,"nodeType":"StructuredDocumentation","src":"23532:183:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23729:5:14","parameters":{"id":13613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13610,"mutability":"mutable","name":"name","nameLocation":"23751:4:14","nodeType":"VariableDeclaration","scope":13617,"src":"23735:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13609,"name":"string","nodeType":"ElementaryTypeName","src":"23735:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13612,"mutability":"mutable","name":"defaultValue","nameLocation":"23765:12:14","nodeType":"VariableDeclaration","scope":13617,"src":"23757:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13611,"name":"address","nodeType":"ElementaryTypeName","src":"23757:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23734:44:14"},"returnParameters":{"id":13616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13615,"mutability":"mutable","name":"value","nameLocation":"23810:5:14","nodeType":"VariableDeclaration","scope":13617,"src":"23802:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13614,"name":"address","nodeType":"ElementaryTypeName","src":"23802:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23801:15:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13627,"nodeType":"FunctionDefinition","src":"24011:97:14","nodes":[],"documentation":{"id":13618,"nodeType":"StructuredDocumentation","src":"23823:183:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24020:5:14","parameters":{"id":13623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13620,"mutability":"mutable","name":"name","nameLocation":"24042:4:14","nodeType":"VariableDeclaration","scope":13627,"src":"24026:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13619,"name":"string","nodeType":"ElementaryTypeName","src":"24026:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13622,"mutability":"mutable","name":"defaultValue","nameLocation":"24056:12:14","nodeType":"VariableDeclaration","scope":13627,"src":"24048:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24048:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24025:44:14"},"returnParameters":{"id":13626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13625,"mutability":"mutable","name":"value","nameLocation":"24101:5:14","nodeType":"VariableDeclaration","scope":13627,"src":"24093:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24093:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24092:15:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13637,"nodeType":"FunctionDefinition","src":"24301:111:14","nodes":[],"documentation":{"id":13628,"nodeType":"StructuredDocumentation","src":"24114:182:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24310:5:14","parameters":{"id":13633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13630,"mutability":"mutable","name":"name","nameLocation":"24332:4:14","nodeType":"VariableDeclaration","scope":13637,"src":"24316:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13629,"name":"string","nodeType":"ElementaryTypeName","src":"24316:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13632,"mutability":"mutable","name":"defaultValue","nameLocation":"24354:12:14","nodeType":"VariableDeclaration","scope":13637,"src":"24338:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13631,"name":"string","nodeType":"ElementaryTypeName","src":"24338:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24315:52:14"},"returnParameters":{"id":13636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13635,"mutability":"mutable","name":"value","nameLocation":"24405:5:14","nodeType":"VariableDeclaration","scope":13637,"src":"24391:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13634,"name":"string","nodeType":"ElementaryTypeName","src":"24391:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24390:21:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13647,"nodeType":"FunctionDefinition","src":"24604:109:14","nodes":[],"documentation":{"id":13638,"nodeType":"StructuredDocumentation","src":"24418:181:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24613:5:14","parameters":{"id":13643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13640,"mutability":"mutable","name":"name","nameLocation":"24635:4:14","nodeType":"VariableDeclaration","scope":13647,"src":"24619:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13639,"name":"string","nodeType":"ElementaryTypeName","src":"24619:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13642,"mutability":"mutable","name":"defaultValue","nameLocation":"24656:12:14","nodeType":"VariableDeclaration","scope":13647,"src":"24641:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13641,"name":"bytes","nodeType":"ElementaryTypeName","src":"24641:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24618:51:14"},"returnParameters":{"id":13646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13645,"mutability":"mutable","name":"value","nameLocation":"24706:5:14","nodeType":"VariableDeclaration","scope":13647,"src":"24693:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13644,"name":"bytes","nodeType":"ElementaryTypeName","src":"24693:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24692:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13661,"nodeType":"FunctionDefinition","src":"24938:158:14","nodes":[],"documentation":{"id":13648,"nodeType":"StructuredDocumentation","src":"24719:214:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24947:5:14","parameters":{"id":13656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13650,"mutability":"mutable","name":"name","nameLocation":"24969:4:14","nodeType":"VariableDeclaration","scope":13661,"src":"24953:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13649,"name":"string","nodeType":"ElementaryTypeName","src":"24953:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13652,"mutability":"mutable","name":"delim","nameLocation":"24991:5:14","nodeType":"VariableDeclaration","scope":13661,"src":"24975:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13651,"name":"string","nodeType":"ElementaryTypeName","src":"24975:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13655,"mutability":"mutable","name":"defaultValue","nameLocation":"25014:12:14","nodeType":"VariableDeclaration","scope":13661,"src":"24998:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13653,"name":"bool","nodeType":"ElementaryTypeName","src":"24998:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13654,"nodeType":"ArrayTypeName","src":"24998:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"24952:75:14"},"returnParameters":{"id":13660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13659,"mutability":"mutable","name":"value","nameLocation":"25089:5:14","nodeType":"VariableDeclaration","scope":13661,"src":"25075:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13657,"name":"bool","nodeType":"ElementaryTypeName","src":"25075:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13658,"nodeType":"ArrayTypeName","src":"25075:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25074:21:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13675,"nodeType":"FunctionDefinition","src":"25324:164:14","nodes":[],"documentation":{"id":13662,"nodeType":"StructuredDocumentation","src":"25102:217:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25333:5:14","parameters":{"id":13670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13664,"mutability":"mutable","name":"name","nameLocation":"25355:4:14","nodeType":"VariableDeclaration","scope":13675,"src":"25339:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13663,"name":"string","nodeType":"ElementaryTypeName","src":"25339:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13666,"mutability":"mutable","name":"delim","nameLocation":"25377:5:14","nodeType":"VariableDeclaration","scope":13675,"src":"25361:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13665,"name":"string","nodeType":"ElementaryTypeName","src":"25361:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13669,"mutability":"mutable","name":"defaultValue","nameLocation":"25403:12:14","nodeType":"VariableDeclaration","scope":13675,"src":"25384:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13667,"name":"uint256","nodeType":"ElementaryTypeName","src":"25384:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13668,"nodeType":"ArrayTypeName","src":"25384:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25338:78:14"},"returnParameters":{"id":13674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13673,"mutability":"mutable","name":"value","nameLocation":"25481:5:14","nodeType":"VariableDeclaration","scope":13675,"src":"25464:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13671,"name":"uint256","nodeType":"ElementaryTypeName","src":"25464:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13672,"nodeType":"ArrayTypeName","src":"25464:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25463:24:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13689,"nodeType":"FunctionDefinition","src":"25715:162:14","nodes":[],"documentation":{"id":13676,"nodeType":"StructuredDocumentation","src":"25494:216:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25724:5:14","parameters":{"id":13684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13678,"mutability":"mutable","name":"name","nameLocation":"25746:4:14","nodeType":"VariableDeclaration","scope":13689,"src":"25730:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13677,"name":"string","nodeType":"ElementaryTypeName","src":"25730:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13680,"mutability":"mutable","name":"delim","nameLocation":"25768:5:14","nodeType":"VariableDeclaration","scope":13689,"src":"25752:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13679,"name":"string","nodeType":"ElementaryTypeName","src":"25752:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13683,"mutability":"mutable","name":"defaultValue","nameLocation":"25793:12:14","nodeType":"VariableDeclaration","scope":13689,"src":"25775:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13681,"name":"int256","nodeType":"ElementaryTypeName","src":"25775:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13682,"nodeType":"ArrayTypeName","src":"25775:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"25729:77:14"},"returnParameters":{"id":13688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13687,"mutability":"mutable","name":"value","nameLocation":"25870:5:14","nodeType":"VariableDeclaration","scope":13689,"src":"25854:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13685,"name":"int256","nodeType":"ElementaryTypeName","src":"25854:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13686,"nodeType":"ArrayTypeName","src":"25854:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"25853:23:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13697,"nodeType":"FunctionDefinition","src":"26025:85:14","nodes":[],"documentation":{"id":13690,"nodeType":"StructuredDocumentation","src":"25883:137:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26034:9:14","parameters":{"id":13693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13692,"mutability":"mutable","name":"name","nameLocation":"26060:4:14","nodeType":"VariableDeclaration","scope":13697,"src":"26044:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13691,"name":"string","nodeType":"ElementaryTypeName","src":"26044:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26043:22:14"},"returnParameters":{"id":13696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13695,"mutability":"mutable","name":"value","nameLocation":"26103:5:14","nodeType":"VariableDeclaration","scope":13697,"src":"26089:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13694,"name":"string","nodeType":"ElementaryTypeName","src":"26089:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26088:21:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13708,"nodeType":"FunctionDefinition","src":"26292:110:14","nodes":[],"documentation":{"id":13698,"nodeType":"StructuredDocumentation","src":"26116:171:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26301:9:14","parameters":{"id":13703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13700,"mutability":"mutable","name":"name","nameLocation":"26327:4:14","nodeType":"VariableDeclaration","scope":13708,"src":"26311:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13699,"name":"string","nodeType":"ElementaryTypeName","src":"26311:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13702,"mutability":"mutable","name":"delim","nameLocation":"26349:5:14","nodeType":"VariableDeclaration","scope":13708,"src":"26333:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13701,"name":"string","nodeType":"ElementaryTypeName","src":"26333:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26310:45:14"},"returnParameters":{"id":13707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13706,"mutability":"mutable","name":"value","nameLocation":"26395:5:14","nodeType":"VariableDeclaration","scope":13708,"src":"26379:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13704,"name":"string","nodeType":"ElementaryTypeName","src":"26379:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13705,"nodeType":"ArrayTypeName","src":"26379:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"26378:23:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13716,"nodeType":"FunctionDefinition","src":"26551:77:14","nodes":[],"documentation":{"id":13709,"nodeType":"StructuredDocumentation","src":"26408:138:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"26560:7:14","parameters":{"id":13712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13711,"mutability":"mutable","name":"name","nameLocation":"26584:4:14","nodeType":"VariableDeclaration","scope":13716,"src":"26568:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13710,"name":"string","nodeType":"ElementaryTypeName","src":"26568:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26567:22:14"},"returnParameters":{"id":13715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13714,"mutability":"mutable","name":"value","nameLocation":"26621:5:14","nodeType":"VariableDeclaration","scope":13716,"src":"26613:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13713,"name":"uint256","nodeType":"ElementaryTypeName","src":"26613:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26612:15:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13727,"nodeType":"FunctionDefinition","src":"26811:109:14","nodes":[],"documentation":{"id":13717,"nodeType":"StructuredDocumentation","src":"26634:172:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"26820:7:14","parameters":{"id":13722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13719,"mutability":"mutable","name":"name","nameLocation":"26844:4:14","nodeType":"VariableDeclaration","scope":13727,"src":"26828:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13718,"name":"string","nodeType":"ElementaryTypeName","src":"26828:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13721,"mutability":"mutable","name":"delim","nameLocation":"26866:5:14","nodeType":"VariableDeclaration","scope":13727,"src":"26850:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13720,"name":"string","nodeType":"ElementaryTypeName","src":"26850:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26827:45:14"},"returnParameters":{"id":13726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13725,"mutability":"mutable","name":"value","nameLocation":"26913:5:14","nodeType":"VariableDeclaration","scope":13727,"src":"26896:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13723,"name":"uint256","nodeType":"ElementaryTypeName","src":"26896:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13724,"nodeType":"ArrayTypeName","src":"26896:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26895:24:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13736,"nodeType":"FunctionDefinition","src":"26997:77:14","nodes":[],"documentation":{"id":13728,"nodeType":"StructuredDocumentation","src":"26926:66:14","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"27006:9:14","parameters":{"id":13732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13731,"mutability":"mutable","name":"context","nameLocation":"27029:7:14","nodeType":"VariableDeclaration","scope":13736,"src":"27016:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12982","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":13730,"nodeType":"UserDefinedTypeName","pathNode":{"id":13729,"name":"ForgeContext","nameLocations":["27016:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":12982,"src":"27016:12:14"},"referencedDeclaration":12982,"src":"27016:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12982","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"27015:22:14"},"returnParameters":{"id":13735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13734,"mutability":"mutable","name":"result","nameLocation":"27066:6:14","nodeType":"VariableDeclaration","scope":13736,"src":"27061:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13733,"name":"bool","nodeType":"ElementaryTypeName","src":"27061:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27060:13:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13744,"nodeType":"FunctionDefinition","src":"27116:70:14","nodes":[],"documentation":{"id":13737,"nodeType":"StructuredDocumentation","src":"27080:31:14","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"27125:6:14","parameters":{"id":13742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13739,"mutability":"mutable","name":"name","nameLocation":"27148:4:14","nodeType":"VariableDeclaration","scope":13744,"src":"27132:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13738,"name":"string","nodeType":"ElementaryTypeName","src":"27132:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13741,"mutability":"mutable","name":"value","nameLocation":"27170:5:14","nodeType":"VariableDeclaration","scope":13744,"src":"27154:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13740,"name":"string","nodeType":"ElementaryTypeName","src":"27154:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27131:45:14"},"returnParameters":{"id":13743,"nodeType":"ParameterList","parameters":[],"src":"27185:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13756,"nodeType":"FunctionDefinition","src":"27318:109:14","nodes":[],"documentation":{"id":13745,"nodeType":"StructuredDocumentation","src":"27222:91:14","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"27327:8:14","parameters":{"id":13748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13747,"mutability":"mutable","name":"target","nameLocation":"27344:6:14","nodeType":"VariableDeclaration","scope":13756,"src":"27336:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13746,"name":"address","nodeType":"ElementaryTypeName","src":"27336:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27335:16:14"},"returnParameters":{"id":13755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13751,"mutability":"mutable","name":"readSlots","nameLocation":"27387:9:14","nodeType":"VariableDeclaration","scope":13756,"src":"27370:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27370:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13750,"nodeType":"ArrayTypeName","src":"27370:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13754,"mutability":"mutable","name":"writeSlots","nameLocation":"27415:10:14","nodeType":"VariableDeclaration","scope":13756,"src":"27398:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27398:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13753,"nodeType":"ArrayTypeName","src":"27398:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27369:57:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13764,"nodeType":"FunctionDefinition","src":"27483:74:14","nodes":[],"documentation":{"id":13757,"nodeType":"StructuredDocumentation","src":"27433:45:14","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"27492:4:14","parameters":{"id":13760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13759,"mutability":"mutable","name":"privateKey","nameLocation":"27505:10:14","nodeType":"VariableDeclaration","scope":13764,"src":"27497:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13758,"name":"uint256","nodeType":"ElementaryTypeName","src":"27497:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27496:20:14"},"returnParameters":{"id":13763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13762,"mutability":"mutable","name":"keyAddr","nameLocation":"27548:7:14","nodeType":"VariableDeclaration","scope":13764,"src":"27540:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13761,"name":"address","nodeType":"ElementaryTypeName","src":"27540:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27539:17:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13781,"nodeType":"FunctionDefinition","src":"27620:160:14","nodes":[],"documentation":{"id":13765,"nodeType":"StructuredDocumentation","src":"27563:52:14","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"27629:11:14","parameters":{"id":13775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13767,"mutability":"mutable","name":"fromBlock","nameLocation":"27649:9:14","nodeType":"VariableDeclaration","scope":13781,"src":"27641:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13766,"name":"uint256","nodeType":"ElementaryTypeName","src":"27641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13769,"mutability":"mutable","name":"toBlock","nameLocation":"27668:7:14","nodeType":"VariableDeclaration","scope":13781,"src":"27660:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13768,"name":"uint256","nodeType":"ElementaryTypeName","src":"27660:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13771,"mutability":"mutable","name":"target","nameLocation":"27685:6:14","nodeType":"VariableDeclaration","scope":13781,"src":"27677:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13770,"name":"address","nodeType":"ElementaryTypeName","src":"27677:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13774,"mutability":"mutable","name":"topics","nameLocation":"27712:6:14","nodeType":"VariableDeclaration","scope":13781,"src":"27693:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27693:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13773,"nodeType":"ArrayTypeName","src":"27693:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27640:79:14"},"returnParameters":{"id":13780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13779,"mutability":"mutable","name":"logs","nameLocation":"27774:4:14","nodeType":"VariableDeclaration","scope":13781,"src":"27754:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$13023_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":13777,"nodeType":"UserDefinedTypeName","pathNode":{"id":13776,"name":"EthGetLogs","nameLocations":["27754:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":13023,"src":"27754:10:14"},"referencedDeclaration":13023,"src":"27754:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$13023_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":13778,"nodeType":"ArrayTypeName","src":"27754:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$13023_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"27753:26:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13787,"nodeType":"FunctionDefinition","src":"28116:70:14","nodes":[],"documentation":{"id":13782,"nodeType":"StructuredDocumentation","src":"27786:325:14","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized dd by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"28125:14:14","parameters":{"id":13783,"nodeType":"ParameterList","parameters":[],"src":"28139:2:14"},"returnParameters":{"id":13786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13785,"mutability":"mutable","name":"blobBaseFee","nameLocation":"28173:11:14","nodeType":"VariableDeclaration","scope":13787,"src":"28165:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13784,"name":"uint256","nodeType":"ElementaryTypeName","src":"28165:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28164:21:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13793,"nodeType":"FunctionDefinition","src":"28500:65:14","nodes":[],"documentation":{"id":13788,"nodeType":"StructuredDocumentation","src":"28192:303:14","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized dd by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"28509:14:14","parameters":{"id":13789,"nodeType":"ParameterList","parameters":[],"src":"28523:2:14"},"returnParameters":{"id":13792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13791,"mutability":"mutable","name":"height","nameLocation":"28557:6:14","nodeType":"VariableDeclaration","scope":13793,"src":"28549:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13790,"name":"uint256","nodeType":"ElementaryTypeName","src":"28549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28548:16:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13799,"nodeType":"FunctionDefinition","src":"28888:71:14","nodes":[],"documentation":{"id":13794,"nodeType":"StructuredDocumentation","src":"28571:312:14","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized dd by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"28897:17:14","parameters":{"id":13795,"nodeType":"ParameterList","parameters":[],"src":"28914:2:14"},"returnParameters":{"id":13798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13797,"mutability":"mutable","name":"timestamp","nameLocation":"28948:9:14","nodeType":"VariableDeclaration","scope":13799,"src":"28940:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13796,"name":"uint256","nodeType":"ElementaryTypeName","src":"28940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28939:19:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13813,"nodeType":"FunctionDefinition","src":"29052:146:14","nodes":[],"documentation":{"id":13800,"nodeType":"StructuredDocumentation","src":"28965:82:14","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"29061:24:14","parameters":{"id":13805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13802,"mutability":"mutable","name":"target","nameLocation":"29094:6:14","nodeType":"VariableDeclaration","scope":13813,"src":"29086:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13801,"name":"address","nodeType":"ElementaryTypeName","src":"29086:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13804,"mutability":"mutable","name":"elementSlot","nameLocation":"29110:11:14","nodeType":"VariableDeclaration","scope":13813,"src":"29102:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29102:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29085:37:14"},"returnParameters":{"id":13812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13807,"mutability":"mutable","name":"found","nameLocation":"29162:5:14","nodeType":"VariableDeclaration","scope":13813,"src":"29157:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13806,"name":"bool","nodeType":"ElementaryTypeName","src":"29157:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13809,"mutability":"mutable","name":"key","nameLocation":"29177:3:14","nodeType":"VariableDeclaration","scope":13813,"src":"29169:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29169:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13811,"mutability":"mutable","name":"parent","nameLocation":"29190:6:14","nodeType":"VariableDeclaration","scope":13813,"src":"29182:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29182:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29156:41:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13823,"nodeType":"FunctionDefinition","src":"29295:97:14","nodes":[],"documentation":{"id":13814,"nodeType":"StructuredDocumentation","src":"29204:86:14","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"29304:16:14","parameters":{"id":13819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13816,"mutability":"mutable","name":"target","nameLocation":"29329:6:14","nodeType":"VariableDeclaration","scope":13823,"src":"29321:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13815,"name":"address","nodeType":"ElementaryTypeName","src":"29321:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13818,"mutability":"mutable","name":"mappingSlot","nameLocation":"29345:11:14","nodeType":"VariableDeclaration","scope":13823,"src":"29337:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29337:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29320:37:14"},"returnParameters":{"id":13822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13821,"mutability":"mutable","name":"length","nameLocation":"29384:6:14","nodeType":"VariableDeclaration","scope":13823,"src":"29376:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13820,"name":"uint256","nodeType":"ElementaryTypeName","src":"29376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29375:16:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13835,"nodeType":"FunctionDefinition","src":"29596:109:14","nodes":[],"documentation":{"id":13824,"nodeType":"StructuredDocumentation","src":"29398:193:14","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"29605:16:14","parameters":{"id":13831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13826,"mutability":"mutable","name":"target","nameLocation":"29630:6:14","nodeType":"VariableDeclaration","scope":13835,"src":"29622:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13825,"name":"address","nodeType":"ElementaryTypeName","src":"29622:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13828,"mutability":"mutable","name":"mappingSlot","nameLocation":"29646:11:14","nodeType":"VariableDeclaration","scope":13835,"src":"29638:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29638:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13830,"mutability":"mutable","name":"idx","nameLocation":"29667:3:14","nodeType":"VariableDeclaration","scope":13835,"src":"29659:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13829,"name":"uint256","nodeType":"ElementaryTypeName","src":"29659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29621:50:14"},"returnParameters":{"id":13834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13833,"mutability":"mutable","name":"value","nameLocation":"29698:5:14","nodeType":"VariableDeclaration","scope":13835,"src":"29690:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29690:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29689:15:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13843,"nodeType":"FunctionDefinition","src":"29749:72:14","nodes":[],"documentation":{"id":13836,"nodeType":"StructuredDocumentation","src":"29711:33:14","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"29758:8:14","parameters":{"id":13839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13838,"mutability":"mutable","name":"account","nameLocation":"29775:7:14","nodeType":"VariableDeclaration","scope":13843,"src":"29767:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13837,"name":"address","nodeType":"ElementaryTypeName","src":"29767:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29766:17:14"},"returnParameters":{"id":13842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13841,"mutability":"mutable","name":"nonce","nameLocation":"29814:5:14","nodeType":"VariableDeclaration","scope":13843,"src":"29807:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13840,"name":"uint64","nodeType":"ElementaryTypeName","src":"29807:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"29806:14:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13852,"nodeType":"FunctionDefinition","src":"29864:74:14","nodes":[],"documentation":{"id":13844,"nodeType":"StructuredDocumentation","src":"29827:32:14","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"29873:8:14","parameters":{"id":13848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13847,"mutability":"mutable","name":"wallet","nameLocation":"29898:6:14","nodeType":"VariableDeclaration","scope":13852,"src":"29882:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13846,"nodeType":"UserDefinedTypeName","pathNode":{"id":13845,"name":"Wallet","nameLocations":["29882:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":13061,"src":"29882:6:14"},"referencedDeclaration":13061,"src":"29882:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13061_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"29881:24:14"},"returnParameters":{"id":13851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13850,"mutability":"mutable","name":"nonce","nameLocation":"29931:5:14","nodeType":"VariableDeclaration","scope":13852,"src":"29924:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13849,"name":"uint64","nodeType":"ElementaryTypeName","src":"29924:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"29923:14:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13860,"nodeType":"FunctionDefinition","src":"29980:64:14","nodes":[],"documentation":{"id":13853,"nodeType":"StructuredDocumentation","src":"29944:31:14","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"29989:15:14","parameters":{"id":13854,"nodeType":"ParameterList","parameters":[],"src":"30004:2:14"},"returnParameters":{"id":13859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13858,"mutability":"mutable","name":"logs","nameLocation":"30038:4:14","nodeType":"VariableDeclaration","scope":13860,"src":"30025:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12996_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":13856,"nodeType":"UserDefinedTypeName","pathNode":{"id":13855,"name":"Log","nameLocations":["30025:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":12996,"src":"30025:3:14"},"referencedDeclaration":12996,"src":"30025:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12996_storage_ptr","typeString":"struct VmSafe.Log"}},"id":13857,"nodeType":"ArrayTypeName","src":"30025:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12996_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"30024:19:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13866,"nodeType":"FunctionDefinition","src":"30129:67:14","nodes":[],"documentation":{"id":13861,"nodeType":"StructuredDocumentation","src":"30050:74:14","text":"Returns state diffs from current `vm.startStateDiffRecording` session."},"functionSelector":"80df01cc","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiff","nameLocation":"30138:12:14","parameters":{"id":13862,"nodeType":"ParameterList","parameters":[],"src":"30150:2:14"},"returnParameters":{"id":13865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13864,"mutability":"mutable","name":"diff","nameLocation":"30190:4:14","nodeType":"VariableDeclaration","scope":13866,"src":"30176:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13863,"name":"string","nodeType":"ElementaryTypeName","src":"30176:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30175:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13872,"nodeType":"FunctionDefinition","src":"30297:71:14","nodes":[],"documentation":{"id":13867,"nodeType":"StructuredDocumentation","src":"30202:90:14","text":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"functionSelector":"f54fe009","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiffJson","nameLocation":"30306:16:14","parameters":{"id":13868,"nodeType":"ParameterList","parameters":[],"src":"30322:2:14"},"returnParameters":{"id":13871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13870,"mutability":"mutable","name":"diff","nameLocation":"30362:4:14","nodeType":"VariableDeclaration","scope":13872,"src":"30348:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13869,"name":"string","nodeType":"ElementaryTypeName","src":"30348:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30347:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13879,"nodeType":"FunctionDefinition","src":"30446:62:14","nodes":[],"documentation":{"id":13873,"nodeType":"StructuredDocumentation","src":"30374:67:14","text":"Gets the gas used in the last call from the callee perspective."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"30455:11:14","parameters":{"id":13874,"nodeType":"ParameterList","parameters":[],"src":"30466:2:14"},"returnParameters":{"id":13878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13877,"mutability":"mutable","name":"gas","nameLocation":"30503:3:14","nodeType":"VariableDeclaration","scope":13879,"src":"30492:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13133_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":13876,"nodeType":"UserDefinedTypeName","pathNode":{"id":13875,"name":"Gas","nameLocations":["30492:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":13133,"src":"30492:3:14"},"referencedDeclaration":13133,"src":"30492:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13133_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"30491:16:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13889,"nodeType":"FunctionDefinition","src":"30560:81:14","nodes":[],"documentation":{"id":13880,"nodeType":"StructuredDocumentation","src":"30514:41:14","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"30569:4:14","parameters":{"id":13885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13882,"mutability":"mutable","name":"target","nameLocation":"30582:6:14","nodeType":"VariableDeclaration","scope":13889,"src":"30574:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13881,"name":"address","nodeType":"ElementaryTypeName","src":"30574:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13884,"mutability":"mutable","name":"slot","nameLocation":"30598:4:14","nodeType":"VariableDeclaration","scope":13889,"src":"30590:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30590:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30573:30:14"},"returnParameters":{"id":13888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13887,"mutability":"mutable","name":"data","nameLocation":"30635:4:14","nodeType":"VariableDeclaration","scope":13889,"src":"30627:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30627:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30626:14:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13893,"nodeType":"FunctionDefinition","src":"30732:37:14","nodes":[],"documentation":{"id":13890,"nodeType":"StructuredDocumentation","src":"30647:80:14","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"30741:16:14","parameters":{"id":13891,"nodeType":"ParameterList","parameters":[],"src":"30757:2:14"},"returnParameters":{"id":13892,"nodeType":"ParameterList","parameters":[],"src":"30768:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13897,"nodeType":"FunctionDefinition","src":"30821:27:14","nodes":[],"documentation":{"id":13894,"nodeType":"StructuredDocumentation","src":"30775:41:14","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"30830:6:14","parameters":{"id":13895,"nodeType":"ParameterList","parameters":[],"src":"30836:2:14"},"returnParameters":{"id":13896,"nodeType":"ParameterList","parameters":[],"src":"30847:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13901,"nodeType":"FunctionDefinition","src":"30895:31:14","nodes":[],"documentation":{"id":13898,"nodeType":"StructuredDocumentation","src":"30854:36:14","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"30904:10:14","parameters":{"id":13899,"nodeType":"ParameterList","parameters":[],"src":"30914:2:14"},"returnParameters":{"id":13900,"nodeType":"ParameterList","parameters":[],"src":"30925:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13905,"nodeType":"FunctionDefinition","src":"30997:37:14","nodes":[],"documentation":{"id":13902,"nodeType":"StructuredDocumentation","src":"30932:60:14","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"31006:16:14","parameters":{"id":13903,"nodeType":"ParameterList","parameters":[],"src":"31022:2:14"},"returnParameters":{"id":13904,"nodeType":"ParameterList","parameters":[],"src":"31033:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13909,"nodeType":"FunctionDefinition","src":"31124:38:14","nodes":[],"documentation":{"id":13906,"nodeType":"StructuredDocumentation","src":"31040:79:14","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"31133:17:14","parameters":{"id":13907,"nodeType":"ParameterList","parameters":[],"src":"31150:2:14"},"returnParameters":{"id":13908,"nodeType":"ParameterList","parameters":[],"src":"31161:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13919,"nodeType":"FunctionDefinition","src":"31239:98:14","nodes":[],"documentation":{"id":13910,"nodeType":"StructuredDocumentation","src":"31168:66:14","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"31248:3:14","parameters":{"id":13915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13912,"mutability":"mutable","name":"method","nameLocation":"31268:6:14","nodeType":"VariableDeclaration","scope":13919,"src":"31252:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13911,"name":"string","nodeType":"ElementaryTypeName","src":"31252:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13914,"mutability":"mutable","name":"params","nameLocation":"31292:6:14","nodeType":"VariableDeclaration","scope":13919,"src":"31276:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13913,"name":"string","nodeType":"ElementaryTypeName","src":"31276:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31251:48:14"},"returnParameters":{"id":13918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13917,"mutability":"mutable","name":"data","nameLocation":"31331:4:14","nodeType":"VariableDeclaration","scope":13919,"src":"31318:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13916,"name":"bytes","nodeType":"ElementaryTypeName","src":"31318:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31317:19:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13931,"nodeType":"FunctionDefinition","src":"31412:142:14","nodes":[],"documentation":{"id":13920,"nodeType":"StructuredDocumentation","src":"31343:64:14","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"31421:3:14","parameters":{"id":13927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13922,"mutability":"mutable","name":"urlOrAlias","nameLocation":"31441:10:14","nodeType":"VariableDeclaration","scope":13931,"src":"31425:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13921,"name":"string","nodeType":"ElementaryTypeName","src":"31425:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13924,"mutability":"mutable","name":"method","nameLocation":"31469:6:14","nodeType":"VariableDeclaration","scope":13931,"src":"31453:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13923,"name":"string","nodeType":"ElementaryTypeName","src":"31453:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13926,"mutability":"mutable","name":"params","nameLocation":"31493:6:14","nodeType":"VariableDeclaration","scope":13931,"src":"31477:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13925,"name":"string","nodeType":"ElementaryTypeName","src":"31477:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31424:76:14"},"returnParameters":{"id":13930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13929,"mutability":"mutable","name":"data","nameLocation":"31548:4:14","nodeType":"VariableDeclaration","scope":13931,"src":"31535:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13928,"name":"bytes","nodeType":"ElementaryTypeName","src":"31535:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31534:19:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13935,"nodeType":"FunctionDefinition","src":"31608:45:14","nodes":[],"documentation":{"id":13932,"nodeType":"StructuredDocumentation","src":"31560:43:14","text":"Records the debug trace during the run."},"functionSelector":"419c8832","implemented":false,"kind":"function","modifiers":[],"name":"startDebugTraceRecording","nameLocation":"31617:24:14","parameters":{"id":13933,"nodeType":"ParameterList","parameters":[],"src":"31641:2:14"},"returnParameters":{"id":13934,"nodeType":"ParameterList","parameters":[],"src":"31652:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13939,"nodeType":"FunctionDefinition","src":"31721:42:14","nodes":[],"documentation":{"id":13936,"nodeType":"StructuredDocumentation","src":"31659:57:14","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"31730:21:14","parameters":{"id":13937,"nodeType":"ParameterList","parameters":[],"src":"31751:2:14"},"returnParameters":{"id":13938,"nodeType":"ParameterList","parameters":[],"src":"31762:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13943,"nodeType":"FunctionDefinition","src":"31907:44:14","nodes":[],"documentation":{"id":13940,"nodeType":"StructuredDocumentation","src":"31769:133:14","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"31916:23:14","parameters":{"id":13941,"nodeType":"ParameterList","parameters":[],"src":"31939:2:14"},"returnParameters":{"id":13942,"nodeType":"ParameterList","parameters":[],"src":"31950:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13951,"nodeType":"FunctionDefinition","src":"32030:87:14","nodes":[],"documentation":{"id":13944,"nodeType":"StructuredDocumentation","src":"31957:68:14","text":"Stop debug trace recording and returns the recorded debug trace."},"functionSelector":"ced398a2","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnDebugTraceRecording","nameLocation":"32039:32:14","parameters":{"id":13945,"nodeType":"ParameterList","parameters":[],"src":"32071:2:14"},"returnParameters":{"id":13950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13949,"mutability":"mutable","name":"step","nameLocation":"32111:4:14","nodeType":"VariableDeclaration","scope":13951,"src":"32092:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$13148_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DebugStep[]"},"typeName":{"baseType":{"id":13947,"nodeType":"UserDefinedTypeName","pathNode":{"id":13946,"name":"DebugStep","nameLocations":["32092:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":13148,"src":"32092:9:14"},"referencedDeclaration":13148,"src":"32092:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_DebugStep_$13148_storage_ptr","typeString":"struct VmSafe.DebugStep"}},"id":13948,"nodeType":"ArrayTypeName","src":"32092:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$13148_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DebugStep[]"}},"visibility":"internal"}],"src":"32091:25:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13959,"nodeType":"FunctionDefinition","src":"32225:92:14","nodes":[],"documentation":{"id":13952,"nodeType":"StructuredDocumentation","src":"32123:97:14","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"32234:22:14","parameters":{"id":13953,"nodeType":"ParameterList","parameters":[],"src":"32256:2:14"},"returnParameters":{"id":13958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13957,"mutability":"mutable","name":"accountAccesses","nameLocation":"32300:15:14","nodeType":"VariableDeclaration","scope":13959,"src":"32277:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13107_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":13955,"nodeType":"UserDefinedTypeName","pathNode":{"id":13954,"name":"AccountAccess","nameLocations":["32277:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":13107,"src":"32277:13:14"},"referencedDeclaration":13107,"src":"32277:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$13107_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":13956,"nodeType":"ArrayTypeName","src":"32277:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13107_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"32276:40:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13963,"nodeType":"FunctionDefinition","src":"32413:41:14","nodes":[],"documentation":{"id":13960,"nodeType":"StructuredDocumentation","src":"32323:85:14","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"32422:20:14","parameters":{"id":13961,"nodeType":"ParameterList","parameters":[],"src":"32442:2:14"},"returnParameters":{"id":13962,"nodeType":"ParameterList","parameters":[],"src":"32453:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13969,"nodeType":"FunctionDefinition","src":"32653:50:14","nodes":[],"documentation":{"id":13964,"nodeType":"StructuredDocumentation","src":"32497:151:14","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"32662:9:14","parameters":{"id":13967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13966,"mutability":"mutable","name":"path","nameLocation":"32688:4:14","nodeType":"VariableDeclaration","scope":13969,"src":"32672:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13965,"name":"string","nodeType":"ElementaryTypeName","src":"32672:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32671:22:14"},"returnParameters":{"id":13968,"nodeType":"ParameterList","parameters":[],"src":"32702:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13979,"nodeType":"FunctionDefinition","src":"33018:93:14","nodes":[],"documentation":{"id":13970,"nodeType":"StructuredDocumentation","src":"32709:304:14","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"33027:8:14","parameters":{"id":13975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13972,"mutability":"mutable","name":"from","nameLocation":"33052:4:14","nodeType":"VariableDeclaration","scope":13979,"src":"33036:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13971,"name":"string","nodeType":"ElementaryTypeName","src":"33036:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13974,"mutability":"mutable","name":"to","nameLocation":"33074:2:14","nodeType":"VariableDeclaration","scope":13979,"src":"33058:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13973,"name":"string","nodeType":"ElementaryTypeName","src":"33058:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33035:42:14"},"returnParameters":{"id":13978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13977,"mutability":"mutable","name":"copied","nameLocation":"33103:6:14","nodeType":"VariableDeclaration","scope":13979,"src":"33096:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13976,"name":"uint64","nodeType":"ElementaryTypeName","src":"33096:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"33095:15:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13987,"nodeType":"FunctionDefinition","src":"33516:66:14","nodes":[],"documentation":{"id":13980,"nodeType":"StructuredDocumentation","src":"33117:394:14","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"33525:9:14","parameters":{"id":13985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13982,"mutability":"mutable","name":"path","nameLocation":"33551:4:14","nodeType":"VariableDeclaration","scope":13987,"src":"33535:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13981,"name":"string","nodeType":"ElementaryTypeName","src":"33535:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13984,"mutability":"mutable","name":"recursive","nameLocation":"33562:9:14","nodeType":"VariableDeclaration","scope":13987,"src":"33557:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13983,"name":"bool","nodeType":"ElementaryTypeName","src":"33557:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33534:38:14"},"returnParameters":{"id":13986,"nodeType":"ParameterList","parameters":[],"src":"33581:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13995,"nodeType":"FunctionDefinition","src":"33812:93:14","nodes":[],"documentation":{"id":13988,"nodeType":"StructuredDocumentation","src":"33588:219:14","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"33821:10:14","parameters":{"id":13991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13990,"mutability":"mutable","name":"artifactPath","nameLocation":"33848:12:14","nodeType":"VariableDeclaration","scope":13995,"src":"33832:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13989,"name":"string","nodeType":"ElementaryTypeName","src":"33832:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33831:30:14"},"returnParameters":{"id":13994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13993,"mutability":"mutable","name":"deployedAddress","nameLocation":"33888:15:14","nodeType":"VariableDeclaration","scope":13995,"src":"33880:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13992,"name":"address","nodeType":"ElementaryTypeName","src":"33880:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33879:25:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14005,"nodeType":"FunctionDefinition","src":"34199:141:14","nodes":[],"documentation":{"id":13996,"nodeType":"StructuredDocumentation","src":"33911:283:14","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"34208:10:14","parameters":{"id":14001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13998,"mutability":"mutable","name":"artifactPath","nameLocation":"34235:12:14","nodeType":"VariableDeclaration","scope":14005,"src":"34219:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13997,"name":"string","nodeType":"ElementaryTypeName","src":"34219:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14000,"mutability":"mutable","name":"constructorArgs","nameLocation":"34264:15:14","nodeType":"VariableDeclaration","scope":14005,"src":"34249:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13999,"name":"bytes","nodeType":"ElementaryTypeName","src":"34249:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34218:62:14"},"returnParameters":{"id":14004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14003,"mutability":"mutable","name":"deployedAddress","nameLocation":"34323:15:14","nodeType":"VariableDeclaration","scope":14005,"src":"34315:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14002,"name":"address","nodeType":"ElementaryTypeName","src":"34315:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34314:25:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14013,"nodeType":"FunctionDefinition","src":"34435:74:14","nodes":[],"documentation":{"id":14006,"nodeType":"StructuredDocumentation","src":"34346:84:14","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"34444:6:14","parameters":{"id":14009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14008,"mutability":"mutable","name":"path","nameLocation":"34467:4:14","nodeType":"VariableDeclaration","scope":14013,"src":"34451:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14007,"name":"string","nodeType":"ElementaryTypeName","src":"34451:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34450:22:14"},"returnParameters":{"id":14012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14011,"mutability":"mutable","name":"result","nameLocation":"34501:6:14","nodeType":"VariableDeclaration","scope":14013,"src":"34496:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14010,"name":"bool","nodeType":"ElementaryTypeName","src":"34496:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34495:13:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14022,"nodeType":"FunctionDefinition","src":"34574:84:14","nodes":[],"documentation":{"id":14014,"nodeType":"StructuredDocumentation","src":"34515:54:14","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"34583:3:14","parameters":{"id":14018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14017,"mutability":"mutable","name":"commandInput","nameLocation":"34605:12:14","nodeType":"VariableDeclaration","scope":14022,"src":"34587:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14015,"name":"string","nodeType":"ElementaryTypeName","src":"34587:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14016,"nodeType":"ArrayTypeName","src":"34587:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"34586:32:14"},"returnParameters":{"id":14021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14020,"mutability":"mutable","name":"result","nameLocation":"34650:6:14","nodeType":"VariableDeclaration","scope":14022,"src":"34637:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14019,"name":"bytes","nodeType":"ElementaryTypeName","src":"34637:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34636:21:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14031,"nodeType":"FunctionDefinition","src":"34757:93:14","nodes":[],"documentation":{"id":14023,"nodeType":"StructuredDocumentation","src":"34664:88:14","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"34766:10:14","parameters":{"id":14026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14025,"mutability":"mutable","name":"path","nameLocation":"34793:4:14","nodeType":"VariableDeclaration","scope":14031,"src":"34777:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14024,"name":"string","nodeType":"ElementaryTypeName","src":"34777:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34776:22:14"},"returnParameters":{"id":14030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14029,"mutability":"mutable","name":"metadata","nameLocation":"34840:8:14","nodeType":"VariableDeclaration","scope":14031,"src":"34822:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13051_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":14028,"nodeType":"UserDefinedTypeName","pathNode":{"id":14027,"name":"FsMetadata","nameLocations":["34822:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":13051,"src":"34822:10:14"},"referencedDeclaration":13051,"src":"34822:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13051_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"34821:28:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14039,"nodeType":"FunctionDefinition","src":"34919:95:14","nodes":[],"documentation":{"id":14032,"nodeType":"StructuredDocumentation","src":"34856:58:14","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"34928:21:14","parameters":{"id":14035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14034,"mutability":"mutable","name":"code","nameLocation":"34965:4:14","nodeType":"VariableDeclaration","scope":14039,"src":"34950:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14033,"name":"bytes","nodeType":"ElementaryTypeName","src":"34950:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34949:21:14"},"returnParameters":{"id":14038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14037,"mutability":"mutable","name":"path","nameLocation":"35008:4:14","nodeType":"VariableDeclaration","scope":14039,"src":"34994:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14036,"name":"string","nodeType":"ElementaryTypeName","src":"34994:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34993:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14047,"nodeType":"FunctionDefinition","src":"35091:111:14","nodes":[],"documentation":{"id":14040,"nodeType":"StructuredDocumentation","src":"35020:66:14","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"35100:29:14","parameters":{"id":14043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14042,"mutability":"mutable","name":"deployedCode","nameLocation":"35145:12:14","nodeType":"VariableDeclaration","scope":14047,"src":"35130:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14041,"name":"bytes","nodeType":"ElementaryTypeName","src":"35130:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35129:29:14"},"returnParameters":{"id":14046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14045,"mutability":"mutable","name":"path","nameLocation":"35196:4:14","nodeType":"VariableDeclaration","scope":14047,"src":"35182:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14044,"name":"string","nodeType":"ElementaryTypeName","src":"35182:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35181:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14061,"nodeType":"FunctionDefinition","src":"35497:166:14","nodes":[],"documentation":{"id":14048,"nodeType":"StructuredDocumentation","src":"35208:284:14","text":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`.\n For example:\n The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`.\n The most recent call can be fetched by passing `txType` as `CALL`."},"functionSelector":"3dc90cb3","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcast","nameLocation":"35506:12:14","parameters":{"id":14056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14050,"mutability":"mutable","name":"contractName","nameLocation":"35535:12:14","nodeType":"VariableDeclaration","scope":14061,"src":"35519:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14049,"name":"string","nodeType":"ElementaryTypeName","src":"35519:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14052,"mutability":"mutable","name":"chainId","nameLocation":"35556:7:14","nodeType":"VariableDeclaration","scope":14061,"src":"35549:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14051,"name":"uint64","nodeType":"ElementaryTypeName","src":"35549:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14055,"mutability":"mutable","name":"txType","nameLocation":"35581:6:14","nodeType":"VariableDeclaration","scope":14061,"src":"35565:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$12987","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":14054,"nodeType":"UserDefinedTypeName","pathNode":{"id":14053,"name":"BroadcastTxType","nameLocations":["35565:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":12987,"src":"35565:15:14"},"referencedDeclaration":12987,"src":"35565:15:14","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$12987","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"35518:70:14"},"returnParameters":{"id":14060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14061,"src":"35636:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13161_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary"},"typeName":{"id":14058,"nodeType":"UserDefinedTypeName","pathNode":{"id":14057,"name":"BroadcastTxSummary","nameLocations":["35636:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":13161,"src":"35636:18:14"},"referencedDeclaration":13161,"src":"35636:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13161_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"visibility":"internal"}],"src":"35635:27:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14076,"nodeType":"FunctionDefinition","src":"35922:169:14","nodes":[],"documentation":{"id":14062,"nodeType":"StructuredDocumentation","src":"35669:248:14","text":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f7afe919","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"35931:13:14","parameters":{"id":14070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14064,"mutability":"mutable","name":"contractName","nameLocation":"35961:12:14","nodeType":"VariableDeclaration","scope":14076,"src":"35945:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14063,"name":"string","nodeType":"ElementaryTypeName","src":"35945:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14066,"mutability":"mutable","name":"chainId","nameLocation":"35982:7:14","nodeType":"VariableDeclaration","scope":14076,"src":"35975:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14065,"name":"uint64","nodeType":"ElementaryTypeName","src":"35975:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14069,"mutability":"mutable","name":"txType","nameLocation":"36007:6:14","nodeType":"VariableDeclaration","scope":14076,"src":"35991:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$12987","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":14068,"nodeType":"UserDefinedTypeName","pathNode":{"id":14067,"name":"BroadcastTxType","nameLocations":["35991:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":12987,"src":"35991:15:14"},"referencedDeclaration":12987,"src":"35991:15:14","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$12987","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"35944:70:14"},"returnParameters":{"id":14075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14076,"src":"36062:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13161_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":14072,"nodeType":"UserDefinedTypeName","pathNode":{"id":14071,"name":"BroadcastTxSummary","nameLocations":["36062:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":13161,"src":"36062:18:14"},"referencedDeclaration":13161,"src":"36062:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13161_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":14073,"nodeType":"ArrayTypeName","src":"36062:20:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13161_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"36061:29:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14088,"nodeType":"FunctionDefinition","src":"36322:145:14","nodes":[],"documentation":{"id":14077,"nodeType":"StructuredDocumentation","src":"36097:220:14","text":"Returns all broadcasts for the given contract on `chainId`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f2fa4a26","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"36331:13:14","parameters":{"id":14082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14079,"mutability":"mutable","name":"contractName","nameLocation":"36361:12:14","nodeType":"VariableDeclaration","scope":14088,"src":"36345:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14078,"name":"string","nodeType":"ElementaryTypeName","src":"36345:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14081,"mutability":"mutable","name":"chainId","nameLocation":"36382:7:14","nodeType":"VariableDeclaration","scope":14088,"src":"36375:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14080,"name":"uint64","nodeType":"ElementaryTypeName","src":"36375:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"36344:46:14"},"returnParameters":{"id":14087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14088,"src":"36438:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13161_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":14084,"nodeType":"UserDefinedTypeName","pathNode":{"id":14083,"name":"BroadcastTxSummary","nameLocations":["36438:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":13161,"src":"36438:18:14"},"referencedDeclaration":13161,"src":"36438:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13161_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":14085,"nodeType":"ArrayTypeName","src":"36438:20:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13161_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"36437:29:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14096,"nodeType":"FunctionDefinition","src":"36705:101:14","nodes":[],"documentation":{"id":14089,"nodeType":"StructuredDocumentation","src":"36473:227:14","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"36714:7:14","parameters":{"id":14092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14091,"mutability":"mutable","name":"artifactPath","nameLocation":"36738:12:14","nodeType":"VariableDeclaration","scope":14096,"src":"36722:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14090,"name":"string","nodeType":"ElementaryTypeName","src":"36722:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36721:30:14"},"returnParameters":{"id":14095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14094,"mutability":"mutable","name":"creationBytecode","nameLocation":"36788:16:14","nodeType":"VariableDeclaration","scope":14096,"src":"36775:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14093,"name":"bytes","nodeType":"ElementaryTypeName","src":"36775:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36774:31:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14104,"nodeType":"FunctionDefinition","src":"37044:108:14","nodes":[],"documentation":{"id":14097,"nodeType":"StructuredDocumentation","src":"36812:227:14","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"37053:15:14","parameters":{"id":14100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14099,"mutability":"mutable","name":"artifactPath","nameLocation":"37085:12:14","nodeType":"VariableDeclaration","scope":14104,"src":"37069:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14098,"name":"string","nodeType":"ElementaryTypeName","src":"37069:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37068:30:14"},"returnParameters":{"id":14103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14102,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"37135:15:14","nodeType":"VariableDeclaration","scope":14104,"src":"37122:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14101,"name":"bytes","nodeType":"ElementaryTypeName","src":"37122:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37121:30:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14112,"nodeType":"FunctionDefinition","src":"37228:101:14","nodes":[],"documentation":{"id":14105,"nodeType":"StructuredDocumentation","src":"37158:65:14","text":"Returns the most recent deployment for the current `chainId`."},"functionSelector":"a8091d97","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"37237:13:14","parameters":{"id":14108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14107,"mutability":"mutable","name":"contractName","nameLocation":"37267:12:14","nodeType":"VariableDeclaration","scope":14112,"src":"37251:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14106,"name":"string","nodeType":"ElementaryTypeName","src":"37251:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37250:30:14"},"returnParameters":{"id":14111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14110,"mutability":"mutable","name":"deployedAddress","nameLocation":"37312:15:14","nodeType":"VariableDeclaration","scope":14112,"src":"37304:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14109,"name":"address","nodeType":"ElementaryTypeName","src":"37304:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37303:25:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14122,"nodeType":"FunctionDefinition","src":"37414:141:14","nodes":[],"documentation":{"id":14113,"nodeType":"StructuredDocumentation","src":"37335:74:14","text":"Returns the most recent deployment for the given contract on `chainId`"},"functionSelector":"0debd5d6","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"37423:13:14","parameters":{"id":14118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14115,"mutability":"mutable","name":"contractName","nameLocation":"37453:12:14","nodeType":"VariableDeclaration","scope":14122,"src":"37437:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14114,"name":"string","nodeType":"ElementaryTypeName","src":"37437:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14117,"mutability":"mutable","name":"chainId","nameLocation":"37474:7:14","nodeType":"VariableDeclaration","scope":14122,"src":"37467:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14116,"name":"uint64","nodeType":"ElementaryTypeName","src":"37467:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"37436:46:14"},"returnParameters":{"id":14121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14120,"mutability":"mutable","name":"deployedAddress","nameLocation":"37538:15:14","nodeType":"VariableDeclaration","scope":14122,"src":"37530:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14119,"name":"address","nodeType":"ElementaryTypeName","src":"37530:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37529:25:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14133,"nodeType":"FunctionDefinition","src":"37824:153:14","nodes":[],"documentation":{"id":14123,"nodeType":"StructuredDocumentation","src":"37561:258:14","text":"Returns all deployments for the given contract on `chainId`\n Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber.\n The most recent deployment is the first element, and the oldest is the last."},"functionSelector":"74e133dd","implemented":false,"kind":"function","modifiers":[],"name":"getDeployments","nameLocation":"37833:14:14","parameters":{"id":14128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14125,"mutability":"mutable","name":"contractName","nameLocation":"37864:12:14","nodeType":"VariableDeclaration","scope":14133,"src":"37848:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14124,"name":"string","nodeType":"ElementaryTypeName","src":"37848:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14127,"mutability":"mutable","name":"chainId","nameLocation":"37885:7:14","nodeType":"VariableDeclaration","scope":14133,"src":"37878:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14126,"name":"uint64","nodeType":"ElementaryTypeName","src":"37878:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"37847:46:14"},"returnParameters":{"id":14132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14131,"mutability":"mutable","name":"deployedAddresses","nameLocation":"37958:17:14","nodeType":"VariableDeclaration","scope":14133,"src":"37941:34:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14129,"name":"address","nodeType":"ElementaryTypeName","src":"37941:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14130,"nodeType":"ArrayTypeName","src":"37941:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"37940:36:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14141,"nodeType":"FunctionDefinition","src":"38083:73:14","nodes":[],"documentation":{"id":14134,"nodeType":"StructuredDocumentation","src":"37983:95:14","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"38092:5:14","parameters":{"id":14137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14136,"mutability":"mutable","name":"path","nameLocation":"38114:4:14","nodeType":"VariableDeclaration","scope":14141,"src":"38098:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14135,"name":"string","nodeType":"ElementaryTypeName","src":"38098:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38097:22:14"},"returnParameters":{"id":14140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14139,"mutability":"mutable","name":"result","nameLocation":"38148:6:14","nodeType":"VariableDeclaration","scope":14141,"src":"38143:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14138,"name":"bool","nodeType":"ElementaryTypeName","src":"38143:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38142:13:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14149,"nodeType":"FunctionDefinition","src":"38265:74:14","nodes":[],"documentation":{"id":14142,"nodeType":"StructuredDocumentation","src":"38162:98:14","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"38274:6:14","parameters":{"id":14145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14144,"mutability":"mutable","name":"path","nameLocation":"38297:4:14","nodeType":"VariableDeclaration","scope":14149,"src":"38281:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14143,"name":"string","nodeType":"ElementaryTypeName","src":"38281:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38280:22:14"},"returnParameters":{"id":14148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14147,"mutability":"mutable","name":"result","nameLocation":"38331:6:14","nodeType":"VariableDeclaration","scope":14149,"src":"38326:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14146,"name":"bool","nodeType":"ElementaryTypeName","src":"38326:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38325:13:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14155,"nodeType":"FunctionDefinition","src":"38395:66:14","nodes":[],"documentation":{"id":14150,"nodeType":"StructuredDocumentation","src":"38345:45:14","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"38404:11:14","parameters":{"id":14151,"nodeType":"ParameterList","parameters":[],"src":"38415:2:14"},"returnParameters":{"id":14154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14153,"mutability":"mutable","name":"path","nameLocation":"38455:4:14","nodeType":"VariableDeclaration","scope":14155,"src":"38441:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14152,"name":"string","nodeType":"ElementaryTypeName","src":"38441:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38440:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14163,"nodeType":"FunctionDefinition","src":"38528:83:14","nodes":[],"documentation":{"id":14156,"nodeType":"StructuredDocumentation","src":"38467:56:14","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"38537:6:14","parameters":{"id":14159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14158,"mutability":"mutable","name":"promptText","nameLocation":"38560:10:14","nodeType":"VariableDeclaration","scope":14163,"src":"38544:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14157,"name":"string","nodeType":"ElementaryTypeName","src":"38544:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38543:28:14"},"returnParameters":{"id":14162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14161,"mutability":"mutable","name":"input","nameLocation":"38604:5:14","nodeType":"VariableDeclaration","scope":14163,"src":"38590:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14160,"name":"string","nodeType":"ElementaryTypeName","src":"38590:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38589:21:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14171,"nodeType":"FunctionDefinition","src":"38674:78:14","nodes":[],"documentation":{"id":14164,"nodeType":"StructuredDocumentation","src":"38617:52:14","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"38683:13:14","parameters":{"id":14167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14166,"mutability":"mutable","name":"promptText","nameLocation":"38713:10:14","nodeType":"VariableDeclaration","scope":14171,"src":"38697:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14165,"name":"string","nodeType":"ElementaryTypeName","src":"38697:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38696:28:14"},"returnParameters":{"id":14170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14171,"src":"38743:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14168,"name":"address","nodeType":"ElementaryTypeName","src":"38743:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38742:9:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14179,"nodeType":"FunctionDefinition","src":"38826:89:14","nodes":[],"documentation":{"id":14172,"nodeType":"StructuredDocumentation","src":"38758:63:14","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"38835:12:14","parameters":{"id":14175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14174,"mutability":"mutable","name":"promptText","nameLocation":"38864:10:14","nodeType":"VariableDeclaration","scope":14179,"src":"38848:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14173,"name":"string","nodeType":"ElementaryTypeName","src":"38848:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38847:28:14"},"returnParameters":{"id":14178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14177,"mutability":"mutable","name":"input","nameLocation":"38908:5:14","nodeType":"VariableDeclaration","scope":14179,"src":"38894:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14176,"name":"string","nodeType":"ElementaryTypeName","src":"38894:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38893:21:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14187,"nodeType":"FunctionDefinition","src":"38995:81:14","nodes":[],"documentation":{"id":14180,"nodeType":"StructuredDocumentation","src":"38921:69:14","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"39004:16:14","parameters":{"id":14183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14182,"mutability":"mutable","name":"promptText","nameLocation":"39037:10:14","nodeType":"VariableDeclaration","scope":14187,"src":"39021:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14181,"name":"string","nodeType":"ElementaryTypeName","src":"39021:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39020:28:14"},"returnParameters":{"id":14186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14187,"src":"39067:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14184,"name":"uint256","nodeType":"ElementaryTypeName","src":"39067:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39066:9:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14195,"nodeType":"FunctionDefinition","src":"39136:75:14","nodes":[],"documentation":{"id":14188,"nodeType":"StructuredDocumentation","src":"39082:49:14","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"39145:10:14","parameters":{"id":14191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14190,"mutability":"mutable","name":"promptText","nameLocation":"39172:10:14","nodeType":"VariableDeclaration","scope":14195,"src":"39156:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14189,"name":"string","nodeType":"ElementaryTypeName","src":"39156:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39155:28:14"},"returnParameters":{"id":14194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14195,"src":"39202:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14192,"name":"uint256","nodeType":"ElementaryTypeName","src":"39202:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39201:9:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14205,"nodeType":"FunctionDefinition","src":"39459:89:14","nodes":[],"documentation":{"id":14196,"nodeType":"StructuredDocumentation","src":"39217:237:14","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"39468:7:14","parameters":{"id":14199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14198,"mutability":"mutable","name":"path","nameLocation":"39492:4:14","nodeType":"VariableDeclaration","scope":14205,"src":"39476:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14197,"name":"string","nodeType":"ElementaryTypeName","src":"39476:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39475:22:14"},"returnParameters":{"id":14204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14203,"mutability":"mutable","name":"entries","nameLocation":"39539:7:14","nodeType":"VariableDeclaration","scope":14205,"src":"39521:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13035_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14201,"nodeType":"UserDefinedTypeName","pathNode":{"id":14200,"name":"DirEntry","nameLocations":["39521:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":13035,"src":"39521:8:14"},"referencedDeclaration":13035,"src":"39521:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13035_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14202,"nodeType":"ArrayTypeName","src":"39521:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13035_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"39520:27:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14217,"nodeType":"FunctionDefinition","src":"39585:106:14","nodes":[],"documentation":{"id":14206,"nodeType":"StructuredDocumentation","src":"39554:26:14","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"39594:7:14","parameters":{"id":14211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14208,"mutability":"mutable","name":"path","nameLocation":"39618:4:14","nodeType":"VariableDeclaration","scope":14217,"src":"39602:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14207,"name":"string","nodeType":"ElementaryTypeName","src":"39602:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14210,"mutability":"mutable","name":"maxDepth","nameLocation":"39631:8:14","nodeType":"VariableDeclaration","scope":14217,"src":"39624:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14209,"name":"uint64","nodeType":"ElementaryTypeName","src":"39624:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"39601:39:14"},"returnParameters":{"id":14216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14215,"mutability":"mutable","name":"entries","nameLocation":"39682:7:14","nodeType":"VariableDeclaration","scope":14217,"src":"39664:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13035_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14213,"nodeType":"UserDefinedTypeName","pathNode":{"id":14212,"name":"DirEntry","nameLocations":["39664:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":13035,"src":"39664:8:14"},"referencedDeclaration":13035,"src":"39664:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13035_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14214,"nodeType":"ArrayTypeName","src":"39664:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13035_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"39663:27:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14231,"nodeType":"FunctionDefinition","src":"39728:148:14","nodes":[],"documentation":{"id":14218,"nodeType":"StructuredDocumentation","src":"39697:26:14","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"39737:7:14","parameters":{"id":14225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14220,"mutability":"mutable","name":"path","nameLocation":"39761:4:14","nodeType":"VariableDeclaration","scope":14231,"src":"39745:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14219,"name":"string","nodeType":"ElementaryTypeName","src":"39745:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14222,"mutability":"mutable","name":"maxDepth","nameLocation":"39774:8:14","nodeType":"VariableDeclaration","scope":14231,"src":"39767:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14221,"name":"uint64","nodeType":"ElementaryTypeName","src":"39767:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14224,"mutability":"mutable","name":"followLinks","nameLocation":"39789:11:14","nodeType":"VariableDeclaration","scope":14231,"src":"39784:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14223,"name":"bool","nodeType":"ElementaryTypeName","src":"39784:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39744:57:14"},"returnParameters":{"id":14230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14229,"mutability":"mutable","name":"entries","nameLocation":"39867:7:14","nodeType":"VariableDeclaration","scope":14231,"src":"39849:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13035_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14227,"nodeType":"UserDefinedTypeName","pathNode":{"id":14226,"name":"DirEntry","nameLocations":["39849:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":13035,"src":"39849:8:14"},"referencedDeclaration":13035,"src":"39849:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13035_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14228,"nodeType":"ArrayTypeName","src":"39849:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13035_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"39848:27:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14239,"nodeType":"FunctionDefinition","src":"39974:83:14","nodes":[],"documentation":{"id":14232,"nodeType":"StructuredDocumentation","src":"39882:87:14","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"39983:8:14","parameters":{"id":14235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14234,"mutability":"mutable","name":"path","nameLocation":"40008:4:14","nodeType":"VariableDeclaration","scope":14239,"src":"39992:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14233,"name":"string","nodeType":"ElementaryTypeName","src":"39992:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39991:22:14"},"returnParameters":{"id":14238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14237,"mutability":"mutable","name":"data","nameLocation":"40051:4:14","nodeType":"VariableDeclaration","scope":14239,"src":"40037:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14236,"name":"string","nodeType":"ElementaryTypeName","src":"40037:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40036:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14247,"nodeType":"FunctionDefinition","src":"40155:88:14","nodes":[],"documentation":{"id":14240,"nodeType":"StructuredDocumentation","src":"40063:87:14","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"40164:14:14","parameters":{"id":14243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14242,"mutability":"mutable","name":"path","nameLocation":"40195:4:14","nodeType":"VariableDeclaration","scope":14247,"src":"40179:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14241,"name":"string","nodeType":"ElementaryTypeName","src":"40179:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40178:22:14"},"returnParameters":{"id":14246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14245,"mutability":"mutable","name":"data","nameLocation":"40237:4:14","nodeType":"VariableDeclaration","scope":14247,"src":"40224:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14244,"name":"bytes","nodeType":"ElementaryTypeName","src":"40224:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40223:19:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14255,"nodeType":"FunctionDefinition","src":"40292:83:14","nodes":[],"documentation":{"id":14248,"nodeType":"StructuredDocumentation","src":"40249:38:14","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"40301:8:14","parameters":{"id":14251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14250,"mutability":"mutable","name":"path","nameLocation":"40326:4:14","nodeType":"VariableDeclaration","scope":14255,"src":"40310:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14249,"name":"string","nodeType":"ElementaryTypeName","src":"40310:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40309:22:14"},"returnParameters":{"id":14254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14253,"mutability":"mutable","name":"line","nameLocation":"40369:4:14","nodeType":"VariableDeclaration","scope":14255,"src":"40355:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14252,"name":"string","nodeType":"ElementaryTypeName","src":"40355:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40354:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14263,"nodeType":"FunctionDefinition","src":"40634:93:14","nodes":[],"documentation":{"id":14256,"nodeType":"StructuredDocumentation","src":"40381:248:14","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"40643:8:14","parameters":{"id":14259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14258,"mutability":"mutable","name":"linkPath","nameLocation":"40668:8:14","nodeType":"VariableDeclaration","scope":14263,"src":"40652:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14257,"name":"string","nodeType":"ElementaryTypeName","src":"40652:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40651:26:14"},"returnParameters":{"id":14262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14261,"mutability":"mutable","name":"targetPath","nameLocation":"40715:10:14","nodeType":"VariableDeclaration","scope":14263,"src":"40701:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14260,"name":"string","nodeType":"ElementaryTypeName","src":"40701:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40700:26:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14271,"nodeType":"FunctionDefinition","src":"41117:66:14","nodes":[],"documentation":{"id":14264,"nodeType":"StructuredDocumentation","src":"40733:379:14","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"41126:9:14","parameters":{"id":14269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14266,"mutability":"mutable","name":"path","nameLocation":"41152:4:14","nodeType":"VariableDeclaration","scope":14271,"src":"41136:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14265,"name":"string","nodeType":"ElementaryTypeName","src":"41136:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14268,"mutability":"mutable","name":"recursive","nameLocation":"41163:9:14","nodeType":"VariableDeclaration","scope":14271,"src":"41158:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14267,"name":"bool","nodeType":"ElementaryTypeName","src":"41158:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41135:38:14"},"returnParameters":{"id":14270,"nodeType":"ParameterList","parameters":[],"src":"41182:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14277,"nodeType":"FunctionDefinition","src":"41516:51:14","nodes":[],"documentation":{"id":14272,"nodeType":"StructuredDocumentation","src":"41189:322:14","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"41525:10:14","parameters":{"id":14275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14274,"mutability":"mutable","name":"path","nameLocation":"41552:4:14","nodeType":"VariableDeclaration","scope":14277,"src":"41536:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14273,"name":"string","nodeType":"ElementaryTypeName","src":"41536:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41535:22:14"},"returnParameters":{"id":14276,"nodeType":"ParameterList","parameters":[],"src":"41566:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14287,"nodeType":"FunctionDefinition","src":"41674:91:14","nodes":[],"documentation":{"id":14278,"nodeType":"StructuredDocumentation","src":"41573:96:14","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"41683:6:14","parameters":{"id":14282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14281,"mutability":"mutable","name":"commandInput","nameLocation":"41708:12:14","nodeType":"VariableDeclaration","scope":14287,"src":"41690:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14279,"name":"string","nodeType":"ElementaryTypeName","src":"41690:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14280,"nodeType":"ArrayTypeName","src":"41690:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"41689:32:14"},"returnParameters":{"id":14286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14285,"mutability":"mutable","name":"result","nameLocation":"41757:6:14","nodeType":"VariableDeclaration","scope":14287,"src":"41740:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13069_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":14284,"nodeType":"UserDefinedTypeName","pathNode":{"id":14283,"name":"FfiResult","nameLocations":["41740:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":13069,"src":"41740:9:14"},"referencedDeclaration":13069,"src":"41740:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13069_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"41739:25:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14293,"nodeType":"FunctionDefinition","src":"41830:65:14","nodes":[],"documentation":{"id":14288,"nodeType":"StructuredDocumentation","src":"41771:54:14","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"41839:8:14","parameters":{"id":14289,"nodeType":"ParameterList","parameters":[],"src":"41847:2:14"},"returnParameters":{"id":14292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14291,"mutability":"mutable","name":"milliseconds","nameLocation":"41881:12:14","nodeType":"VariableDeclaration","scope":14293,"src":"41873:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14290,"name":"uint256","nodeType":"ElementaryTypeName","src":"41873:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41872:22:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14301,"nodeType":"FunctionDefinition","src":"42064:72:14","nodes":[],"documentation":{"id":14294,"nodeType":"StructuredDocumentation","src":"41901:158:14","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"42073:9:14","parameters":{"id":14299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14296,"mutability":"mutable","name":"path","nameLocation":"42099:4:14","nodeType":"VariableDeclaration","scope":14301,"src":"42083:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14295,"name":"string","nodeType":"ElementaryTypeName","src":"42083:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14298,"mutability":"mutable","name":"data","nameLocation":"42121:4:14","nodeType":"VariableDeclaration","scope":14301,"src":"42105:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14297,"name":"string","nodeType":"ElementaryTypeName","src":"42105:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42082:44:14"},"returnParameters":{"id":14300,"nodeType":"ParameterList","parameters":[],"src":"42135:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14309,"nodeType":"FunctionDefinition","src":"42314:77:14","nodes":[],"documentation":{"id":14302,"nodeType":"StructuredDocumentation","src":"42142:167:14","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"42323:15:14","parameters":{"id":14307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14304,"mutability":"mutable","name":"path","nameLocation":"42355:4:14","nodeType":"VariableDeclaration","scope":14309,"src":"42339:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14303,"name":"string","nodeType":"ElementaryTypeName","src":"42339:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14306,"mutability":"mutable","name":"data","nameLocation":"42376:4:14","nodeType":"VariableDeclaration","scope":14309,"src":"42361:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14305,"name":"bytes","nodeType":"ElementaryTypeName","src":"42361:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42338:43:14"},"returnParameters":{"id":14308,"nodeType":"ParameterList","parameters":[],"src":"42390:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14317,"nodeType":"FunctionDefinition","src":"42512:72:14","nodes":[],"documentation":{"id":14310,"nodeType":"StructuredDocumentation","src":"42397:110:14","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"42521:9:14","parameters":{"id":14315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14312,"mutability":"mutable","name":"path","nameLocation":"42547:4:14","nodeType":"VariableDeclaration","scope":14317,"src":"42531:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14311,"name":"string","nodeType":"ElementaryTypeName","src":"42531:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14314,"mutability":"mutable","name":"data","nameLocation":"42569:4:14","nodeType":"VariableDeclaration","scope":14317,"src":"42553:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14313,"name":"string","nodeType":"ElementaryTypeName","src":"42553:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42530:44:14"},"returnParameters":{"id":14316,"nodeType":"ParameterList","parameters":[],"src":"42583:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14327,"nodeType":"FunctionDefinition","src":"42670:95:14","nodes":[],"documentation":{"id":14318,"nodeType":"StructuredDocumentation","src":"42621:44:14","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"42679:13:14","parameters":{"id":14323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14320,"mutability":"mutable","name":"json","nameLocation":"42709:4:14","nodeType":"VariableDeclaration","scope":14327,"src":"42693:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14319,"name":"string","nodeType":"ElementaryTypeName","src":"42693:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14322,"mutability":"mutable","name":"key","nameLocation":"42731:3:14","nodeType":"VariableDeclaration","scope":14327,"src":"42715:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14321,"name":"string","nodeType":"ElementaryTypeName","src":"42715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42692:43:14"},"returnParameters":{"id":14326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14327,"src":"42759:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14324,"name":"bool","nodeType":"ElementaryTypeName","src":"42759:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42758:6:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14337,"nodeType":"FunctionDefinition","src":"42846:101:14","nodes":[],"documentation":{"id":14328,"nodeType":"StructuredDocumentation","src":"42771:70:14","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"42855:16:14","parameters":{"id":14333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14330,"mutability":"mutable","name":"json","nameLocation":"42888:4:14","nodeType":"VariableDeclaration","scope":14337,"src":"42872:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14329,"name":"string","nodeType":"ElementaryTypeName","src":"42872:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14332,"mutability":"mutable","name":"key","nameLocation":"42910:3:14","nodeType":"VariableDeclaration","scope":14337,"src":"42894:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14331,"name":"string","nodeType":"ElementaryTypeName","src":"42894:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42871:43:14"},"returnParameters":{"id":14336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14337,"src":"42938:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14334,"name":"address","nodeType":"ElementaryTypeName","src":"42938:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42937:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14348,"nodeType":"FunctionDefinition","src":"43030:139:14","nodes":[],"documentation":{"id":14338,"nodeType":"StructuredDocumentation","src":"42953:72:14","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"43039:21:14","parameters":{"id":14343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14340,"mutability":"mutable","name":"json","nameLocation":"43077:4:14","nodeType":"VariableDeclaration","scope":14348,"src":"43061:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14339,"name":"string","nodeType":"ElementaryTypeName","src":"43061:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14342,"mutability":"mutable","name":"key","nameLocation":"43099:3:14","nodeType":"VariableDeclaration","scope":14348,"src":"43083:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14341,"name":"string","nodeType":"ElementaryTypeName","src":"43083:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43060:43:14"},"returnParameters":{"id":14347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14348,"src":"43151:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14344,"name":"address","nodeType":"ElementaryTypeName","src":"43151:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14345,"nodeType":"ArrayTypeName","src":"43151:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"43150:18:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14358,"nodeType":"FunctionDefinition","src":"43247:95:14","nodes":[],"documentation":{"id":14349,"nodeType":"StructuredDocumentation","src":"43175:67:14","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"43256:13:14","parameters":{"id":14354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14351,"mutability":"mutable","name":"json","nameLocation":"43286:4:14","nodeType":"VariableDeclaration","scope":14358,"src":"43270:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14350,"name":"string","nodeType":"ElementaryTypeName","src":"43270:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14353,"mutability":"mutable","name":"key","nameLocation":"43308:3:14","nodeType":"VariableDeclaration","scope":14358,"src":"43292:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14352,"name":"string","nodeType":"ElementaryTypeName","src":"43292:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43269:43:14"},"returnParameters":{"id":14357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14358,"src":"43336:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14355,"name":"bool","nodeType":"ElementaryTypeName","src":"43336:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43335:6:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14369,"nodeType":"FunctionDefinition","src":"43422:109:14","nodes":[],"documentation":{"id":14359,"nodeType":"StructuredDocumentation","src":"43348:69:14","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"43431:18:14","parameters":{"id":14364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14361,"mutability":"mutable","name":"json","nameLocation":"43466:4:14","nodeType":"VariableDeclaration","scope":14369,"src":"43450:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14360,"name":"string","nodeType":"ElementaryTypeName","src":"43450:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14363,"mutability":"mutable","name":"key","nameLocation":"43488:3:14","nodeType":"VariableDeclaration","scope":14369,"src":"43472:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14362,"name":"string","nodeType":"ElementaryTypeName","src":"43472:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43449:43:14"},"returnParameters":{"id":14368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14369,"src":"43516:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14365,"name":"bool","nodeType":"ElementaryTypeName","src":"43516:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14366,"nodeType":"ArrayTypeName","src":"43516:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"43515:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14379,"nodeType":"FunctionDefinition","src":"43610:104:14","nodes":[],"documentation":{"id":14370,"nodeType":"StructuredDocumentation","src":"43537:68:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"43619:14:14","parameters":{"id":14375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14372,"mutability":"mutable","name":"json","nameLocation":"43650:4:14","nodeType":"VariableDeclaration","scope":14379,"src":"43634:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14371,"name":"string","nodeType":"ElementaryTypeName","src":"43634:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14374,"mutability":"mutable","name":"key","nameLocation":"43672:3:14","nodeType":"VariableDeclaration","scope":14379,"src":"43656:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14373,"name":"string","nodeType":"ElementaryTypeName","src":"43656:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43633:43:14"},"returnParameters":{"id":14378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14379,"src":"43700:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14376,"name":"bytes","nodeType":"ElementaryTypeName","src":"43700:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43699:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14389,"nodeType":"FunctionDefinition","src":"43795:101:14","nodes":[],"documentation":{"id":14380,"nodeType":"StructuredDocumentation","src":"43720:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"43804:16:14","parameters":{"id":14385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14382,"mutability":"mutable","name":"json","nameLocation":"43837:4:14","nodeType":"VariableDeclaration","scope":14389,"src":"43821:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14381,"name":"string","nodeType":"ElementaryTypeName","src":"43821:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14384,"mutability":"mutable","name":"key","nameLocation":"43859:3:14","nodeType":"VariableDeclaration","scope":14389,"src":"43843:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14383,"name":"string","nodeType":"ElementaryTypeName","src":"43843:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43820:43:14"},"returnParameters":{"id":14388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14389,"src":"43887:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"43887:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"43886:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14400,"nodeType":"FunctionDefinition","src":"43979:139:14","nodes":[],"documentation":{"id":14390,"nodeType":"StructuredDocumentation","src":"43902:72:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"43988:21:14","parameters":{"id":14395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14392,"mutability":"mutable","name":"json","nameLocation":"44026:4:14","nodeType":"VariableDeclaration","scope":14400,"src":"44010:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14391,"name":"string","nodeType":"ElementaryTypeName","src":"44010:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14394,"mutability":"mutable","name":"key","nameLocation":"44048:3:14","nodeType":"VariableDeclaration","scope":14400,"src":"44032:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14393,"name":"string","nodeType":"ElementaryTypeName","src":"44032:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44009:43:14"},"returnParameters":{"id":14399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14400,"src":"44100:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"44100:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14397,"nodeType":"ArrayTypeName","src":"44100:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"44099:18:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14411,"nodeType":"FunctionDefinition","src":"44199:111:14","nodes":[],"documentation":{"id":14401,"nodeType":"StructuredDocumentation","src":"44124:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"44208:19:14","parameters":{"id":14406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14403,"mutability":"mutable","name":"json","nameLocation":"44244:4:14","nodeType":"VariableDeclaration","scope":14411,"src":"44228:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14402,"name":"string","nodeType":"ElementaryTypeName","src":"44228:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14405,"mutability":"mutable","name":"key","nameLocation":"44266:3:14","nodeType":"VariableDeclaration","scope":14411,"src":"44250:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14404,"name":"string","nodeType":"ElementaryTypeName","src":"44250:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44227:43:14"},"returnParameters":{"id":14410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14411,"src":"44294:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14407,"name":"bytes","nodeType":"ElementaryTypeName","src":"44294:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14408,"nodeType":"ArrayTypeName","src":"44294:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"44293:16:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14421,"nodeType":"FunctionDefinition","src":"44390:96:14","nodes":[],"documentation":{"id":14412,"nodeType":"StructuredDocumentation","src":"44316:69:14","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"44399:12:14","parameters":{"id":14417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14414,"mutability":"mutable","name":"json","nameLocation":"44428:4:14","nodeType":"VariableDeclaration","scope":14421,"src":"44412:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14413,"name":"string","nodeType":"ElementaryTypeName","src":"44412:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14416,"mutability":"mutable","name":"key","nameLocation":"44450:3:14","nodeType":"VariableDeclaration","scope":14421,"src":"44434:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14415,"name":"string","nodeType":"ElementaryTypeName","src":"44434:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44411:43:14"},"returnParameters":{"id":14420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14421,"src":"44478:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14418,"name":"int256","nodeType":"ElementaryTypeName","src":"44478:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"44477:8:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14432,"nodeType":"FunctionDefinition","src":"44568:110:14","nodes":[],"documentation":{"id":14422,"nodeType":"StructuredDocumentation","src":"44492:71:14","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"44577:17:14","parameters":{"id":14427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14424,"mutability":"mutable","name":"json","nameLocation":"44611:4:14","nodeType":"VariableDeclaration","scope":14432,"src":"44595:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14423,"name":"string","nodeType":"ElementaryTypeName","src":"44595:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14426,"mutability":"mutable","name":"key","nameLocation":"44633:3:14","nodeType":"VariableDeclaration","scope":14432,"src":"44617:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14425,"name":"string","nodeType":"ElementaryTypeName","src":"44617:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44594:43:14"},"returnParameters":{"id":14431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14432,"src":"44661:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14428,"name":"int256","nodeType":"ElementaryTypeName","src":"44661:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14429,"nodeType":"ArrayTypeName","src":"44661:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"44660:17:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14443,"nodeType":"FunctionDefinition","src":"44743:111:14","nodes":[],"documentation":{"id":14433,"nodeType":"StructuredDocumentation","src":"44684:54:14","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"44752:13:14","parameters":{"id":14438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14435,"mutability":"mutable","name":"json","nameLocation":"44782:4:14","nodeType":"VariableDeclaration","scope":14443,"src":"44766:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14434,"name":"string","nodeType":"ElementaryTypeName","src":"44766:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14437,"mutability":"mutable","name":"key","nameLocation":"44804:3:14","nodeType":"VariableDeclaration","scope":14443,"src":"44788:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14436,"name":"string","nodeType":"ElementaryTypeName","src":"44788:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44765:43:14"},"returnParameters":{"id":14442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14441,"mutability":"mutable","name":"keys","nameLocation":"44848:4:14","nodeType":"VariableDeclaration","scope":14443,"src":"44832:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14439,"name":"string","nodeType":"ElementaryTypeName","src":"44832:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14440,"nodeType":"ArrayTypeName","src":"44832:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"44831:22:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14453,"nodeType":"FunctionDefinition","src":"44934:106:14","nodes":[],"documentation":{"id":14444,"nodeType":"StructuredDocumentation","src":"44860:69:14","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"44943:15:14","parameters":{"id":14449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14446,"mutability":"mutable","name":"json","nameLocation":"44975:4:14","nodeType":"VariableDeclaration","scope":14453,"src":"44959:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14445,"name":"string","nodeType":"ElementaryTypeName","src":"44959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14448,"mutability":"mutable","name":"key","nameLocation":"44997:3:14","nodeType":"VariableDeclaration","scope":14453,"src":"44981:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14447,"name":"string","nodeType":"ElementaryTypeName","src":"44981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44958:43:14"},"returnParameters":{"id":14452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14453,"src":"45025:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14450,"name":"string","nodeType":"ElementaryTypeName","src":"45025:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45024:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14464,"nodeType":"FunctionDefinition","src":"45122:113:14","nodes":[],"documentation":{"id":14454,"nodeType":"StructuredDocumentation","src":"45046:71:14","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"45131:20:14","parameters":{"id":14459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14456,"mutability":"mutable","name":"json","nameLocation":"45168:4:14","nodeType":"VariableDeclaration","scope":14464,"src":"45152:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14455,"name":"string","nodeType":"ElementaryTypeName","src":"45152:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14458,"mutability":"mutable","name":"key","nameLocation":"45190:3:14","nodeType":"VariableDeclaration","scope":14464,"src":"45174:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14457,"name":"string","nodeType":"ElementaryTypeName","src":"45174:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45151:43:14"},"returnParameters":{"id":14463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14464,"src":"45218:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14460,"name":"string","nodeType":"ElementaryTypeName","src":"45218:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14461,"nodeType":"ArrayTypeName","src":"45218:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"45217:17:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14476,"nodeType":"FunctionDefinition","src":"45352:165:14","nodes":[],"documentation":{"id":14465,"nodeType":"StructuredDocumentation","src":"45241:106:14","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"45361:18:14","parameters":{"id":14472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14467,"mutability":"mutable","name":"json","nameLocation":"45396:4:14","nodeType":"VariableDeclaration","scope":14476,"src":"45380:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14466,"name":"string","nodeType":"ElementaryTypeName","src":"45380:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14469,"mutability":"mutable","name":"key","nameLocation":"45418:3:14","nodeType":"VariableDeclaration","scope":14476,"src":"45402:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14468,"name":"string","nodeType":"ElementaryTypeName","src":"45402:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14471,"mutability":"mutable","name":"typeDescription","nameLocation":"45439:15:14","nodeType":"VariableDeclaration","scope":14476,"src":"45423:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14470,"name":"string","nodeType":"ElementaryTypeName","src":"45423:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45379:76:14"},"returnParameters":{"id":14475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14476,"src":"45503:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14473,"name":"bytes","nodeType":"ElementaryTypeName","src":"45503:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45502:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14486,"nodeType":"FunctionDefinition","src":"45619:139:14","nodes":[],"documentation":{"id":14477,"nodeType":"StructuredDocumentation","src":"45523:91:14","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"45628:13:14","parameters":{"id":14482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14479,"mutability":"mutable","name":"json","nameLocation":"45658:4:14","nodeType":"VariableDeclaration","scope":14486,"src":"45642:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14478,"name":"string","nodeType":"ElementaryTypeName","src":"45642:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14481,"mutability":"mutable","name":"typeDescription","nameLocation":"45680:15:14","nodeType":"VariableDeclaration","scope":14486,"src":"45664:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14480,"name":"string","nodeType":"ElementaryTypeName","src":"45664:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45641:55:14"},"returnParameters":{"id":14485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14486,"src":"45744:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14483,"name":"bytes","nodeType":"ElementaryTypeName","src":"45744:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45743:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14498,"nodeType":"FunctionDefinition","src":"45869:160:14","nodes":[],"documentation":{"id":14487,"nodeType":"StructuredDocumentation","src":"45764:100:14","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"45878:13:14","parameters":{"id":14494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14489,"mutability":"mutable","name":"json","nameLocation":"45908:4:14","nodeType":"VariableDeclaration","scope":14498,"src":"45892:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14488,"name":"string","nodeType":"ElementaryTypeName","src":"45892:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14491,"mutability":"mutable","name":"key","nameLocation":"45930:3:14","nodeType":"VariableDeclaration","scope":14498,"src":"45914:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14490,"name":"string","nodeType":"ElementaryTypeName","src":"45914:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14493,"mutability":"mutable","name":"typeDescription","nameLocation":"45951:15:14","nodeType":"VariableDeclaration","scope":14498,"src":"45935:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14492,"name":"string","nodeType":"ElementaryTypeName","src":"45935:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45891:76:14"},"returnParameters":{"id":14497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14498,"src":"46015:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14495,"name":"bytes","nodeType":"ElementaryTypeName","src":"46015:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46014:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14508,"nodeType":"FunctionDefinition","src":"46110:98:14","nodes":[],"documentation":{"id":14499,"nodeType":"StructuredDocumentation","src":"46035:70:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"46119:13:14","parameters":{"id":14504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14501,"mutability":"mutable","name":"json","nameLocation":"46149:4:14","nodeType":"VariableDeclaration","scope":14508,"src":"46133:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14500,"name":"string","nodeType":"ElementaryTypeName","src":"46133:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14503,"mutability":"mutable","name":"key","nameLocation":"46171:3:14","nodeType":"VariableDeclaration","scope":14508,"src":"46155:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14502,"name":"string","nodeType":"ElementaryTypeName","src":"46155:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46132:43:14"},"returnParameters":{"id":14507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14508,"src":"46199:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14505,"name":"uint256","nodeType":"ElementaryTypeName","src":"46199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46198:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14519,"nodeType":"FunctionDefinition","src":"46291:112:14","nodes":[],"documentation":{"id":14509,"nodeType":"StructuredDocumentation","src":"46214:72:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"46300:18:14","parameters":{"id":14514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14511,"mutability":"mutable","name":"json","nameLocation":"46335:4:14","nodeType":"VariableDeclaration","scope":14519,"src":"46319:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14510,"name":"string","nodeType":"ElementaryTypeName","src":"46319:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14513,"mutability":"mutable","name":"key","nameLocation":"46357:3:14","nodeType":"VariableDeclaration","scope":14519,"src":"46341:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14512,"name":"string","nodeType":"ElementaryTypeName","src":"46341:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46318:43:14"},"returnParameters":{"id":14518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14519,"src":"46385:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14515,"name":"uint256","nodeType":"ElementaryTypeName","src":"46385:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14516,"nodeType":"ArrayTypeName","src":"46385:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"46384:18:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14527,"nodeType":"FunctionDefinition","src":"46444:93:14","nodes":[],"documentation":{"id":14520,"nodeType":"StructuredDocumentation","src":"46409:30:14","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"46453:9:14","parameters":{"id":14523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14522,"mutability":"mutable","name":"json","nameLocation":"46479:4:14","nodeType":"VariableDeclaration","scope":14527,"src":"46463:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14521,"name":"string","nodeType":"ElementaryTypeName","src":"46463:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46462:22:14"},"returnParameters":{"id":14526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14525,"mutability":"mutable","name":"abiEncodedData","nameLocation":"46521:14:14","nodeType":"VariableDeclaration","scope":14527,"src":"46508:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14524,"name":"bytes","nodeType":"ElementaryTypeName","src":"46508:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46507:29:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14537,"nodeType":"FunctionDefinition","src":"46587:114:14","nodes":[],"documentation":{"id":14528,"nodeType":"StructuredDocumentation","src":"46543:39:14","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"46596:9:14","parameters":{"id":14533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14530,"mutability":"mutable","name":"json","nameLocation":"46622:4:14","nodeType":"VariableDeclaration","scope":14537,"src":"46606:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14529,"name":"string","nodeType":"ElementaryTypeName","src":"46606:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14532,"mutability":"mutable","name":"key","nameLocation":"46644:3:14","nodeType":"VariableDeclaration","scope":14537,"src":"46628:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14531,"name":"string","nodeType":"ElementaryTypeName","src":"46628:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46605:43:14"},"returnParameters":{"id":14536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14535,"mutability":"mutable","name":"abiEncodedData","nameLocation":"46685:14:14","nodeType":"VariableDeclaration","scope":14537,"src":"46672:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14534,"name":"bytes","nodeType":"ElementaryTypeName","src":"46672:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46671:29:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14549,"nodeType":"FunctionDefinition","src":"46736:148:14","nodes":[],"documentation":{"id":14538,"nodeType":"StructuredDocumentation","src":"46707:24:14","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"46745:16:14","parameters":{"id":14545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14540,"mutability":"mutable","name":"objectKey","nameLocation":"46778:9:14","nodeType":"VariableDeclaration","scope":14549,"src":"46762:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14539,"name":"string","nodeType":"ElementaryTypeName","src":"46762:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14542,"mutability":"mutable","name":"valueKey","nameLocation":"46805:8:14","nodeType":"VariableDeclaration","scope":14549,"src":"46789:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14541,"name":"string","nodeType":"ElementaryTypeName","src":"46789:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14544,"mutability":"mutable","name":"value","nameLocation":"46823:5:14","nodeType":"VariableDeclaration","scope":14549,"src":"46815:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14543,"name":"address","nodeType":"ElementaryTypeName","src":"46815:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46761:68:14"},"returnParameters":{"id":14548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14547,"mutability":"mutable","name":"json","nameLocation":"46878:4:14","nodeType":"VariableDeclaration","scope":14549,"src":"46864:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14546,"name":"string","nodeType":"ElementaryTypeName","src":"46864:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46863:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14562,"nodeType":"FunctionDefinition","src":"46919:160:14","nodes":[],"documentation":{"id":14550,"nodeType":"StructuredDocumentation","src":"46890:24:14","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"46928:16:14","parameters":{"id":14558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14552,"mutability":"mutable","name":"objectKey","nameLocation":"46961:9:14","nodeType":"VariableDeclaration","scope":14562,"src":"46945:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14551,"name":"string","nodeType":"ElementaryTypeName","src":"46945:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14554,"mutability":"mutable","name":"valueKey","nameLocation":"46988:8:14","nodeType":"VariableDeclaration","scope":14562,"src":"46972:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14553,"name":"string","nodeType":"ElementaryTypeName","src":"46972:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14557,"mutability":"mutable","name":"values","nameLocation":"47017:6:14","nodeType":"VariableDeclaration","scope":14562,"src":"46998:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14555,"name":"address","nodeType":"ElementaryTypeName","src":"46998:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14556,"nodeType":"ArrayTypeName","src":"46998:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"46944:80:14"},"returnParameters":{"id":14561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14560,"mutability":"mutable","name":"json","nameLocation":"47073:4:14","nodeType":"VariableDeclaration","scope":14562,"src":"47059:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14559,"name":"string","nodeType":"ElementaryTypeName","src":"47059:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47058:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14574,"nodeType":"FunctionDefinition","src":"47114:142:14","nodes":[],"documentation":{"id":14563,"nodeType":"StructuredDocumentation","src":"47085:24:14","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"47123:13:14","parameters":{"id":14570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14565,"mutability":"mutable","name":"objectKey","nameLocation":"47153:9:14","nodeType":"VariableDeclaration","scope":14574,"src":"47137:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14564,"name":"string","nodeType":"ElementaryTypeName","src":"47137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14567,"mutability":"mutable","name":"valueKey","nameLocation":"47180:8:14","nodeType":"VariableDeclaration","scope":14574,"src":"47164:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14566,"name":"string","nodeType":"ElementaryTypeName","src":"47164:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14569,"mutability":"mutable","name":"value","nameLocation":"47195:5:14","nodeType":"VariableDeclaration","scope":14574,"src":"47190:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14568,"name":"bool","nodeType":"ElementaryTypeName","src":"47190:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"47136:65:14"},"returnParameters":{"id":14573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14572,"mutability":"mutable","name":"json","nameLocation":"47250:4:14","nodeType":"VariableDeclaration","scope":14574,"src":"47236:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14571,"name":"string","nodeType":"ElementaryTypeName","src":"47236:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47235:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14587,"nodeType":"FunctionDefinition","src":"47291:154:14","nodes":[],"documentation":{"id":14575,"nodeType":"StructuredDocumentation","src":"47262:24:14","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"47300:13:14","parameters":{"id":14583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14577,"mutability":"mutable","name":"objectKey","nameLocation":"47330:9:14","nodeType":"VariableDeclaration","scope":14587,"src":"47314:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14576,"name":"string","nodeType":"ElementaryTypeName","src":"47314:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14579,"mutability":"mutable","name":"valueKey","nameLocation":"47357:8:14","nodeType":"VariableDeclaration","scope":14587,"src":"47341:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14578,"name":"string","nodeType":"ElementaryTypeName","src":"47341:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14582,"mutability":"mutable","name":"values","nameLocation":"47383:6:14","nodeType":"VariableDeclaration","scope":14587,"src":"47367:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14580,"name":"bool","nodeType":"ElementaryTypeName","src":"47367:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14581,"nodeType":"ArrayTypeName","src":"47367:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"47313:77:14"},"returnParameters":{"id":14586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14585,"mutability":"mutable","name":"json","nameLocation":"47439:4:14","nodeType":"VariableDeclaration","scope":14587,"src":"47425:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14584,"name":"string","nodeType":"ElementaryTypeName","src":"47425:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47424:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14599,"nodeType":"FunctionDefinition","src":"47480:148:14","nodes":[],"documentation":{"id":14588,"nodeType":"StructuredDocumentation","src":"47451:24:14","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"47489:16:14","parameters":{"id":14595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14590,"mutability":"mutable","name":"objectKey","nameLocation":"47522:9:14","nodeType":"VariableDeclaration","scope":14599,"src":"47506:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14589,"name":"string","nodeType":"ElementaryTypeName","src":"47506:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14592,"mutability":"mutable","name":"valueKey","nameLocation":"47549:8:14","nodeType":"VariableDeclaration","scope":14599,"src":"47533:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14591,"name":"string","nodeType":"ElementaryTypeName","src":"47533:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14594,"mutability":"mutable","name":"value","nameLocation":"47567:5:14","nodeType":"VariableDeclaration","scope":14599,"src":"47559:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47559:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47505:68:14"},"returnParameters":{"id":14598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14597,"mutability":"mutable","name":"json","nameLocation":"47622:4:14","nodeType":"VariableDeclaration","scope":14599,"src":"47608:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14596,"name":"string","nodeType":"ElementaryTypeName","src":"47608:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47607:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14612,"nodeType":"FunctionDefinition","src":"47663:160:14","nodes":[],"documentation":{"id":14600,"nodeType":"StructuredDocumentation","src":"47634:24:14","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"47672:16:14","parameters":{"id":14608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14602,"mutability":"mutable","name":"objectKey","nameLocation":"47705:9:14","nodeType":"VariableDeclaration","scope":14612,"src":"47689:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14601,"name":"string","nodeType":"ElementaryTypeName","src":"47689:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14604,"mutability":"mutable","name":"valueKey","nameLocation":"47732:8:14","nodeType":"VariableDeclaration","scope":14612,"src":"47716:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14603,"name":"string","nodeType":"ElementaryTypeName","src":"47716:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14607,"mutability":"mutable","name":"values","nameLocation":"47761:6:14","nodeType":"VariableDeclaration","scope":14612,"src":"47742:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47742:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14606,"nodeType":"ArrayTypeName","src":"47742:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"47688:80:14"},"returnParameters":{"id":14611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14610,"mutability":"mutable","name":"json","nameLocation":"47817:4:14","nodeType":"VariableDeclaration","scope":14612,"src":"47803:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14609,"name":"string","nodeType":"ElementaryTypeName","src":"47803:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47802:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14624,"nodeType":"FunctionDefinition","src":"47858:153:14","nodes":[],"documentation":{"id":14613,"nodeType":"StructuredDocumentation","src":"47829:24:14","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"47867:14:14","parameters":{"id":14620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14615,"mutability":"mutable","name":"objectKey","nameLocation":"47898:9:14","nodeType":"VariableDeclaration","scope":14624,"src":"47882:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14614,"name":"string","nodeType":"ElementaryTypeName","src":"47882:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14617,"mutability":"mutable","name":"valueKey","nameLocation":"47925:8:14","nodeType":"VariableDeclaration","scope":14624,"src":"47909:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14616,"name":"string","nodeType":"ElementaryTypeName","src":"47909:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14619,"mutability":"mutable","name":"value","nameLocation":"47950:5:14","nodeType":"VariableDeclaration","scope":14624,"src":"47935:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14618,"name":"bytes","nodeType":"ElementaryTypeName","src":"47935:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47881:75:14"},"returnParameters":{"id":14623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14622,"mutability":"mutable","name":"json","nameLocation":"48005:4:14","nodeType":"VariableDeclaration","scope":14624,"src":"47991:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14621,"name":"string","nodeType":"ElementaryTypeName","src":"47991:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47990:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14637,"nodeType":"FunctionDefinition","src":"48046:156:14","nodes":[],"documentation":{"id":14625,"nodeType":"StructuredDocumentation","src":"48017:24:14","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"48055:14:14","parameters":{"id":14633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14627,"mutability":"mutable","name":"objectKey","nameLocation":"48086:9:14","nodeType":"VariableDeclaration","scope":14637,"src":"48070:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14626,"name":"string","nodeType":"ElementaryTypeName","src":"48070:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14629,"mutability":"mutable","name":"valueKey","nameLocation":"48113:8:14","nodeType":"VariableDeclaration","scope":14637,"src":"48097:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14628,"name":"string","nodeType":"ElementaryTypeName","src":"48097:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14632,"mutability":"mutable","name":"values","nameLocation":"48140:6:14","nodeType":"VariableDeclaration","scope":14637,"src":"48123:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14630,"name":"bytes","nodeType":"ElementaryTypeName","src":"48123:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14631,"nodeType":"ArrayTypeName","src":"48123:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"48069:78:14"},"returnParameters":{"id":14636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14635,"mutability":"mutable","name":"json","nameLocation":"48196:4:14","nodeType":"VariableDeclaration","scope":14637,"src":"48182:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14634,"name":"string","nodeType":"ElementaryTypeName","src":"48182:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48181:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14649,"nodeType":"FunctionDefinition","src":"48237:143:14","nodes":[],"documentation":{"id":14638,"nodeType":"StructuredDocumentation","src":"48208:24:14","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"48246:12:14","parameters":{"id":14645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14640,"mutability":"mutable","name":"objectKey","nameLocation":"48275:9:14","nodeType":"VariableDeclaration","scope":14649,"src":"48259:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14639,"name":"string","nodeType":"ElementaryTypeName","src":"48259:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14642,"mutability":"mutable","name":"valueKey","nameLocation":"48302:8:14","nodeType":"VariableDeclaration","scope":14649,"src":"48286:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14641,"name":"string","nodeType":"ElementaryTypeName","src":"48286:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14644,"mutability":"mutable","name":"value","nameLocation":"48319:5:14","nodeType":"VariableDeclaration","scope":14649,"src":"48312:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14643,"name":"int256","nodeType":"ElementaryTypeName","src":"48312:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"48258:67:14"},"returnParameters":{"id":14648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14647,"mutability":"mutable","name":"json","nameLocation":"48374:4:14","nodeType":"VariableDeclaration","scope":14649,"src":"48360:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14646,"name":"string","nodeType":"ElementaryTypeName","src":"48360:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48359:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14662,"nodeType":"FunctionDefinition","src":"48415:155:14","nodes":[],"documentation":{"id":14650,"nodeType":"StructuredDocumentation","src":"48386:24:14","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"48424:12:14","parameters":{"id":14658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14652,"mutability":"mutable","name":"objectKey","nameLocation":"48453:9:14","nodeType":"VariableDeclaration","scope":14662,"src":"48437:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14651,"name":"string","nodeType":"ElementaryTypeName","src":"48437:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14654,"mutability":"mutable","name":"valueKey","nameLocation":"48480:8:14","nodeType":"VariableDeclaration","scope":14662,"src":"48464:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14653,"name":"string","nodeType":"ElementaryTypeName","src":"48464:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14657,"mutability":"mutable","name":"values","nameLocation":"48508:6:14","nodeType":"VariableDeclaration","scope":14662,"src":"48490:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14655,"name":"int256","nodeType":"ElementaryTypeName","src":"48490:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14656,"nodeType":"ArrayTypeName","src":"48490:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"48436:79:14"},"returnParameters":{"id":14661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14660,"mutability":"mutable","name":"json","nameLocation":"48564:4:14","nodeType":"VariableDeclaration","scope":14662,"src":"48550:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14659,"name":"string","nodeType":"ElementaryTypeName","src":"48550:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48549:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14672,"nodeType":"FunctionDefinition","src":"48767:111:14","nodes":[],"documentation":{"id":14663,"nodeType":"StructuredDocumentation","src":"48576:186:14","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"48776:13:14","parameters":{"id":14668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14665,"mutability":"mutable","name":"objectKey","nameLocation":"48806:9:14","nodeType":"VariableDeclaration","scope":14672,"src":"48790:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14664,"name":"string","nodeType":"ElementaryTypeName","src":"48790:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14667,"mutability":"mutable","name":"value","nameLocation":"48833:5:14","nodeType":"VariableDeclaration","scope":14672,"src":"48817:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14666,"name":"string","nodeType":"ElementaryTypeName","src":"48817:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48789:50:14"},"returnParameters":{"id":14671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14670,"mutability":"mutable","name":"json","nameLocation":"48872:4:14","nodeType":"VariableDeclaration","scope":14672,"src":"48858:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14669,"name":"string","nodeType":"ElementaryTypeName","src":"48858:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48857:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14682,"nodeType":"FunctionDefinition","src":"48913:149:14","nodes":[],"documentation":{"id":14673,"nodeType":"StructuredDocumentation","src":"48884:24:14","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"48922:17:14","parameters":{"id":14678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14675,"mutability":"mutable","name":"typeDescription","nameLocation":"48956:15:14","nodeType":"VariableDeclaration","scope":14682,"src":"48940:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14674,"name":"string","nodeType":"ElementaryTypeName","src":"48940:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14677,"mutability":"mutable","name":"value","nameLocation":"48988:5:14","nodeType":"VariableDeclaration","scope":14682,"src":"48973:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14676,"name":"bytes","nodeType":"ElementaryTypeName","src":"48973:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48939:55:14"},"returnParameters":{"id":14681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14680,"mutability":"mutable","name":"json","nameLocation":"49056:4:14","nodeType":"VariableDeclaration","scope":14682,"src":"49042:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14679,"name":"string","nodeType":"ElementaryTypeName","src":"49042:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49041:20:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14696,"nodeType":"FunctionDefinition","src":"49097:211:14","nodes":[],"documentation":{"id":14683,"nodeType":"StructuredDocumentation","src":"49068:24:14","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"49106:17:14","parameters":{"id":14692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14685,"mutability":"mutable","name":"objectKey","nameLocation":"49149:9:14","nodeType":"VariableDeclaration","scope":14696,"src":"49133:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14684,"name":"string","nodeType":"ElementaryTypeName","src":"49133:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14687,"mutability":"mutable","name":"valueKey","nameLocation":"49184:8:14","nodeType":"VariableDeclaration","scope":14696,"src":"49168:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14686,"name":"string","nodeType":"ElementaryTypeName","src":"49168:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14689,"mutability":"mutable","name":"typeDescription","nameLocation":"49218:15:14","nodeType":"VariableDeclaration","scope":14696,"src":"49202:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14688,"name":"string","nodeType":"ElementaryTypeName","src":"49202:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14691,"mutability":"mutable","name":"value","nameLocation":"49258:5:14","nodeType":"VariableDeclaration","scope":14696,"src":"49243:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14690,"name":"bytes","nodeType":"ElementaryTypeName","src":"49243:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49123:146:14"},"returnParameters":{"id":14695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14694,"mutability":"mutable","name":"json","nameLocation":"49302:4:14","nodeType":"VariableDeclaration","scope":14696,"src":"49288:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14693,"name":"string","nodeType":"ElementaryTypeName","src":"49288:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49287:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14708,"nodeType":"FunctionDefinition","src":"49343:155:14","nodes":[],"documentation":{"id":14697,"nodeType":"StructuredDocumentation","src":"49314:24:14","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"49352:15:14","parameters":{"id":14704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14699,"mutability":"mutable","name":"objectKey","nameLocation":"49384:9:14","nodeType":"VariableDeclaration","scope":14708,"src":"49368:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14698,"name":"string","nodeType":"ElementaryTypeName","src":"49368:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14701,"mutability":"mutable","name":"valueKey","nameLocation":"49411:8:14","nodeType":"VariableDeclaration","scope":14708,"src":"49395:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14700,"name":"string","nodeType":"ElementaryTypeName","src":"49395:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14703,"mutability":"mutable","name":"value","nameLocation":"49437:5:14","nodeType":"VariableDeclaration","scope":14708,"src":"49421:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14702,"name":"string","nodeType":"ElementaryTypeName","src":"49421:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49367:76:14"},"returnParameters":{"id":14707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14706,"mutability":"mutable","name":"json","nameLocation":"49492:4:14","nodeType":"VariableDeclaration","scope":14708,"src":"49478:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14705,"name":"string","nodeType":"ElementaryTypeName","src":"49478:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49477:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14721,"nodeType":"FunctionDefinition","src":"49533:158:14","nodes":[],"documentation":{"id":14709,"nodeType":"StructuredDocumentation","src":"49504:24:14","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"49542:15:14","parameters":{"id":14717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14711,"mutability":"mutable","name":"objectKey","nameLocation":"49574:9:14","nodeType":"VariableDeclaration","scope":14721,"src":"49558:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14710,"name":"string","nodeType":"ElementaryTypeName","src":"49558:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14713,"mutability":"mutable","name":"valueKey","nameLocation":"49601:8:14","nodeType":"VariableDeclaration","scope":14721,"src":"49585:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14712,"name":"string","nodeType":"ElementaryTypeName","src":"49585:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14716,"mutability":"mutable","name":"values","nameLocation":"49629:6:14","nodeType":"VariableDeclaration","scope":14721,"src":"49611:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14714,"name":"string","nodeType":"ElementaryTypeName","src":"49611:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14715,"nodeType":"ArrayTypeName","src":"49611:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"49557:79:14"},"returnParameters":{"id":14720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14719,"mutability":"mutable","name":"json","nameLocation":"49685:4:14","nodeType":"VariableDeclaration","scope":14721,"src":"49671:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14718,"name":"string","nodeType":"ElementaryTypeName","src":"49671:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49670:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14733,"nodeType":"FunctionDefinition","src":"49726:150:14","nodes":[],"documentation":{"id":14722,"nodeType":"StructuredDocumentation","src":"49697:24:14","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"49735:18:14","parameters":{"id":14729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14724,"mutability":"mutable","name":"objectKey","nameLocation":"49770:9:14","nodeType":"VariableDeclaration","scope":14733,"src":"49754:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14723,"name":"string","nodeType":"ElementaryTypeName","src":"49754:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14726,"mutability":"mutable","name":"valueKey","nameLocation":"49797:8:14","nodeType":"VariableDeclaration","scope":14733,"src":"49781:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14725,"name":"string","nodeType":"ElementaryTypeName","src":"49781:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14728,"mutability":"mutable","name":"value","nameLocation":"49815:5:14","nodeType":"VariableDeclaration","scope":14733,"src":"49807:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14727,"name":"uint256","nodeType":"ElementaryTypeName","src":"49807:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49753:68:14"},"returnParameters":{"id":14732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14731,"mutability":"mutable","name":"json","nameLocation":"49870:4:14","nodeType":"VariableDeclaration","scope":14733,"src":"49856:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14730,"name":"string","nodeType":"ElementaryTypeName","src":"49856:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49855:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14745,"nodeType":"FunctionDefinition","src":"49911:145:14","nodes":[],"documentation":{"id":14734,"nodeType":"StructuredDocumentation","src":"49882:24:14","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"49920:13:14","parameters":{"id":14741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14736,"mutability":"mutable","name":"objectKey","nameLocation":"49950:9:14","nodeType":"VariableDeclaration","scope":14745,"src":"49934:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14735,"name":"string","nodeType":"ElementaryTypeName","src":"49934:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14738,"mutability":"mutable","name":"valueKey","nameLocation":"49977:8:14","nodeType":"VariableDeclaration","scope":14745,"src":"49961:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14737,"name":"string","nodeType":"ElementaryTypeName","src":"49961:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14740,"mutability":"mutable","name":"value","nameLocation":"49995:5:14","nodeType":"VariableDeclaration","scope":14745,"src":"49987:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14739,"name":"uint256","nodeType":"ElementaryTypeName","src":"49987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49933:68:14"},"returnParameters":{"id":14744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14743,"mutability":"mutable","name":"json","nameLocation":"50050:4:14","nodeType":"VariableDeclaration","scope":14745,"src":"50036:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14742,"name":"string","nodeType":"ElementaryTypeName","src":"50036:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50035:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14758,"nodeType":"FunctionDefinition","src":"50091:157:14","nodes":[],"documentation":{"id":14746,"nodeType":"StructuredDocumentation","src":"50062:24:14","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"50100:13:14","parameters":{"id":14754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14748,"mutability":"mutable","name":"objectKey","nameLocation":"50130:9:14","nodeType":"VariableDeclaration","scope":14758,"src":"50114:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14747,"name":"string","nodeType":"ElementaryTypeName","src":"50114:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14750,"mutability":"mutable","name":"valueKey","nameLocation":"50157:8:14","nodeType":"VariableDeclaration","scope":14758,"src":"50141:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14749,"name":"string","nodeType":"ElementaryTypeName","src":"50141:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14753,"mutability":"mutable","name":"values","nameLocation":"50186:6:14","nodeType":"VariableDeclaration","scope":14758,"src":"50167:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14751,"name":"uint256","nodeType":"ElementaryTypeName","src":"50167:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14752,"nodeType":"ArrayTypeName","src":"50167:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"50113:80:14"},"returnParameters":{"id":14757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14756,"mutability":"mutable","name":"json","nameLocation":"50242:4:14","nodeType":"VariableDeclaration","scope":14758,"src":"50228:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14755,"name":"string","nodeType":"ElementaryTypeName","src":"50228:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50227:20:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14766,"nodeType":"FunctionDefinition","src":"50348:72:14","nodes":[],"documentation":{"id":14759,"nodeType":"StructuredDocumentation","src":"50254:89:14","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"50357:9:14","parameters":{"id":14764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14761,"mutability":"mutable","name":"json","nameLocation":"50383:4:14","nodeType":"VariableDeclaration","scope":14766,"src":"50367:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14760,"name":"string","nodeType":"ElementaryTypeName","src":"50367:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14763,"mutability":"mutable","name":"path","nameLocation":"50405:4:14","nodeType":"VariableDeclaration","scope":14766,"src":"50389:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14762,"name":"string","nodeType":"ElementaryTypeName","src":"50389:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50366:44:14"},"returnParameters":{"id":14765,"nodeType":"ParameterList","parameters":[],"src":"50419:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14776,"nodeType":"FunctionDefinition","src":"50646:98:14","nodes":[],"documentation":{"id":14767,"nodeType":"StructuredDocumentation","src":"50426:215:14","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"50655:9:14","parameters":{"id":14774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14769,"mutability":"mutable","name":"json","nameLocation":"50681:4:14","nodeType":"VariableDeclaration","scope":14776,"src":"50665:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14768,"name":"string","nodeType":"ElementaryTypeName","src":"50665:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14771,"mutability":"mutable","name":"path","nameLocation":"50703:4:14","nodeType":"VariableDeclaration","scope":14776,"src":"50687:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14770,"name":"string","nodeType":"ElementaryTypeName","src":"50687:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14773,"mutability":"mutable","name":"valueKey","nameLocation":"50725:8:14","nodeType":"VariableDeclaration","scope":14776,"src":"50709:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14772,"name":"string","nodeType":"ElementaryTypeName","src":"50709:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50664:70:14"},"returnParameters":{"id":14775,"nodeType":"ParameterList","parameters":[],"src":"50743:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14786,"nodeType":"FunctionDefinition","src":"50906:91:14","nodes":[],"documentation":{"id":14777,"nodeType":"StructuredDocumentation","src":"50750:151:14","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"50915:9:14","parameters":{"id":14782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14779,"mutability":"mutable","name":"json","nameLocation":"50941:4:14","nodeType":"VariableDeclaration","scope":14786,"src":"50925:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14778,"name":"string","nodeType":"ElementaryTypeName","src":"50925:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14781,"mutability":"mutable","name":"key","nameLocation":"50963:3:14","nodeType":"VariableDeclaration","scope":14786,"src":"50947:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14780,"name":"string","nodeType":"ElementaryTypeName","src":"50947:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50924:43:14"},"returnParameters":{"id":14785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14786,"src":"50991:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14783,"name":"bool","nodeType":"ElementaryTypeName","src":"50991:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"50990:6:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14793,"nodeType":"FunctionDefinition","src":"51098:79:14","nodes":[],"documentation":{"id":14787,"nodeType":"StructuredDocumentation","src":"51039:54:14","text":"Designate the next call as an EIP-7702 transaction"},"functionSelector":"14ae3519","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"51107:16:14","parameters":{"id":14791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14790,"mutability":"mutable","name":"signedDelegation","nameLocation":"51150:16:14","nodeType":"VariableDeclaration","scope":14793,"src":"51124:42:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13173_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14789,"nodeType":"UserDefinedTypeName","pathNode":{"id":14788,"name":"SignedDelegation","nameLocations":["51124:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":13173,"src":"51124:16:14"},"referencedDeclaration":13173,"src":"51124:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13173_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"51123:44:14"},"returnParameters":{"id":14792,"nodeType":"ParameterList","parameters":[],"src":"51176:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14799,"nodeType":"FunctionDefinition","src":"51252:63:14","nodes":[],"documentation":{"id":14794,"nodeType":"StructuredDocumentation","src":"51183:64:14","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"51261:23:14","parameters":{"id":14797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14796,"mutability":"mutable","name":"data","nameLocation":"51300:4:14","nodeType":"VariableDeclaration","scope":14799,"src":"51285:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14795,"name":"bytes","nodeType":"ElementaryTypeName","src":"51285:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51284:21:14"},"returnParameters":{"id":14798,"nodeType":"ParameterList","parameters":[],"src":"51314:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14803,"nodeType":"FunctionDefinition","src":"51818:30:14","nodes":[],"documentation":{"id":14800,"nodeType":"StructuredDocumentation","src":"51321:492:14","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"51827:9:14","parameters":{"id":14801,"nodeType":"ParameterList","parameters":[],"src":"51836:2:14"},"returnParameters":{"id":14802,"nodeType":"ParameterList","parameters":[],"src":"51847:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14809,"nodeType":"FunctionDefinition","src":"52018:44:14","nodes":[],"documentation":{"id":14804,"nodeType":"StructuredDocumentation","src":"51854:159:14","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"52027:9:14","parameters":{"id":14807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14806,"mutability":"mutable","name":"signer","nameLocation":"52045:6:14","nodeType":"VariableDeclaration","scope":14809,"src":"52037:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14805,"name":"address","nodeType":"ElementaryTypeName","src":"52037:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52036:16:14"},"returnParameters":{"id":14808,"nodeType":"ParameterList","parameters":[],"src":"52061:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14815,"nodeType":"FunctionDefinition","src":"52236:48:14","nodes":[],"documentation":{"id":14810,"nodeType":"StructuredDocumentation","src":"52068:163:14","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"52245:9:14","parameters":{"id":14813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14812,"mutability":"mutable","name":"privateKey","nameLocation":"52263:10:14","nodeType":"VariableDeclaration","scope":14815,"src":"52255:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14811,"name":"uint256","nodeType":"ElementaryTypeName","src":"52255:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52254:20:14"},"returnParameters":{"id":14814,"nodeType":"ParameterList","parameters":[],"src":"52283:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14822,"nodeType":"FunctionDefinition","src":"52373:66:14","nodes":[],"documentation":{"id":14816,"nodeType":"StructuredDocumentation","src":"52290:78:14","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"db7a4605","implemented":false,"kind":"function","modifiers":[],"name":"getWallets","nameLocation":"52382:10:14","parameters":{"id":14817,"nodeType":"ParameterList","parameters":[],"src":"52392:2:14"},"returnParameters":{"id":14821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14820,"mutability":"mutable","name":"wallets","nameLocation":"52430:7:14","nodeType":"VariableDeclaration","scope":14822,"src":"52413:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14818,"name":"address","nodeType":"ElementaryTypeName","src":"52413:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14819,"nodeType":"ArrayTypeName","src":"52413:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"52412:26:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14833,"nodeType":"FunctionDefinition","src":"52539:153:14","nodes":[],"documentation":{"id":14823,"nodeType":"StructuredDocumentation","src":"52445:89:14","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"functionSelector":"c7fa7288","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"52548:23:14","parameters":{"id":14828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14825,"mutability":"mutable","name":"implementation","nameLocation":"52580:14:14","nodeType":"VariableDeclaration","scope":14833,"src":"52572:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14824,"name":"address","nodeType":"ElementaryTypeName","src":"52572:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14827,"mutability":"mutable","name":"privateKey","nameLocation":"52604:10:14","nodeType":"VariableDeclaration","scope":14833,"src":"52596:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14826,"name":"uint256","nodeType":"ElementaryTypeName","src":"52596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52571:44:14"},"returnParameters":{"id":14832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14831,"mutability":"mutable","name":"signedDelegation","nameLocation":"52674:16:14","nodeType":"VariableDeclaration","scope":14833,"src":"52650:40:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13173_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14830,"nodeType":"UserDefinedTypeName","pathNode":{"id":14829,"name":"SignedDelegation","nameLocations":["52650:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":13173,"src":"52650:16:14"},"referencedDeclaration":13173,"src":"52650:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13173_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"52649:42:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14844,"nodeType":"FunctionDefinition","src":"52752:144:14","nodes":[],"documentation":{"id":14834,"nodeType":"StructuredDocumentation","src":"52698:49:14","text":"Sign an EIP-7702 authorization for delegation"},"functionSelector":"5b593c7b","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"52761:14:14","parameters":{"id":14839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14836,"mutability":"mutable","name":"implementation","nameLocation":"52784:14:14","nodeType":"VariableDeclaration","scope":14844,"src":"52776:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14835,"name":"address","nodeType":"ElementaryTypeName","src":"52776:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14838,"mutability":"mutable","name":"privateKey","nameLocation":"52808:10:14","nodeType":"VariableDeclaration","scope":14844,"src":"52800:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14837,"name":"uint256","nodeType":"ElementaryTypeName","src":"52800:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52775:44:14"},"returnParameters":{"id":14843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14842,"mutability":"mutable","name":"signedDelegation","nameLocation":"52878:16:14","nodeType":"VariableDeclaration","scope":14844,"src":"52854:40:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13173_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":14841,"nodeType":"UserDefinedTypeName","pathNode":{"id":14840,"name":"SignedDelegation","nameLocations":["52854:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":13173,"src":"52854:16:14"},"referencedDeclaration":13173,"src":"52854:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13173_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"52853:42:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14848,"nodeType":"FunctionDefinition","src":"53406:35:14","nodes":[],"documentation":{"id":14845,"nodeType":"StructuredDocumentation","src":"52902:499:14","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"53415:14:14","parameters":{"id":14846,"nodeType":"ParameterList","parameters":[],"src":"53429:2:14"},"returnParameters":{"id":14847,"nodeType":"ParameterList","parameters":[],"src":"53440:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14854,"nodeType":"FunctionDefinition","src":"53603:49:14","nodes":[],"documentation":{"id":14849,"nodeType":"StructuredDocumentation","src":"53447:151:14","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"53612:14:14","parameters":{"id":14852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14851,"mutability":"mutable","name":"signer","nameLocation":"53635:6:14","nodeType":"VariableDeclaration","scope":14854,"src":"53627:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14850,"name":"address","nodeType":"ElementaryTypeName","src":"53627:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"53626:16:14"},"returnParameters":{"id":14853,"nodeType":"ParameterList","parameters":[],"src":"53651:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14860,"nodeType":"FunctionDefinition","src":"53818:53:14","nodes":[],"documentation":{"id":14855,"nodeType":"StructuredDocumentation","src":"53658:155:14","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"53827:14:14","parameters":{"id":14858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14857,"mutability":"mutable","name":"privateKey","nameLocation":"53850:10:14","nodeType":"VariableDeclaration","scope":14860,"src":"53842:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14856,"name":"uint256","nodeType":"ElementaryTypeName","src":"53842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53841:20:14"},"returnParameters":{"id":14859,"nodeType":"ParameterList","parameters":[],"src":"53870:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14864,"nodeType":"FunctionDefinition","src":"53924:34:14","nodes":[],"documentation":{"id":14861,"nodeType":"StructuredDocumentation","src":"53877:42:14","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"53933:13:14","parameters":{"id":14862,"nodeType":"ParameterList","parameters":[],"src":"53946:2:14"},"returnParameters":{"id":14863,"nodeType":"ParameterList","parameters":[],"src":"53957:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14874,"nodeType":"FunctionDefinition","src":"54070:98:14","nodes":[],"documentation":{"id":14865,"nodeType":"StructuredDocumentation","src":"53997:68:14","text":"Returns true if `search` is found in `subject`, false otherwise."},"functionSelector":"3fb18aec","implemented":false,"kind":"function","modifiers":[],"name":"contains","nameLocation":"54079:8:14","parameters":{"id":14870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14867,"mutability":"mutable","name":"subject","nameLocation":"54104:7:14","nodeType":"VariableDeclaration","scope":14874,"src":"54088:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14866,"name":"string","nodeType":"ElementaryTypeName","src":"54088:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14869,"mutability":"mutable","name":"search","nameLocation":"54129:6:14","nodeType":"VariableDeclaration","scope":14874,"src":"54113:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14868,"name":"string","nodeType":"ElementaryTypeName","src":"54113:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54087:49:14"},"returnParameters":{"id":14873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14872,"mutability":"mutable","name":"result","nameLocation":"54160:6:14","nodeType":"VariableDeclaration","scope":14874,"src":"54155:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14871,"name":"bool","nodeType":"ElementaryTypeName","src":"54155:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"54154:13:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14884,"nodeType":"FunctionDefinition","src":"54384:93:14","nodes":[],"documentation":{"id":14875,"nodeType":"StructuredDocumentation","src":"54174:205:14","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"54393:7:14","parameters":{"id":14880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14877,"mutability":"mutable","name":"input","nameLocation":"54417:5:14","nodeType":"VariableDeclaration","scope":14884,"src":"54401:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14876,"name":"string","nodeType":"ElementaryTypeName","src":"54401:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14879,"mutability":"mutable","name":"key","nameLocation":"54440:3:14","nodeType":"VariableDeclaration","scope":14884,"src":"54424:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14878,"name":"string","nodeType":"ElementaryTypeName","src":"54424:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54400:44:14"},"returnParameters":{"id":14883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14884,"src":"54468:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14881,"name":"uint256","nodeType":"ElementaryTypeName","src":"54468:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54467:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14892,"nodeType":"FunctionDefinition","src":"54536:100:14","nodes":[],"documentation":{"id":14885,"nodeType":"StructuredDocumentation","src":"54483:48:14","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"54545:12:14","parameters":{"id":14888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14887,"mutability":"mutable","name":"stringifiedValue","nameLocation":"54574:16:14","nodeType":"VariableDeclaration","scope":14892,"src":"54558:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14886,"name":"string","nodeType":"ElementaryTypeName","src":"54558:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54557:34:14"},"returnParameters":{"id":14891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14890,"mutability":"mutable","name":"parsedValue","nameLocation":"54623:11:14","nodeType":"VariableDeclaration","scope":14892,"src":"54615:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14889,"name":"address","nodeType":"ElementaryTypeName","src":"54615:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"54614:21:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14900,"nodeType":"FunctionDefinition","src":"54691:94:14","nodes":[],"documentation":{"id":14893,"nodeType":"StructuredDocumentation","src":"54642:44:14","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"54700:9:14","parameters":{"id":14896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14895,"mutability":"mutable","name":"stringifiedValue","nameLocation":"54726:16:14","nodeType":"VariableDeclaration","scope":14900,"src":"54710:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14894,"name":"string","nodeType":"ElementaryTypeName","src":"54710:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54709:34:14"},"returnParameters":{"id":14899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14898,"mutability":"mutable","name":"parsedValue","nameLocation":"54772:11:14","nodeType":"VariableDeclaration","scope":14900,"src":"54767:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14897,"name":"bool","nodeType":"ElementaryTypeName","src":"54767:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"54766:18:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14908,"nodeType":"FunctionDefinition","src":"54839:103:14","nodes":[],"documentation":{"id":14901,"nodeType":"StructuredDocumentation","src":"54791:43:14","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"54848:10:14","parameters":{"id":14904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14903,"mutability":"mutable","name":"stringifiedValue","nameLocation":"54875:16:14","nodeType":"VariableDeclaration","scope":14908,"src":"54859:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14902,"name":"string","nodeType":"ElementaryTypeName","src":"54859:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54858:34:14"},"returnParameters":{"id":14907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14906,"mutability":"mutable","name":"parsedValue","nameLocation":"54929:11:14","nodeType":"VariableDeclaration","scope":14908,"src":"54916:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14905,"name":"bytes","nodeType":"ElementaryTypeName","src":"54916:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54915:26:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14916,"nodeType":"FunctionDefinition","src":"55000:100:14","nodes":[],"documentation":{"id":14909,"nodeType":"StructuredDocumentation","src":"54948:47:14","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"55009:12:14","parameters":{"id":14912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14911,"mutability":"mutable","name":"stringifiedValue","nameLocation":"55038:16:14","nodeType":"VariableDeclaration","scope":14916,"src":"55022:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14910,"name":"string","nodeType":"ElementaryTypeName","src":"55022:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55021:34:14"},"returnParameters":{"id":14915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14914,"mutability":"mutable","name":"parsedValue","nameLocation":"55087:11:14","nodeType":"VariableDeclaration","scope":14916,"src":"55079:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55079:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"55078:21:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14924,"nodeType":"FunctionDefinition","src":"55157:95:14","nodes":[],"documentation":{"id":14917,"nodeType":"StructuredDocumentation","src":"55106:46:14","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"55166:8:14","parameters":{"id":14920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14919,"mutability":"mutable","name":"stringifiedValue","nameLocation":"55191:16:14","nodeType":"VariableDeclaration","scope":14924,"src":"55175:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14918,"name":"string","nodeType":"ElementaryTypeName","src":"55175:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55174:34:14"},"returnParameters":{"id":14923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14922,"mutability":"mutable","name":"parsedValue","nameLocation":"55239:11:14","nodeType":"VariableDeclaration","scope":14924,"src":"55232:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14921,"name":"int256","nodeType":"ElementaryTypeName","src":"55232:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55231:20:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14932,"nodeType":"FunctionDefinition","src":"55310:97:14","nodes":[],"documentation":{"id":14925,"nodeType":"StructuredDocumentation","src":"55258:47:14","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"55319:9:14","parameters":{"id":14928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14927,"mutability":"mutable","name":"stringifiedValue","nameLocation":"55345:16:14","nodeType":"VariableDeclaration","scope":14932,"src":"55329:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14926,"name":"string","nodeType":"ElementaryTypeName","src":"55329:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55328:34:14"},"returnParameters":{"id":14931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14930,"mutability":"mutable","name":"parsedValue","nameLocation":"55394:11:14","nodeType":"VariableDeclaration","scope":14932,"src":"55386:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14929,"name":"uint256","nodeType":"ElementaryTypeName","src":"55386:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55385:21:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14944,"nodeType":"FunctionDefinition","src":"55485:151:14","nodes":[],"documentation":{"id":14933,"nodeType":"StructuredDocumentation","src":"55413:67:14","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"55494:7:14","parameters":{"id":14940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14935,"mutability":"mutable","name":"input","nameLocation":"55518:5:14","nodeType":"VariableDeclaration","scope":14944,"src":"55502:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14934,"name":"string","nodeType":"ElementaryTypeName","src":"55502:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14937,"mutability":"mutable","name":"from","nameLocation":"55541:4:14","nodeType":"VariableDeclaration","scope":14944,"src":"55525:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14936,"name":"string","nodeType":"ElementaryTypeName","src":"55525:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14939,"mutability":"mutable","name":"to","nameLocation":"55563:2:14","nodeType":"VariableDeclaration","scope":14944,"src":"55547:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14938,"name":"string","nodeType":"ElementaryTypeName","src":"55547:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55501:65:14"},"returnParameters":{"id":14943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14942,"mutability":"mutable","name":"output","nameLocation":"55628:6:14","nodeType":"VariableDeclaration","scope":14944,"src":"55614:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14941,"name":"string","nodeType":"ElementaryTypeName","src":"55614:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55613:22:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14955,"nodeType":"FunctionDefinition","src":"55729:113:14","nodes":[],"documentation":{"id":14945,"nodeType":"StructuredDocumentation","src":"55642:82:14","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"55738:5:14","parameters":{"id":14950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14947,"mutability":"mutable","name":"input","nameLocation":"55760:5:14","nodeType":"VariableDeclaration","scope":14955,"src":"55744:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14946,"name":"string","nodeType":"ElementaryTypeName","src":"55744:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14949,"mutability":"mutable","name":"delimiter","nameLocation":"55783:9:14","nodeType":"VariableDeclaration","scope":14955,"src":"55767:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14948,"name":"string","nodeType":"ElementaryTypeName","src":"55767:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55743:50:14"},"returnParameters":{"id":14954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14953,"mutability":"mutable","name":"outputs","nameLocation":"55833:7:14","nodeType":"VariableDeclaration","scope":14955,"src":"55817:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14951,"name":"string","nodeType":"ElementaryTypeName","src":"55817:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14952,"nodeType":"ArrayTypeName","src":"55817:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"55816:25:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14963,"nodeType":"FunctionDefinition","src":"55904:89:14","nodes":[],"documentation":{"id":14956,"nodeType":"StructuredDocumentation","src":"55848:51:14","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"55913:11:14","parameters":{"id":14959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14958,"mutability":"mutable","name":"input","nameLocation":"55941:5:14","nodeType":"VariableDeclaration","scope":14963,"src":"55925:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14957,"name":"string","nodeType":"ElementaryTypeName","src":"55925:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55924:23:14"},"returnParameters":{"id":14962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14961,"mutability":"mutable","name":"output","nameLocation":"55985:6:14","nodeType":"VariableDeclaration","scope":14963,"src":"55971:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14960,"name":"string","nodeType":"ElementaryTypeName","src":"55971:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55970:22:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14971,"nodeType":"FunctionDefinition","src":"56047:88:14","nodes":[],"documentation":{"id":14964,"nodeType":"StructuredDocumentation","src":"55999:43:14","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56056:8:14","parameters":{"id":14967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14966,"mutability":"mutable","name":"value","nameLocation":"56073:5:14","nodeType":"VariableDeclaration","scope":14971,"src":"56065:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14965,"name":"address","nodeType":"ElementaryTypeName","src":"56065:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"56064:15:14"},"returnParameters":{"id":14970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14969,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56117:16:14","nodeType":"VariableDeclaration","scope":14971,"src":"56103:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14968,"name":"string","nodeType":"ElementaryTypeName","src":"56103:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56102:32:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14979,"nodeType":"FunctionDefinition","src":"56189:95:14","nodes":[],"documentation":{"id":14972,"nodeType":"StructuredDocumentation","src":"56141:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56198:8:14","parameters":{"id":14975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14974,"mutability":"mutable","name":"value","nameLocation":"56222:5:14","nodeType":"VariableDeclaration","scope":14979,"src":"56207:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14973,"name":"bytes","nodeType":"ElementaryTypeName","src":"56207:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56206:22:14"},"returnParameters":{"id":14978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14977,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56266:16:14","nodeType":"VariableDeclaration","scope":14979,"src":"56252:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14976,"name":"string","nodeType":"ElementaryTypeName","src":"56252:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56251:32:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14987,"nodeType":"FunctionDefinition","src":"56338:88:14","nodes":[],"documentation":{"id":14980,"nodeType":"StructuredDocumentation","src":"56290:43:14","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56347:8:14","parameters":{"id":14983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14982,"mutability":"mutable","name":"value","nameLocation":"56364:5:14","nodeType":"VariableDeclaration","scope":14987,"src":"56356:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"56356:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"56355:15:14"},"returnParameters":{"id":14986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14985,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56408:16:14","nodeType":"VariableDeclaration","scope":14987,"src":"56394:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14984,"name":"string","nodeType":"ElementaryTypeName","src":"56394:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56393:32:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14995,"nodeType":"FunctionDefinition","src":"56480:85:14","nodes":[],"documentation":{"id":14988,"nodeType":"StructuredDocumentation","src":"56432:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56489:8:14","parameters":{"id":14991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14990,"mutability":"mutable","name":"value","nameLocation":"56503:5:14","nodeType":"VariableDeclaration","scope":14995,"src":"56498:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14989,"name":"bool","nodeType":"ElementaryTypeName","src":"56498:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"56497:12:14"},"returnParameters":{"id":14994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14993,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56547:16:14","nodeType":"VariableDeclaration","scope":14995,"src":"56533:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14992,"name":"string","nodeType":"ElementaryTypeName","src":"56533:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56532:32:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15003,"nodeType":"FunctionDefinition","src":"56619:88:14","nodes":[],"documentation":{"id":14996,"nodeType":"StructuredDocumentation","src":"56571:43:14","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56628:8:14","parameters":{"id":14999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14998,"mutability":"mutable","name":"value","nameLocation":"56645:5:14","nodeType":"VariableDeclaration","scope":15003,"src":"56637:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14997,"name":"uint256","nodeType":"ElementaryTypeName","src":"56637:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56636:15:14"},"returnParameters":{"id":15002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15001,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56689:16:14","nodeType":"VariableDeclaration","scope":15003,"src":"56675:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15000,"name":"string","nodeType":"ElementaryTypeName","src":"56675:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56674:32:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15011,"nodeType":"FunctionDefinition","src":"56761:87:14","nodes":[],"documentation":{"id":15004,"nodeType":"StructuredDocumentation","src":"56713:43:14","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56770:8:14","parameters":{"id":15007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15006,"mutability":"mutable","name":"value","nameLocation":"56786:5:14","nodeType":"VariableDeclaration","scope":15011,"src":"56779:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15005,"name":"int256","nodeType":"ElementaryTypeName","src":"56779:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"56778:14:14"},"returnParameters":{"id":15010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15009,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56830:16:14","nodeType":"VariableDeclaration","scope":15011,"src":"56816:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15008,"name":"string","nodeType":"ElementaryTypeName","src":"56816:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56815:32:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15019,"nodeType":"FunctionDefinition","src":"56910:89:14","nodes":[],"documentation":{"id":15012,"nodeType":"StructuredDocumentation","src":"56854:51:14","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"56919:11:14","parameters":{"id":15015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15014,"mutability":"mutable","name":"input","nameLocation":"56947:5:14","nodeType":"VariableDeclaration","scope":15019,"src":"56931:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15013,"name":"string","nodeType":"ElementaryTypeName","src":"56931:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56930:23:14"},"returnParameters":{"id":15018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15017,"mutability":"mutable","name":"output","nameLocation":"56991:6:14","nodeType":"VariableDeclaration","scope":15019,"src":"56977:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15016,"name":"string","nodeType":"ElementaryTypeName","src":"56977:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56976:22:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15027,"nodeType":"FunctionDefinition","src":"57082:82:14","nodes":[],"documentation":{"id":15020,"nodeType":"StructuredDocumentation","src":"57005:72:14","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"57091:4:14","parameters":{"id":15023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15022,"mutability":"mutable","name":"input","nameLocation":"57112:5:14","nodeType":"VariableDeclaration","scope":15027,"src":"57096:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15021,"name":"string","nodeType":"ElementaryTypeName","src":"57096:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57095:23:14"},"returnParameters":{"id":15026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15025,"mutability":"mutable","name":"output","nameLocation":"57156:6:14","nodeType":"VariableDeclaration","scope":15027,"src":"57142:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15024,"name":"string","nodeType":"ElementaryTypeName","src":"57142:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57141:22:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15039,"nodeType":"FunctionDefinition","src":"57359:113:14","nodes":[],"documentation":{"id":15028,"nodeType":"StructuredDocumentation","src":"57204:150:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"57368:24:14","parameters":{"id":15037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15030,"mutability":"mutable","name":"left","nameLocation":"57401:4:14","nodeType":"VariableDeclaration","scope":15039,"src":"57393:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15029,"name":"uint256","nodeType":"ElementaryTypeName","src":"57393:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15032,"mutability":"mutable","name":"right","nameLocation":"57415:5:14","nodeType":"VariableDeclaration","scope":15039,"src":"57407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15031,"name":"uint256","nodeType":"ElementaryTypeName","src":"57407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15034,"mutability":"mutable","name":"maxDelta","nameLocation":"57430:8:14","nodeType":"VariableDeclaration","scope":15039,"src":"57422:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15033,"name":"uint256","nodeType":"ElementaryTypeName","src":"57422:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15036,"mutability":"mutable","name":"decimals","nameLocation":"57448:8:14","nodeType":"VariableDeclaration","scope":15039,"src":"57440:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15035,"name":"uint256","nodeType":"ElementaryTypeName","src":"57440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57392:65:14"},"returnParameters":{"id":15038,"nodeType":"ParameterList","parameters":[],"src":"57471:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15053,"nodeType":"FunctionDefinition","src":"57687:182:14","nodes":[],"documentation":{"id":15040,"nodeType":"StructuredDocumentation","src":"57478:204:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"57696:24:14","parameters":{"id":15051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15042,"mutability":"mutable","name":"left","nameLocation":"57738:4:14","nodeType":"VariableDeclaration","scope":15053,"src":"57730:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15041,"name":"uint256","nodeType":"ElementaryTypeName","src":"57730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15044,"mutability":"mutable","name":"right","nameLocation":"57760:5:14","nodeType":"VariableDeclaration","scope":15053,"src":"57752:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15043,"name":"uint256","nodeType":"ElementaryTypeName","src":"57752:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15046,"mutability":"mutable","name":"maxDelta","nameLocation":"57783:8:14","nodeType":"VariableDeclaration","scope":15053,"src":"57775:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15045,"name":"uint256","nodeType":"ElementaryTypeName","src":"57775:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15048,"mutability":"mutable","name":"decimals","nameLocation":"57809:8:14","nodeType":"VariableDeclaration","scope":15053,"src":"57801:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15047,"name":"uint256","nodeType":"ElementaryTypeName","src":"57801:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15050,"mutability":"mutable","name":"error","nameLocation":"57843:5:14","nodeType":"VariableDeclaration","scope":15053,"src":"57827:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15049,"name":"string","nodeType":"ElementaryTypeName","src":"57827:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57720:134:14"},"returnParameters":{"id":15052,"nodeType":"ParameterList","parameters":[],"src":"57868:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15065,"nodeType":"FunctionDefinition","src":"58029:111:14","nodes":[],"documentation":{"id":15054,"nodeType":"StructuredDocumentation","src":"57875:149:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"58038:24:14","parameters":{"id":15063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15056,"mutability":"mutable","name":"left","nameLocation":"58070:4:14","nodeType":"VariableDeclaration","scope":15065,"src":"58063:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15055,"name":"int256","nodeType":"ElementaryTypeName","src":"58063:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15058,"mutability":"mutable","name":"right","nameLocation":"58083:5:14","nodeType":"VariableDeclaration","scope":15065,"src":"58076:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15057,"name":"int256","nodeType":"ElementaryTypeName","src":"58076:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15060,"mutability":"mutable","name":"maxDelta","nameLocation":"58098:8:14","nodeType":"VariableDeclaration","scope":15065,"src":"58090:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15059,"name":"uint256","nodeType":"ElementaryTypeName","src":"58090:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15062,"mutability":"mutable","name":"decimals","nameLocation":"58116:8:14","nodeType":"VariableDeclaration","scope":15065,"src":"58108:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15061,"name":"uint256","nodeType":"ElementaryTypeName","src":"58108:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58062:63:14"},"returnParameters":{"id":15064,"nodeType":"ParameterList","parameters":[],"src":"58139:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15079,"nodeType":"FunctionDefinition","src":"58354:180:14","nodes":[],"documentation":{"id":15066,"nodeType":"StructuredDocumentation","src":"58146:203:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"58363:24:14","parameters":{"id":15077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15068,"mutability":"mutable","name":"left","nameLocation":"58404:4:14","nodeType":"VariableDeclaration","scope":15079,"src":"58397:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15067,"name":"int256","nodeType":"ElementaryTypeName","src":"58397:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15070,"mutability":"mutable","name":"right","nameLocation":"58425:5:14","nodeType":"VariableDeclaration","scope":15079,"src":"58418:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15069,"name":"int256","nodeType":"ElementaryTypeName","src":"58418:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15072,"mutability":"mutable","name":"maxDelta","nameLocation":"58448:8:14","nodeType":"VariableDeclaration","scope":15079,"src":"58440:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15071,"name":"uint256","nodeType":"ElementaryTypeName","src":"58440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15074,"mutability":"mutable","name":"decimals","nameLocation":"58474:8:14","nodeType":"VariableDeclaration","scope":15079,"src":"58466:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15073,"name":"uint256","nodeType":"ElementaryTypeName","src":"58466:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15076,"mutability":"mutable","name":"error","nameLocation":"58508:5:14","nodeType":"VariableDeclaration","scope":15079,"src":"58492:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15075,"name":"string","nodeType":"ElementaryTypeName","src":"58492:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58387:132:14"},"returnParameters":{"id":15078,"nodeType":"ParameterList","parameters":[],"src":"58533:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15089,"nodeType":"FunctionDefinition","src":"58638:88:14","nodes":[],"documentation":{"id":15080,"nodeType":"StructuredDocumentation","src":"58540:93:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"58647:17:14","parameters":{"id":15087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15082,"mutability":"mutable","name":"left","nameLocation":"58673:4:14","nodeType":"VariableDeclaration","scope":15089,"src":"58665:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15081,"name":"uint256","nodeType":"ElementaryTypeName","src":"58665:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15084,"mutability":"mutable","name":"right","nameLocation":"58687:5:14","nodeType":"VariableDeclaration","scope":15089,"src":"58679:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15083,"name":"uint256","nodeType":"ElementaryTypeName","src":"58679:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15086,"mutability":"mutable","name":"maxDelta","nameLocation":"58702:8:14","nodeType":"VariableDeclaration","scope":15089,"src":"58694:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15085,"name":"uint256","nodeType":"ElementaryTypeName","src":"58694:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58664:47:14"},"returnParameters":{"id":15088,"nodeType":"ParameterList","parameters":[],"src":"58725:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15101,"nodeType":"FunctionDefinition","src":"58892:111:14","nodes":[],"documentation":{"id":15090,"nodeType":"StructuredDocumentation","src":"58732:155:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"58901:17:14","parameters":{"id":15099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15092,"mutability":"mutable","name":"left","nameLocation":"58927:4:14","nodeType":"VariableDeclaration","scope":15101,"src":"58919:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15091,"name":"uint256","nodeType":"ElementaryTypeName","src":"58919:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15094,"mutability":"mutable","name":"right","nameLocation":"58941:5:14","nodeType":"VariableDeclaration","scope":15101,"src":"58933:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15093,"name":"uint256","nodeType":"ElementaryTypeName","src":"58933:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15096,"mutability":"mutable","name":"maxDelta","nameLocation":"58956:8:14","nodeType":"VariableDeclaration","scope":15101,"src":"58948:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15095,"name":"uint256","nodeType":"ElementaryTypeName","src":"58948:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15098,"mutability":"mutable","name":"error","nameLocation":"58982:5:14","nodeType":"VariableDeclaration","scope":15101,"src":"58966:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15097,"name":"string","nodeType":"ElementaryTypeName","src":"58966:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58918:70:14"},"returnParameters":{"id":15100,"nodeType":"ParameterList","parameters":[],"src":"59002:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15111,"nodeType":"FunctionDefinition","src":"59106:86:14","nodes":[],"documentation":{"id":15102,"nodeType":"StructuredDocumentation","src":"59009:92:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"59115:17:14","parameters":{"id":15109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15104,"mutability":"mutable","name":"left","nameLocation":"59140:4:14","nodeType":"VariableDeclaration","scope":15111,"src":"59133:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15103,"name":"int256","nodeType":"ElementaryTypeName","src":"59133:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15106,"mutability":"mutable","name":"right","nameLocation":"59153:5:14","nodeType":"VariableDeclaration","scope":15111,"src":"59146:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15105,"name":"int256","nodeType":"ElementaryTypeName","src":"59146:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15108,"mutability":"mutable","name":"maxDelta","nameLocation":"59168:8:14","nodeType":"VariableDeclaration","scope":15111,"src":"59160:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15107,"name":"uint256","nodeType":"ElementaryTypeName","src":"59160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59132:45:14"},"returnParameters":{"id":15110,"nodeType":"ParameterList","parameters":[],"src":"59191:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15123,"nodeType":"FunctionDefinition","src":"59357:109:14","nodes":[],"documentation":{"id":15112,"nodeType":"StructuredDocumentation","src":"59198:154:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"59366:17:14","parameters":{"id":15121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15114,"mutability":"mutable","name":"left","nameLocation":"59391:4:14","nodeType":"VariableDeclaration","scope":15123,"src":"59384:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15113,"name":"int256","nodeType":"ElementaryTypeName","src":"59384:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15116,"mutability":"mutable","name":"right","nameLocation":"59404:5:14","nodeType":"VariableDeclaration","scope":15123,"src":"59397:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15115,"name":"int256","nodeType":"ElementaryTypeName","src":"59397:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15118,"mutability":"mutable","name":"maxDelta","nameLocation":"59419:8:14","nodeType":"VariableDeclaration","scope":15123,"src":"59411:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15117,"name":"uint256","nodeType":"ElementaryTypeName","src":"59411:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15120,"mutability":"mutable","name":"error","nameLocation":"59445:5:14","nodeType":"VariableDeclaration","scope":15123,"src":"59429:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15119,"name":"string","nodeType":"ElementaryTypeName","src":"59429:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59383:68:14"},"returnParameters":{"id":15122,"nodeType":"ParameterList","parameters":[],"src":"59465:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15135,"nodeType":"FunctionDefinition","src":"59737:136:14","nodes":[],"documentation":{"id":15124,"nodeType":"StructuredDocumentation","src":"59472:260:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"59746:24:14","parameters":{"id":15133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15126,"mutability":"mutable","name":"left","nameLocation":"59779:4:14","nodeType":"VariableDeclaration","scope":15135,"src":"59771:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15125,"name":"uint256","nodeType":"ElementaryTypeName","src":"59771:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15128,"mutability":"mutable","name":"right","nameLocation":"59793:5:14","nodeType":"VariableDeclaration","scope":15135,"src":"59785:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15127,"name":"uint256","nodeType":"ElementaryTypeName","src":"59785:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15130,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"59808:15:14","nodeType":"VariableDeclaration","scope":15135,"src":"59800:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15129,"name":"uint256","nodeType":"ElementaryTypeName","src":"59800:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15132,"mutability":"mutable","name":"decimals","nameLocation":"59833:8:14","nodeType":"VariableDeclaration","scope":15135,"src":"59825:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15131,"name":"uint256","nodeType":"ElementaryTypeName","src":"59825:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59770:72:14"},"returnParameters":{"id":15134,"nodeType":"ParameterList","parameters":[],"src":"59872:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15149,"nodeType":"FunctionDefinition","src":"60198:189:14","nodes":[],"documentation":{"id":15136,"nodeType":"StructuredDocumentation","src":"59879:314:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"60207:24:14","parameters":{"id":15147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15138,"mutability":"mutable","name":"left","nameLocation":"60249:4:14","nodeType":"VariableDeclaration","scope":15149,"src":"60241:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15137,"name":"uint256","nodeType":"ElementaryTypeName","src":"60241:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15140,"mutability":"mutable","name":"right","nameLocation":"60271:5:14","nodeType":"VariableDeclaration","scope":15149,"src":"60263:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15139,"name":"uint256","nodeType":"ElementaryTypeName","src":"60263:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15142,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"60294:15:14","nodeType":"VariableDeclaration","scope":15149,"src":"60286:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15141,"name":"uint256","nodeType":"ElementaryTypeName","src":"60286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15144,"mutability":"mutable","name":"decimals","nameLocation":"60327:8:14","nodeType":"VariableDeclaration","scope":15149,"src":"60319:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15143,"name":"uint256","nodeType":"ElementaryTypeName","src":"60319:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15146,"mutability":"mutable","name":"error","nameLocation":"60361:5:14","nodeType":"VariableDeclaration","scope":15149,"src":"60345:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15145,"name":"string","nodeType":"ElementaryTypeName","src":"60345:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60231:141:14"},"returnParameters":{"id":15148,"nodeType":"ParameterList","parameters":[],"src":"60386:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15161,"nodeType":"FunctionDefinition","src":"60657:134:14","nodes":[],"documentation":{"id":15150,"nodeType":"StructuredDocumentation","src":"60393:259:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"60666:24:14","parameters":{"id":15159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15152,"mutability":"mutable","name":"left","nameLocation":"60698:4:14","nodeType":"VariableDeclaration","scope":15161,"src":"60691:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15151,"name":"int256","nodeType":"ElementaryTypeName","src":"60691:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15154,"mutability":"mutable","name":"right","nameLocation":"60711:5:14","nodeType":"VariableDeclaration","scope":15161,"src":"60704:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15153,"name":"int256","nodeType":"ElementaryTypeName","src":"60704:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15156,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"60726:15:14","nodeType":"VariableDeclaration","scope":15161,"src":"60718:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15155,"name":"uint256","nodeType":"ElementaryTypeName","src":"60718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15158,"mutability":"mutable","name":"decimals","nameLocation":"60751:8:14","nodeType":"VariableDeclaration","scope":15161,"src":"60743:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15157,"name":"uint256","nodeType":"ElementaryTypeName","src":"60743:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60690:70:14"},"returnParameters":{"id":15160,"nodeType":"ParameterList","parameters":[],"src":"60790:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15175,"nodeType":"FunctionDefinition","src":"61115:187:14","nodes":[],"documentation":{"id":15162,"nodeType":"StructuredDocumentation","src":"60797:313:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"61124:24:14","parameters":{"id":15173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15164,"mutability":"mutable","name":"left","nameLocation":"61165:4:14","nodeType":"VariableDeclaration","scope":15175,"src":"61158:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15163,"name":"int256","nodeType":"ElementaryTypeName","src":"61158:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15166,"mutability":"mutable","name":"right","nameLocation":"61186:5:14","nodeType":"VariableDeclaration","scope":15175,"src":"61179:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15165,"name":"int256","nodeType":"ElementaryTypeName","src":"61179:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15168,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"61209:15:14","nodeType":"VariableDeclaration","scope":15175,"src":"61201:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15167,"name":"uint256","nodeType":"ElementaryTypeName","src":"61201:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15170,"mutability":"mutable","name":"decimals","nameLocation":"61242:8:14","nodeType":"VariableDeclaration","scope":15175,"src":"61234:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15169,"name":"uint256","nodeType":"ElementaryTypeName","src":"61234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15172,"mutability":"mutable","name":"error","nameLocation":"61276:5:14","nodeType":"VariableDeclaration","scope":15175,"src":"61260:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15171,"name":"string","nodeType":"ElementaryTypeName","src":"61260:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61148:139:14"},"returnParameters":{"id":15174,"nodeType":"ParameterList","parameters":[],"src":"61301:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15185,"nodeType":"FunctionDefinition","src":"61516:95:14","nodes":[],"documentation":{"id":15176,"nodeType":"StructuredDocumentation","src":"61308:203:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"61525:17:14","parameters":{"id":15183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15178,"mutability":"mutable","name":"left","nameLocation":"61551:4:14","nodeType":"VariableDeclaration","scope":15185,"src":"61543:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15177,"name":"uint256","nodeType":"ElementaryTypeName","src":"61543:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15180,"mutability":"mutable","name":"right","nameLocation":"61565:5:14","nodeType":"VariableDeclaration","scope":15185,"src":"61557:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15179,"name":"uint256","nodeType":"ElementaryTypeName","src":"61557:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15182,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"61580:15:14","nodeType":"VariableDeclaration","scope":15185,"src":"61572:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15181,"name":"uint256","nodeType":"ElementaryTypeName","src":"61572:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61542:54:14"},"returnParameters":{"id":15184,"nodeType":"ParameterList","parameters":[],"src":"61610:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15197,"nodeType":"FunctionDefinition","src":"61887:134:14","nodes":[],"documentation":{"id":15186,"nodeType":"StructuredDocumentation","src":"61617:265:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"61896:17:14","parameters":{"id":15195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15188,"mutability":"mutable","name":"left","nameLocation":"61922:4:14","nodeType":"VariableDeclaration","scope":15197,"src":"61914:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15187,"name":"uint256","nodeType":"ElementaryTypeName","src":"61914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15190,"mutability":"mutable","name":"right","nameLocation":"61936:5:14","nodeType":"VariableDeclaration","scope":15197,"src":"61928:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15189,"name":"uint256","nodeType":"ElementaryTypeName","src":"61928:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15192,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"61951:15:14","nodeType":"VariableDeclaration","scope":15197,"src":"61943:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15191,"name":"uint256","nodeType":"ElementaryTypeName","src":"61943:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15194,"mutability":"mutable","name":"error","nameLocation":"61984:5:14","nodeType":"VariableDeclaration","scope":15197,"src":"61968:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15193,"name":"string","nodeType":"ElementaryTypeName","src":"61968:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61913:77:14"},"returnParameters":{"id":15196,"nodeType":"ParameterList","parameters":[],"src":"62020:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15207,"nodeType":"FunctionDefinition","src":"62234:93:14","nodes":[],"documentation":{"id":15198,"nodeType":"StructuredDocumentation","src":"62027:202:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"62243:17:14","parameters":{"id":15205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15200,"mutability":"mutable","name":"left","nameLocation":"62268:4:14","nodeType":"VariableDeclaration","scope":15207,"src":"62261:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15199,"name":"int256","nodeType":"ElementaryTypeName","src":"62261:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15202,"mutability":"mutable","name":"right","nameLocation":"62281:5:14","nodeType":"VariableDeclaration","scope":15207,"src":"62274:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15201,"name":"int256","nodeType":"ElementaryTypeName","src":"62274:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15204,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"62296:15:14","nodeType":"VariableDeclaration","scope":15207,"src":"62288:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15203,"name":"uint256","nodeType":"ElementaryTypeName","src":"62288:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62260:52:14"},"returnParameters":{"id":15206,"nodeType":"ParameterList","parameters":[],"src":"62326:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15219,"nodeType":"FunctionDefinition","src":"62602:132:14","nodes":[],"documentation":{"id":15208,"nodeType":"StructuredDocumentation","src":"62333:264:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"62611:17:14","parameters":{"id":15217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15210,"mutability":"mutable","name":"left","nameLocation":"62636:4:14","nodeType":"VariableDeclaration","scope":15219,"src":"62629:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15209,"name":"int256","nodeType":"ElementaryTypeName","src":"62629:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15212,"mutability":"mutable","name":"right","nameLocation":"62649:5:14","nodeType":"VariableDeclaration","scope":15219,"src":"62642:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15211,"name":"int256","nodeType":"ElementaryTypeName","src":"62642:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15214,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"62664:15:14","nodeType":"VariableDeclaration","scope":15219,"src":"62656:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15213,"name":"uint256","nodeType":"ElementaryTypeName","src":"62656:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15216,"mutability":"mutable","name":"error","nameLocation":"62697:5:14","nodeType":"VariableDeclaration","scope":15219,"src":"62681:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15215,"name":"string","nodeType":"ElementaryTypeName","src":"62681:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62628:75:14"},"returnParameters":{"id":15218,"nodeType":"ParameterList","parameters":[],"src":"62733:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15229,"nodeType":"FunctionDefinition","src":"62843:86:14","nodes":[],"documentation":{"id":15220,"nodeType":"StructuredDocumentation","src":"62740:98:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"62852:15:14","parameters":{"id":15227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15222,"mutability":"mutable","name":"left","nameLocation":"62876:4:14","nodeType":"VariableDeclaration","scope":15229,"src":"62868:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15221,"name":"uint256","nodeType":"ElementaryTypeName","src":"62868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15224,"mutability":"mutable","name":"right","nameLocation":"62890:5:14","nodeType":"VariableDeclaration","scope":15229,"src":"62882:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15223,"name":"uint256","nodeType":"ElementaryTypeName","src":"62882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15226,"mutability":"mutable","name":"decimals","nameLocation":"62905:8:14","nodeType":"VariableDeclaration","scope":15229,"src":"62897:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15225,"name":"uint256","nodeType":"ElementaryTypeName","src":"62897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62867:47:14"},"returnParameters":{"id":15228,"nodeType":"ParameterList","parameters":[],"src":"62928:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15241,"nodeType":"FunctionDefinition","src":"63100:109:14","nodes":[],"documentation":{"id":15230,"nodeType":"StructuredDocumentation","src":"62935:160:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"63109:15:14","parameters":{"id":15239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15232,"mutability":"mutable","name":"left","nameLocation":"63133:4:14","nodeType":"VariableDeclaration","scope":15241,"src":"63125:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15231,"name":"uint256","nodeType":"ElementaryTypeName","src":"63125:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15234,"mutability":"mutable","name":"right","nameLocation":"63147:5:14","nodeType":"VariableDeclaration","scope":15241,"src":"63139:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15233,"name":"uint256","nodeType":"ElementaryTypeName","src":"63139:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15236,"mutability":"mutable","name":"decimals","nameLocation":"63162:8:14","nodeType":"VariableDeclaration","scope":15241,"src":"63154:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15235,"name":"uint256","nodeType":"ElementaryTypeName","src":"63154:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15238,"mutability":"mutable","name":"error","nameLocation":"63188:5:14","nodeType":"VariableDeclaration","scope":15241,"src":"63172:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15237,"name":"string","nodeType":"ElementaryTypeName","src":"63172:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63124:70:14"},"returnParameters":{"id":15240,"nodeType":"ParameterList","parameters":[],"src":"63208:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15251,"nodeType":"FunctionDefinition","src":"63317:84:14","nodes":[],"documentation":{"id":15242,"nodeType":"StructuredDocumentation","src":"63215:97:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"63326:15:14","parameters":{"id":15249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15244,"mutability":"mutable","name":"left","nameLocation":"63349:4:14","nodeType":"VariableDeclaration","scope":15251,"src":"63342:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15243,"name":"int256","nodeType":"ElementaryTypeName","src":"63342:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15246,"mutability":"mutable","name":"right","nameLocation":"63362:5:14","nodeType":"VariableDeclaration","scope":15251,"src":"63355:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15245,"name":"int256","nodeType":"ElementaryTypeName","src":"63355:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15248,"mutability":"mutable","name":"decimals","nameLocation":"63377:8:14","nodeType":"VariableDeclaration","scope":15251,"src":"63369:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15247,"name":"uint256","nodeType":"ElementaryTypeName","src":"63369:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63341:45:14"},"returnParameters":{"id":15250,"nodeType":"ParameterList","parameters":[],"src":"63400:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15263,"nodeType":"FunctionDefinition","src":"63571:107:14","nodes":[],"documentation":{"id":15252,"nodeType":"StructuredDocumentation","src":"63407:159:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"63580:15:14","parameters":{"id":15261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15254,"mutability":"mutable","name":"left","nameLocation":"63603:4:14","nodeType":"VariableDeclaration","scope":15263,"src":"63596:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15253,"name":"int256","nodeType":"ElementaryTypeName","src":"63596:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15256,"mutability":"mutable","name":"right","nameLocation":"63616:5:14","nodeType":"VariableDeclaration","scope":15263,"src":"63609:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15255,"name":"int256","nodeType":"ElementaryTypeName","src":"63609:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15258,"mutability":"mutable","name":"decimals","nameLocation":"63631:8:14","nodeType":"VariableDeclaration","scope":15263,"src":"63623:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15257,"name":"uint256","nodeType":"ElementaryTypeName","src":"63623:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15260,"mutability":"mutable","name":"error","nameLocation":"63657:5:14","nodeType":"VariableDeclaration","scope":15263,"src":"63641:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15259,"name":"string","nodeType":"ElementaryTypeName","src":"63641:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63595:68:14"},"returnParameters":{"id":15262,"nodeType":"ParameterList","parameters":[],"src":"63677:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15271,"nodeType":"FunctionDefinition","src":"63734:55:14","nodes":[],"documentation":{"id":15264,"nodeType":"StructuredDocumentation","src":"63684:45:14","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"63743:8:14","parameters":{"id":15269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15266,"mutability":"mutable","name":"left","nameLocation":"63757:4:14","nodeType":"VariableDeclaration","scope":15271,"src":"63752:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15265,"name":"bool","nodeType":"ElementaryTypeName","src":"63752:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15268,"mutability":"mutable","name":"right","nameLocation":"63768:5:14","nodeType":"VariableDeclaration","scope":15271,"src":"63763:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15267,"name":"bool","nodeType":"ElementaryTypeName","src":"63763:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63751:23:14"},"returnParameters":{"id":15270,"nodeType":"ParameterList","parameters":[],"src":"63788:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15281,"nodeType":"FunctionDefinition","src":"63902:78:14","nodes":[],"documentation":{"id":15272,"nodeType":"StructuredDocumentation","src":"63795:102:14","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"63911:8:14","parameters":{"id":15279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15274,"mutability":"mutable","name":"left","nameLocation":"63925:4:14","nodeType":"VariableDeclaration","scope":15281,"src":"63920:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15273,"name":"bool","nodeType":"ElementaryTypeName","src":"63920:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15276,"mutability":"mutable","name":"right","nameLocation":"63936:5:14","nodeType":"VariableDeclaration","scope":15281,"src":"63931:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15275,"name":"bool","nodeType":"ElementaryTypeName","src":"63931:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15278,"mutability":"mutable","name":"error","nameLocation":"63959:5:14","nodeType":"VariableDeclaration","scope":15281,"src":"63943:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15277,"name":"string","nodeType":"ElementaryTypeName","src":"63943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63919:46:14"},"returnParameters":{"id":15280,"nodeType":"ParameterList","parameters":[],"src":"63979:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15289,"nodeType":"FunctionDefinition","src":"64038:77:14","nodes":[],"documentation":{"id":15282,"nodeType":"StructuredDocumentation","src":"63986:47:14","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64047:8:14","parameters":{"id":15287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15284,"mutability":"mutable","name":"left","nameLocation":"64072:4:14","nodeType":"VariableDeclaration","scope":15289,"src":"64056:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15283,"name":"string","nodeType":"ElementaryTypeName","src":"64056:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15286,"mutability":"mutable","name":"right","nameLocation":"64094:5:14","nodeType":"VariableDeclaration","scope":15289,"src":"64078:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15285,"name":"string","nodeType":"ElementaryTypeName","src":"64078:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64055:45:14"},"returnParameters":{"id":15288,"nodeType":"ParameterList","parameters":[],"src":"64114:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15299,"nodeType":"FunctionDefinition","src":"64230:100:14","nodes":[],"documentation":{"id":15290,"nodeType":"StructuredDocumentation","src":"64121:104:14","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64239:8:14","parameters":{"id":15297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15292,"mutability":"mutable","name":"left","nameLocation":"64264:4:14","nodeType":"VariableDeclaration","scope":15299,"src":"64248:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15291,"name":"string","nodeType":"ElementaryTypeName","src":"64248:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15294,"mutability":"mutable","name":"right","nameLocation":"64286:5:14","nodeType":"VariableDeclaration","scope":15299,"src":"64270:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15293,"name":"string","nodeType":"ElementaryTypeName","src":"64270:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15296,"mutability":"mutable","name":"error","nameLocation":"64309:5:14","nodeType":"VariableDeclaration","scope":15299,"src":"64293:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15295,"name":"string","nodeType":"ElementaryTypeName","src":"64293:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64247:68:14"},"returnParameters":{"id":15298,"nodeType":"ParameterList","parameters":[],"src":"64329:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15307,"nodeType":"FunctionDefinition","src":"64387:75:14","nodes":[],"documentation":{"id":15300,"nodeType":"StructuredDocumentation","src":"64336:46:14","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64396:8:14","parameters":{"id":15305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15302,"mutability":"mutable","name":"left","nameLocation":"64420:4:14","nodeType":"VariableDeclaration","scope":15307,"src":"64405:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15301,"name":"bytes","nodeType":"ElementaryTypeName","src":"64405:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15304,"mutability":"mutable","name":"right","nameLocation":"64441:5:14","nodeType":"VariableDeclaration","scope":15307,"src":"64426:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15303,"name":"bytes","nodeType":"ElementaryTypeName","src":"64426:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"64404:43:14"},"returnParameters":{"id":15306,"nodeType":"ParameterList","parameters":[],"src":"64461:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15317,"nodeType":"FunctionDefinition","src":"64576:98:14","nodes":[],"documentation":{"id":15308,"nodeType":"StructuredDocumentation","src":"64468:103:14","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64585:8:14","parameters":{"id":15315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15310,"mutability":"mutable","name":"left","nameLocation":"64609:4:14","nodeType":"VariableDeclaration","scope":15317,"src":"64594:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15309,"name":"bytes","nodeType":"ElementaryTypeName","src":"64594:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15312,"mutability":"mutable","name":"right","nameLocation":"64630:5:14","nodeType":"VariableDeclaration","scope":15317,"src":"64615:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15311,"name":"bytes","nodeType":"ElementaryTypeName","src":"64615:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15314,"mutability":"mutable","name":"error","nameLocation":"64653:5:14","nodeType":"VariableDeclaration","scope":15317,"src":"64637:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15313,"name":"string","nodeType":"ElementaryTypeName","src":"64637:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64593:66:14"},"returnParameters":{"id":15316,"nodeType":"ParameterList","parameters":[],"src":"64673:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15327,"nodeType":"FunctionDefinition","src":"64740:77:14","nodes":[],"documentation":{"id":15318,"nodeType":"StructuredDocumentation","src":"64680:55:14","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64749:8:14","parameters":{"id":15325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15321,"mutability":"mutable","name":"left","nameLocation":"64774:4:14","nodeType":"VariableDeclaration","scope":15327,"src":"64758:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15319,"name":"bool","nodeType":"ElementaryTypeName","src":"64758:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15320,"nodeType":"ArrayTypeName","src":"64758:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15324,"mutability":"mutable","name":"right","nameLocation":"64796:5:14","nodeType":"VariableDeclaration","scope":15327,"src":"64780:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15322,"name":"bool","nodeType":"ElementaryTypeName","src":"64780:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15323,"nodeType":"ArrayTypeName","src":"64780:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"64757:45:14"},"returnParameters":{"id":15326,"nodeType":"ParameterList","parameters":[],"src":"64816:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15339,"nodeType":"FunctionDefinition","src":"64940:100:14","nodes":[],"documentation":{"id":15328,"nodeType":"StructuredDocumentation","src":"64823:112:14","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64949:8:14","parameters":{"id":15337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15331,"mutability":"mutable","name":"left","nameLocation":"64974:4:14","nodeType":"VariableDeclaration","scope":15339,"src":"64958:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15329,"name":"bool","nodeType":"ElementaryTypeName","src":"64958:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15330,"nodeType":"ArrayTypeName","src":"64958:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15334,"mutability":"mutable","name":"right","nameLocation":"64996:5:14","nodeType":"VariableDeclaration","scope":15339,"src":"64980:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15332,"name":"bool","nodeType":"ElementaryTypeName","src":"64980:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15333,"nodeType":"ArrayTypeName","src":"64980:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15336,"mutability":"mutable","name":"error","nameLocation":"65019:5:14","nodeType":"VariableDeclaration","scope":15339,"src":"65003:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15335,"name":"string","nodeType":"ElementaryTypeName","src":"65003:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64957:68:14"},"returnParameters":{"id":15338,"nodeType":"ParameterList","parameters":[],"src":"65039:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15349,"nodeType":"FunctionDefinition","src":"65108:83:14","nodes":[],"documentation":{"id":15340,"nodeType":"StructuredDocumentation","src":"65046:57:14","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65117:8:14","parameters":{"id":15347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15343,"mutability":"mutable","name":"left","nameLocation":"65145:4:14","nodeType":"VariableDeclaration","scope":15349,"src":"65126:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15341,"name":"uint256","nodeType":"ElementaryTypeName","src":"65126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15342,"nodeType":"ArrayTypeName","src":"65126:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15346,"mutability":"mutable","name":"right","nameLocation":"65170:5:14","nodeType":"VariableDeclaration","scope":15349,"src":"65151:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15344,"name":"uint256","nodeType":"ElementaryTypeName","src":"65151:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15345,"nodeType":"ArrayTypeName","src":"65151:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"65125:51:14"},"returnParameters":{"id":15348,"nodeType":"ParameterList","parameters":[],"src":"65190:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15361,"nodeType":"FunctionDefinition","src":"65317:106:14","nodes":[],"documentation":{"id":15350,"nodeType":"StructuredDocumentation","src":"65197:115:14","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65326:8:14","parameters":{"id":15359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15353,"mutability":"mutable","name":"left","nameLocation":"65354:4:14","nodeType":"VariableDeclaration","scope":15361,"src":"65335:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15351,"name":"uint256","nodeType":"ElementaryTypeName","src":"65335:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15352,"nodeType":"ArrayTypeName","src":"65335:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15356,"mutability":"mutable","name":"right","nameLocation":"65379:5:14","nodeType":"VariableDeclaration","scope":15361,"src":"65360:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15354,"name":"uint256","nodeType":"ElementaryTypeName","src":"65360:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15355,"nodeType":"ArrayTypeName","src":"65360:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15358,"mutability":"mutable","name":"error","nameLocation":"65402:5:14","nodeType":"VariableDeclaration","scope":15361,"src":"65386:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15357,"name":"string","nodeType":"ElementaryTypeName","src":"65386:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65334:74:14"},"returnParameters":{"id":15360,"nodeType":"ParameterList","parameters":[],"src":"65422:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15371,"nodeType":"FunctionDefinition","src":"65491:81:14","nodes":[],"documentation":{"id":15362,"nodeType":"StructuredDocumentation","src":"65429:57:14","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65500:8:14","parameters":{"id":15369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15365,"mutability":"mutable","name":"left","nameLocation":"65527:4:14","nodeType":"VariableDeclaration","scope":15371,"src":"65509:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15363,"name":"int256","nodeType":"ElementaryTypeName","src":"65509:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15364,"nodeType":"ArrayTypeName","src":"65509:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15368,"mutability":"mutable","name":"right","nameLocation":"65551:5:14","nodeType":"VariableDeclaration","scope":15371,"src":"65533:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15366,"name":"int256","nodeType":"ElementaryTypeName","src":"65533:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15367,"nodeType":"ArrayTypeName","src":"65533:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"65508:49:14"},"returnParameters":{"id":15370,"nodeType":"ParameterList","parameters":[],"src":"65571:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15383,"nodeType":"FunctionDefinition","src":"65697:104:14","nodes":[],"documentation":{"id":15372,"nodeType":"StructuredDocumentation","src":"65578:114:14","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65706:8:14","parameters":{"id":15381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15375,"mutability":"mutable","name":"left","nameLocation":"65733:4:14","nodeType":"VariableDeclaration","scope":15383,"src":"65715:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15373,"name":"int256","nodeType":"ElementaryTypeName","src":"65715:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15374,"nodeType":"ArrayTypeName","src":"65715:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15378,"mutability":"mutable","name":"right","nameLocation":"65757:5:14","nodeType":"VariableDeclaration","scope":15383,"src":"65739:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15376,"name":"int256","nodeType":"ElementaryTypeName","src":"65739:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15377,"nodeType":"ArrayTypeName","src":"65739:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15380,"mutability":"mutable","name":"error","nameLocation":"65780:5:14","nodeType":"VariableDeclaration","scope":15383,"src":"65764:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15379,"name":"string","nodeType":"ElementaryTypeName","src":"65764:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65714:72:14"},"returnParameters":{"id":15382,"nodeType":"ParameterList","parameters":[],"src":"65800:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15391,"nodeType":"FunctionDefinition","src":"65860:61:14","nodes":[],"documentation":{"id":15384,"nodeType":"StructuredDocumentation","src":"65807:48:14","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65869:8:14","parameters":{"id":15389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15386,"mutability":"mutable","name":"left","nameLocation":"65886:4:14","nodeType":"VariableDeclaration","scope":15391,"src":"65878:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15385,"name":"uint256","nodeType":"ElementaryTypeName","src":"65878:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15388,"mutability":"mutable","name":"right","nameLocation":"65900:5:14","nodeType":"VariableDeclaration","scope":15391,"src":"65892:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15387,"name":"uint256","nodeType":"ElementaryTypeName","src":"65892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65877:29:14"},"returnParameters":{"id":15390,"nodeType":"ParameterList","parameters":[],"src":"65920:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15401,"nodeType":"FunctionDefinition","src":"65990:83:14","nodes":[],"documentation":{"id":15392,"nodeType":"StructuredDocumentation","src":"65927:58:14","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65999:8:14","parameters":{"id":15399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15395,"mutability":"mutable","name":"left","nameLocation":"66027:4:14","nodeType":"VariableDeclaration","scope":15401,"src":"66008:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15393,"name":"address","nodeType":"ElementaryTypeName","src":"66008:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15394,"nodeType":"ArrayTypeName","src":"66008:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15398,"mutability":"mutable","name":"right","nameLocation":"66052:5:14","nodeType":"VariableDeclaration","scope":15401,"src":"66033:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15396,"name":"address","nodeType":"ElementaryTypeName","src":"66033:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15397,"nodeType":"ArrayTypeName","src":"66033:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"66007:51:14"},"returnParameters":{"id":15400,"nodeType":"ParameterList","parameters":[],"src":"66072:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15413,"nodeType":"FunctionDefinition","src":"66199:106:14","nodes":[],"documentation":{"id":15402,"nodeType":"StructuredDocumentation","src":"66079:115:14","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66208:8:14","parameters":{"id":15411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15405,"mutability":"mutable","name":"left","nameLocation":"66236:4:14","nodeType":"VariableDeclaration","scope":15413,"src":"66217:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15403,"name":"address","nodeType":"ElementaryTypeName","src":"66217:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15404,"nodeType":"ArrayTypeName","src":"66217:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15408,"mutability":"mutable","name":"right","nameLocation":"66261:5:14","nodeType":"VariableDeclaration","scope":15413,"src":"66242:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15406,"name":"address","nodeType":"ElementaryTypeName","src":"66242:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15407,"nodeType":"ArrayTypeName","src":"66242:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15410,"mutability":"mutable","name":"error","nameLocation":"66284:5:14","nodeType":"VariableDeclaration","scope":15413,"src":"66268:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15409,"name":"string","nodeType":"ElementaryTypeName","src":"66268:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66216:74:14"},"returnParameters":{"id":15412,"nodeType":"ParameterList","parameters":[],"src":"66304:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15423,"nodeType":"FunctionDefinition","src":"66374:83:14","nodes":[],"documentation":{"id":15414,"nodeType":"StructuredDocumentation","src":"66311:58:14","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66383:8:14","parameters":{"id":15421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15417,"mutability":"mutable","name":"left","nameLocation":"66411:4:14","nodeType":"VariableDeclaration","scope":15423,"src":"66392:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66392:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15416,"nodeType":"ArrayTypeName","src":"66392:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15420,"mutability":"mutable","name":"right","nameLocation":"66436:5:14","nodeType":"VariableDeclaration","scope":15423,"src":"66417:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66417:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15419,"nodeType":"ArrayTypeName","src":"66417:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"66391:51:14"},"returnParameters":{"id":15422,"nodeType":"ParameterList","parameters":[],"src":"66456:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15435,"nodeType":"FunctionDefinition","src":"66583:106:14","nodes":[],"documentation":{"id":15424,"nodeType":"StructuredDocumentation","src":"66463:115:14","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66592:8:14","parameters":{"id":15433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15427,"mutability":"mutable","name":"left","nameLocation":"66620:4:14","nodeType":"VariableDeclaration","scope":15435,"src":"66601:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66601:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15426,"nodeType":"ArrayTypeName","src":"66601:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15430,"mutability":"mutable","name":"right","nameLocation":"66645:5:14","nodeType":"VariableDeclaration","scope":15435,"src":"66626:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66626:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15429,"nodeType":"ArrayTypeName","src":"66626:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15432,"mutability":"mutable","name":"error","nameLocation":"66668:5:14","nodeType":"VariableDeclaration","scope":15435,"src":"66652:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15431,"name":"string","nodeType":"ElementaryTypeName","src":"66652:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66600:74:14"},"returnParameters":{"id":15434,"nodeType":"ParameterList","parameters":[],"src":"66688:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15445,"nodeType":"FunctionDefinition","src":"66757:81:14","nodes":[],"documentation":{"id":15436,"nodeType":"StructuredDocumentation","src":"66695:57:14","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66766:8:14","parameters":{"id":15443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15439,"mutability":"mutable","name":"left","nameLocation":"66793:4:14","nodeType":"VariableDeclaration","scope":15445,"src":"66775:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15437,"name":"string","nodeType":"ElementaryTypeName","src":"66775:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15438,"nodeType":"ArrayTypeName","src":"66775:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15442,"mutability":"mutable","name":"right","nameLocation":"66817:5:14","nodeType":"VariableDeclaration","scope":15445,"src":"66799:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15440,"name":"string","nodeType":"ElementaryTypeName","src":"66799:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15441,"nodeType":"ArrayTypeName","src":"66799:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"66774:49:14"},"returnParameters":{"id":15444,"nodeType":"ParameterList","parameters":[],"src":"66837:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15457,"nodeType":"FunctionDefinition","src":"66963:104:14","nodes":[],"documentation":{"id":15446,"nodeType":"StructuredDocumentation","src":"66844:114:14","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66972:8:14","parameters":{"id":15455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15449,"mutability":"mutable","name":"left","nameLocation":"66999:4:14","nodeType":"VariableDeclaration","scope":15457,"src":"66981:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15447,"name":"string","nodeType":"ElementaryTypeName","src":"66981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15448,"nodeType":"ArrayTypeName","src":"66981:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15452,"mutability":"mutable","name":"right","nameLocation":"67023:5:14","nodeType":"VariableDeclaration","scope":15457,"src":"67005:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15450,"name":"string","nodeType":"ElementaryTypeName","src":"67005:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15451,"nodeType":"ArrayTypeName","src":"67005:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15454,"mutability":"mutable","name":"error","nameLocation":"67046:5:14","nodeType":"VariableDeclaration","scope":15457,"src":"67030:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15453,"name":"string","nodeType":"ElementaryTypeName","src":"67030:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66980:72:14"},"returnParameters":{"id":15456,"nodeType":"ParameterList","parameters":[],"src":"67066:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15467,"nodeType":"FunctionDefinition","src":"67134:79:14","nodes":[],"documentation":{"id":15458,"nodeType":"StructuredDocumentation","src":"67073:56:14","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67143:8:14","parameters":{"id":15465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15461,"mutability":"mutable","name":"left","nameLocation":"67169:4:14","nodeType":"VariableDeclaration","scope":15467,"src":"67152:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15459,"name":"bytes","nodeType":"ElementaryTypeName","src":"67152:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15460,"nodeType":"ArrayTypeName","src":"67152:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15464,"mutability":"mutable","name":"right","nameLocation":"67192:5:14","nodeType":"VariableDeclaration","scope":15467,"src":"67175:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15462,"name":"bytes","nodeType":"ElementaryTypeName","src":"67175:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15463,"nodeType":"ArrayTypeName","src":"67175:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"67151:47:14"},"returnParameters":{"id":15466,"nodeType":"ParameterList","parameters":[],"src":"67212:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15479,"nodeType":"FunctionDefinition","src":"67337:102:14","nodes":[],"documentation":{"id":15468,"nodeType":"StructuredDocumentation","src":"67219:113:14","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67346:8:14","parameters":{"id":15477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15471,"mutability":"mutable","name":"left","nameLocation":"67372:4:14","nodeType":"VariableDeclaration","scope":15479,"src":"67355:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15469,"name":"bytes","nodeType":"ElementaryTypeName","src":"67355:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15470,"nodeType":"ArrayTypeName","src":"67355:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15474,"mutability":"mutable","name":"right","nameLocation":"67395:5:14","nodeType":"VariableDeclaration","scope":15479,"src":"67378:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15472,"name":"bytes","nodeType":"ElementaryTypeName","src":"67378:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15473,"nodeType":"ArrayTypeName","src":"67378:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15476,"mutability":"mutable","name":"error","nameLocation":"67418:5:14","nodeType":"VariableDeclaration","scope":15479,"src":"67402:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15475,"name":"string","nodeType":"ElementaryTypeName","src":"67402:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67354:70:14"},"returnParameters":{"id":15478,"nodeType":"ParameterList","parameters":[],"src":"67438:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15489,"nodeType":"FunctionDefinition","src":"67555:84:14","nodes":[],"documentation":{"id":15480,"nodeType":"StructuredDocumentation","src":"67445:105:14","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67564:8:14","parameters":{"id":15487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15482,"mutability":"mutable","name":"left","nameLocation":"67581:4:14","nodeType":"VariableDeclaration","scope":15489,"src":"67573:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15481,"name":"uint256","nodeType":"ElementaryTypeName","src":"67573:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15484,"mutability":"mutable","name":"right","nameLocation":"67595:5:14","nodeType":"VariableDeclaration","scope":15489,"src":"67587:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15483,"name":"uint256","nodeType":"ElementaryTypeName","src":"67587:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15486,"mutability":"mutable","name":"error","nameLocation":"67618:5:14","nodeType":"VariableDeclaration","scope":15489,"src":"67602:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15485,"name":"string","nodeType":"ElementaryTypeName","src":"67602:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67572:52:14"},"returnParameters":{"id":15488,"nodeType":"ParameterList","parameters":[],"src":"67638:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15497,"nodeType":"FunctionDefinition","src":"67697:59:14","nodes":[],"documentation":{"id":15490,"nodeType":"StructuredDocumentation","src":"67645:47:14","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67706:8:14","parameters":{"id":15495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15492,"mutability":"mutable","name":"left","nameLocation":"67722:4:14","nodeType":"VariableDeclaration","scope":15497,"src":"67715:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15491,"name":"int256","nodeType":"ElementaryTypeName","src":"67715:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15494,"mutability":"mutable","name":"right","nameLocation":"67735:5:14","nodeType":"VariableDeclaration","scope":15497,"src":"67728:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15493,"name":"int256","nodeType":"ElementaryTypeName","src":"67728:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67714:27:14"},"returnParameters":{"id":15496,"nodeType":"ParameterList","parameters":[],"src":"67755:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15507,"nodeType":"FunctionDefinition","src":"67871:82:14","nodes":[],"documentation":{"id":15498,"nodeType":"StructuredDocumentation","src":"67762:104:14","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67880:8:14","parameters":{"id":15505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15500,"mutability":"mutable","name":"left","nameLocation":"67896:4:14","nodeType":"VariableDeclaration","scope":15507,"src":"67889:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15499,"name":"int256","nodeType":"ElementaryTypeName","src":"67889:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15502,"mutability":"mutable","name":"right","nameLocation":"67909:5:14","nodeType":"VariableDeclaration","scope":15507,"src":"67902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15501,"name":"int256","nodeType":"ElementaryTypeName","src":"67902:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15504,"mutability":"mutable","name":"error","nameLocation":"67932:5:14","nodeType":"VariableDeclaration","scope":15507,"src":"67916:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15503,"name":"string","nodeType":"ElementaryTypeName","src":"67916:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67888:50:14"},"returnParameters":{"id":15506,"nodeType":"ParameterList","parameters":[],"src":"67952:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15515,"nodeType":"FunctionDefinition","src":"68012:61:14","nodes":[],"documentation":{"id":15508,"nodeType":"StructuredDocumentation","src":"67959:48:14","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68021:8:14","parameters":{"id":15513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15510,"mutability":"mutable","name":"left","nameLocation":"68038:4:14","nodeType":"VariableDeclaration","scope":15515,"src":"68030:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15509,"name":"address","nodeType":"ElementaryTypeName","src":"68030:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15512,"mutability":"mutable","name":"right","nameLocation":"68052:5:14","nodeType":"VariableDeclaration","scope":15515,"src":"68044:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15511,"name":"address","nodeType":"ElementaryTypeName","src":"68044:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68029:29:14"},"returnParameters":{"id":15514,"nodeType":"ParameterList","parameters":[],"src":"68072:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15525,"nodeType":"FunctionDefinition","src":"68189:84:14","nodes":[],"documentation":{"id":15516,"nodeType":"StructuredDocumentation","src":"68079:105:14","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68198:8:14","parameters":{"id":15523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15518,"mutability":"mutable","name":"left","nameLocation":"68215:4:14","nodeType":"VariableDeclaration","scope":15525,"src":"68207:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15517,"name":"address","nodeType":"ElementaryTypeName","src":"68207:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15520,"mutability":"mutable","name":"right","nameLocation":"68229:5:14","nodeType":"VariableDeclaration","scope":15525,"src":"68221:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15519,"name":"address","nodeType":"ElementaryTypeName","src":"68221:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15522,"mutability":"mutable","name":"error","nameLocation":"68252:5:14","nodeType":"VariableDeclaration","scope":15525,"src":"68236:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15521,"name":"string","nodeType":"ElementaryTypeName","src":"68236:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68206:52:14"},"returnParameters":{"id":15524,"nodeType":"ParameterList","parameters":[],"src":"68272:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15533,"nodeType":"FunctionDefinition","src":"68332:61:14","nodes":[],"documentation":{"id":15526,"nodeType":"StructuredDocumentation","src":"68279:48:14","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68341:8:14","parameters":{"id":15531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15528,"mutability":"mutable","name":"left","nameLocation":"68358:4:14","nodeType":"VariableDeclaration","scope":15533,"src":"68350:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68350:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15530,"mutability":"mutable","name":"right","nameLocation":"68372:5:14","nodeType":"VariableDeclaration","scope":15533,"src":"68364:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68364:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"68349:29:14"},"returnParameters":{"id":15532,"nodeType":"ParameterList","parameters":[],"src":"68392:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15543,"nodeType":"FunctionDefinition","src":"68509:84:14","nodes":[],"documentation":{"id":15534,"nodeType":"StructuredDocumentation","src":"68399:105:14","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68518:8:14","parameters":{"id":15541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15536,"mutability":"mutable","name":"left","nameLocation":"68535:4:14","nodeType":"VariableDeclaration","scope":15543,"src":"68527:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68527:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15538,"mutability":"mutable","name":"right","nameLocation":"68549:5:14","nodeType":"VariableDeclaration","scope":15543,"src":"68541:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68541:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15540,"mutability":"mutable","name":"error","nameLocation":"68572:5:14","nodeType":"VariableDeclaration","scope":15543,"src":"68556:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15539,"name":"string","nodeType":"ElementaryTypeName","src":"68556:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68526:52:14"},"returnParameters":{"id":15542,"nodeType":"ParameterList","parameters":[],"src":"68592:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15549,"nodeType":"FunctionDefinition","src":"68650:51:14","nodes":[],"documentation":{"id":15544,"nodeType":"StructuredDocumentation","src":"68599:46:14","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"68659:11:14","parameters":{"id":15547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15546,"mutability":"mutable","name":"condition","nameLocation":"68676:9:14","nodeType":"VariableDeclaration","scope":15549,"src":"68671:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15545,"name":"bool","nodeType":"ElementaryTypeName","src":"68671:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68670:16:14"},"returnParameters":{"id":15548,"nodeType":"ParameterList","parameters":[],"src":"68700:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15557,"nodeType":"FunctionDefinition","src":"68815:74:14","nodes":[],"documentation":{"id":15550,"nodeType":"StructuredDocumentation","src":"68707:103:14","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"68824:11:14","parameters":{"id":15555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15552,"mutability":"mutable","name":"condition","nameLocation":"68841:9:14","nodeType":"VariableDeclaration","scope":15557,"src":"68836:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15551,"name":"bool","nodeType":"ElementaryTypeName","src":"68836:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15554,"mutability":"mutable","name":"error","nameLocation":"68868:5:14","nodeType":"VariableDeclaration","scope":15557,"src":"68852:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15553,"name":"string","nodeType":"ElementaryTypeName","src":"68852:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68835:39:14"},"returnParameters":{"id":15556,"nodeType":"ParameterList","parameters":[],"src":"68888:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15567,"nodeType":"FunctionDefinition","src":"69050:86:14","nodes":[],"documentation":{"id":15558,"nodeType":"StructuredDocumentation","src":"68895:150:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69059:15:14","parameters":{"id":15565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15560,"mutability":"mutable","name":"left","nameLocation":"69083:4:14","nodeType":"VariableDeclaration","scope":15567,"src":"69075:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15559,"name":"uint256","nodeType":"ElementaryTypeName","src":"69075:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15562,"mutability":"mutable","name":"right","nameLocation":"69097:5:14","nodeType":"VariableDeclaration","scope":15567,"src":"69089:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15561,"name":"uint256","nodeType":"ElementaryTypeName","src":"69089:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15564,"mutability":"mutable","name":"decimals","nameLocation":"69112:8:14","nodeType":"VariableDeclaration","scope":15567,"src":"69104:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15563,"name":"uint256","nodeType":"ElementaryTypeName","src":"69104:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69074:47:14"},"returnParameters":{"id":15566,"nodeType":"ParameterList","parameters":[],"src":"69135:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15579,"nodeType":"FunctionDefinition","src":"69351:109:14","nodes":[],"documentation":{"id":15568,"nodeType":"StructuredDocumentation","src":"69142:204:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69360:15:14","parameters":{"id":15577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15570,"mutability":"mutable","name":"left","nameLocation":"69384:4:14","nodeType":"VariableDeclaration","scope":15579,"src":"69376:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15569,"name":"uint256","nodeType":"ElementaryTypeName","src":"69376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15572,"mutability":"mutable","name":"right","nameLocation":"69398:5:14","nodeType":"VariableDeclaration","scope":15579,"src":"69390:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15571,"name":"uint256","nodeType":"ElementaryTypeName","src":"69390:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15574,"mutability":"mutable","name":"decimals","nameLocation":"69413:8:14","nodeType":"VariableDeclaration","scope":15579,"src":"69405:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15573,"name":"uint256","nodeType":"ElementaryTypeName","src":"69405:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15576,"mutability":"mutable","name":"error","nameLocation":"69439:5:14","nodeType":"VariableDeclaration","scope":15579,"src":"69423:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15575,"name":"string","nodeType":"ElementaryTypeName","src":"69423:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69375:70:14"},"returnParameters":{"id":15578,"nodeType":"ParameterList","parameters":[],"src":"69459:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15589,"nodeType":"FunctionDefinition","src":"69620:84:14","nodes":[],"documentation":{"id":15580,"nodeType":"StructuredDocumentation","src":"69466:149:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69629:15:14","parameters":{"id":15587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15582,"mutability":"mutable","name":"left","nameLocation":"69652:4:14","nodeType":"VariableDeclaration","scope":15589,"src":"69645:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15581,"name":"int256","nodeType":"ElementaryTypeName","src":"69645:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15584,"mutability":"mutable","name":"right","nameLocation":"69665:5:14","nodeType":"VariableDeclaration","scope":15589,"src":"69658:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15583,"name":"int256","nodeType":"ElementaryTypeName","src":"69658:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15586,"mutability":"mutable","name":"decimals","nameLocation":"69680:8:14","nodeType":"VariableDeclaration","scope":15589,"src":"69672:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15585,"name":"uint256","nodeType":"ElementaryTypeName","src":"69672:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69644:45:14"},"returnParameters":{"id":15588,"nodeType":"ParameterList","parameters":[],"src":"69703:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15601,"nodeType":"FunctionDefinition","src":"69918:107:14","nodes":[],"documentation":{"id":15590,"nodeType":"StructuredDocumentation","src":"69710:203:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69927:15:14","parameters":{"id":15599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15592,"mutability":"mutable","name":"left","nameLocation":"69950:4:14","nodeType":"VariableDeclaration","scope":15601,"src":"69943:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15591,"name":"int256","nodeType":"ElementaryTypeName","src":"69943:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15594,"mutability":"mutable","name":"right","nameLocation":"69963:5:14","nodeType":"VariableDeclaration","scope":15601,"src":"69956:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15593,"name":"int256","nodeType":"ElementaryTypeName","src":"69956:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15596,"mutability":"mutable","name":"decimals","nameLocation":"69978:8:14","nodeType":"VariableDeclaration","scope":15601,"src":"69970:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15595,"name":"uint256","nodeType":"ElementaryTypeName","src":"69970:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15598,"mutability":"mutable","name":"error","nameLocation":"70004:5:14","nodeType":"VariableDeclaration","scope":15601,"src":"69988:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15597,"name":"string","nodeType":"ElementaryTypeName","src":"69988:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69942:68:14"},"returnParameters":{"id":15600,"nodeType":"ParameterList","parameters":[],"src":"70024:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15609,"nodeType":"FunctionDefinition","src":"70129:61:14","nodes":[],"documentation":{"id":15602,"nodeType":"StructuredDocumentation","src":"70031:93:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70138:8:14","parameters":{"id":15607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15604,"mutability":"mutable","name":"left","nameLocation":"70155:4:14","nodeType":"VariableDeclaration","scope":15609,"src":"70147:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15603,"name":"uint256","nodeType":"ElementaryTypeName","src":"70147:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15606,"mutability":"mutable","name":"right","nameLocation":"70169:5:14","nodeType":"VariableDeclaration","scope":15609,"src":"70161:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15605,"name":"uint256","nodeType":"ElementaryTypeName","src":"70161:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70146:29:14"},"returnParameters":{"id":15608,"nodeType":"ParameterList","parameters":[],"src":"70189:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15619,"nodeType":"FunctionDefinition","src":"70356:84:14","nodes":[],"documentation":{"id":15610,"nodeType":"StructuredDocumentation","src":"70196:155:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70365:8:14","parameters":{"id":15617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15612,"mutability":"mutable","name":"left","nameLocation":"70382:4:14","nodeType":"VariableDeclaration","scope":15619,"src":"70374:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15611,"name":"uint256","nodeType":"ElementaryTypeName","src":"70374:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15614,"mutability":"mutable","name":"right","nameLocation":"70396:5:14","nodeType":"VariableDeclaration","scope":15619,"src":"70388:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15613,"name":"uint256","nodeType":"ElementaryTypeName","src":"70388:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15616,"mutability":"mutable","name":"error","nameLocation":"70419:5:14","nodeType":"VariableDeclaration","scope":15619,"src":"70403:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15615,"name":"string","nodeType":"ElementaryTypeName","src":"70403:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70373:52:14"},"returnParameters":{"id":15618,"nodeType":"ParameterList","parameters":[],"src":"70439:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15627,"nodeType":"FunctionDefinition","src":"70543:59:14","nodes":[],"documentation":{"id":15620,"nodeType":"StructuredDocumentation","src":"70446:92:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70552:8:14","parameters":{"id":15625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15622,"mutability":"mutable","name":"left","nameLocation":"70568:4:14","nodeType":"VariableDeclaration","scope":15627,"src":"70561:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15621,"name":"int256","nodeType":"ElementaryTypeName","src":"70561:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15624,"mutability":"mutable","name":"right","nameLocation":"70581:5:14","nodeType":"VariableDeclaration","scope":15627,"src":"70574:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15623,"name":"int256","nodeType":"ElementaryTypeName","src":"70574:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70560:27:14"},"returnParameters":{"id":15626,"nodeType":"ParameterList","parameters":[],"src":"70601:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15637,"nodeType":"FunctionDefinition","src":"70767:82:14","nodes":[],"documentation":{"id":15628,"nodeType":"StructuredDocumentation","src":"70608:154:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70776:8:14","parameters":{"id":15635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15630,"mutability":"mutable","name":"left","nameLocation":"70792:4:14","nodeType":"VariableDeclaration","scope":15637,"src":"70785:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15629,"name":"int256","nodeType":"ElementaryTypeName","src":"70785:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15632,"mutability":"mutable","name":"right","nameLocation":"70805:5:14","nodeType":"VariableDeclaration","scope":15637,"src":"70798:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15631,"name":"int256","nodeType":"ElementaryTypeName","src":"70798:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15634,"mutability":"mutable","name":"error","nameLocation":"70828:5:14","nodeType":"VariableDeclaration","scope":15637,"src":"70812:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15633,"name":"string","nodeType":"ElementaryTypeName","src":"70812:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70784:50:14"},"returnParameters":{"id":15636,"nodeType":"ParameterList","parameters":[],"src":"70848:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15647,"nodeType":"FunctionDefinition","src":"70998:86:14","nodes":[],"documentation":{"id":15638,"nodeType":"StructuredDocumentation","src":"70855:138:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71007:15:14","parameters":{"id":15645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15640,"mutability":"mutable","name":"left","nameLocation":"71031:4:14","nodeType":"VariableDeclaration","scope":15647,"src":"71023:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15639,"name":"uint256","nodeType":"ElementaryTypeName","src":"71023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15642,"mutability":"mutable","name":"right","nameLocation":"71045:5:14","nodeType":"VariableDeclaration","scope":15647,"src":"71037:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15641,"name":"uint256","nodeType":"ElementaryTypeName","src":"71037:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15644,"mutability":"mutable","name":"decimals","nameLocation":"71060:8:14","nodeType":"VariableDeclaration","scope":15647,"src":"71052:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15643,"name":"uint256","nodeType":"ElementaryTypeName","src":"71052:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71022:47:14"},"returnParameters":{"id":15646,"nodeType":"ParameterList","parameters":[],"src":"71083:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15659,"nodeType":"FunctionDefinition","src":"71287:109:14","nodes":[],"documentation":{"id":15648,"nodeType":"StructuredDocumentation","src":"71090:192:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71296:15:14","parameters":{"id":15657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15650,"mutability":"mutable","name":"left","nameLocation":"71320:4:14","nodeType":"VariableDeclaration","scope":15659,"src":"71312:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15649,"name":"uint256","nodeType":"ElementaryTypeName","src":"71312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15652,"mutability":"mutable","name":"right","nameLocation":"71334:5:14","nodeType":"VariableDeclaration","scope":15659,"src":"71326:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15651,"name":"uint256","nodeType":"ElementaryTypeName","src":"71326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15654,"mutability":"mutable","name":"decimals","nameLocation":"71349:8:14","nodeType":"VariableDeclaration","scope":15659,"src":"71341:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15653,"name":"uint256","nodeType":"ElementaryTypeName","src":"71341:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15656,"mutability":"mutable","name":"error","nameLocation":"71375:5:14","nodeType":"VariableDeclaration","scope":15659,"src":"71359:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15655,"name":"string","nodeType":"ElementaryTypeName","src":"71359:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71311:70:14"},"returnParameters":{"id":15658,"nodeType":"ParameterList","parameters":[],"src":"71395:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15669,"nodeType":"FunctionDefinition","src":"71544:84:14","nodes":[],"documentation":{"id":15660,"nodeType":"StructuredDocumentation","src":"71402:137:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71553:15:14","parameters":{"id":15667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15662,"mutability":"mutable","name":"left","nameLocation":"71576:4:14","nodeType":"VariableDeclaration","scope":15669,"src":"71569:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15661,"name":"int256","nodeType":"ElementaryTypeName","src":"71569:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15664,"mutability":"mutable","name":"right","nameLocation":"71589:5:14","nodeType":"VariableDeclaration","scope":15669,"src":"71582:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15663,"name":"int256","nodeType":"ElementaryTypeName","src":"71582:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15666,"mutability":"mutable","name":"decimals","nameLocation":"71604:8:14","nodeType":"VariableDeclaration","scope":15669,"src":"71596:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15665,"name":"uint256","nodeType":"ElementaryTypeName","src":"71596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71568:45:14"},"returnParameters":{"id":15668,"nodeType":"ParameterList","parameters":[],"src":"71627:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15681,"nodeType":"FunctionDefinition","src":"71830:107:14","nodes":[],"documentation":{"id":15670,"nodeType":"StructuredDocumentation","src":"71634:191:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71839:15:14","parameters":{"id":15679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15672,"mutability":"mutable","name":"left","nameLocation":"71862:4:14","nodeType":"VariableDeclaration","scope":15681,"src":"71855:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15671,"name":"int256","nodeType":"ElementaryTypeName","src":"71855:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15674,"mutability":"mutable","name":"right","nameLocation":"71875:5:14","nodeType":"VariableDeclaration","scope":15681,"src":"71868:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15673,"name":"int256","nodeType":"ElementaryTypeName","src":"71868:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15676,"mutability":"mutable","name":"decimals","nameLocation":"71890:8:14","nodeType":"VariableDeclaration","scope":15681,"src":"71882:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15675,"name":"uint256","nodeType":"ElementaryTypeName","src":"71882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15678,"mutability":"mutable","name":"error","nameLocation":"71916:5:14","nodeType":"VariableDeclaration","scope":15681,"src":"71900:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15677,"name":"string","nodeType":"ElementaryTypeName","src":"71900:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71854:68:14"},"returnParameters":{"id":15680,"nodeType":"ParameterList","parameters":[],"src":"71936:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15689,"nodeType":"FunctionDefinition","src":"72029:61:14","nodes":[],"documentation":{"id":15682,"nodeType":"StructuredDocumentation","src":"71943:81:14","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72038:8:14","parameters":{"id":15687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15684,"mutability":"mutable","name":"left","nameLocation":"72055:4:14","nodeType":"VariableDeclaration","scope":15689,"src":"72047:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15683,"name":"uint256","nodeType":"ElementaryTypeName","src":"72047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15686,"mutability":"mutable","name":"right","nameLocation":"72069:5:14","nodeType":"VariableDeclaration","scope":15689,"src":"72061:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15685,"name":"uint256","nodeType":"ElementaryTypeName","src":"72061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72046:29:14"},"returnParameters":{"id":15688,"nodeType":"ParameterList","parameters":[],"src":"72089:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15699,"nodeType":"FunctionDefinition","src":"72244:84:14","nodes":[],"documentation":{"id":15690,"nodeType":"StructuredDocumentation","src":"72096:143:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72253:8:14","parameters":{"id":15697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15692,"mutability":"mutable","name":"left","nameLocation":"72270:4:14","nodeType":"VariableDeclaration","scope":15699,"src":"72262:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15691,"name":"uint256","nodeType":"ElementaryTypeName","src":"72262:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15694,"mutability":"mutable","name":"right","nameLocation":"72284:5:14","nodeType":"VariableDeclaration","scope":15699,"src":"72276:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15693,"name":"uint256","nodeType":"ElementaryTypeName","src":"72276:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15696,"mutability":"mutable","name":"error","nameLocation":"72307:5:14","nodeType":"VariableDeclaration","scope":15699,"src":"72291:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15695,"name":"string","nodeType":"ElementaryTypeName","src":"72291:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72261:52:14"},"returnParameters":{"id":15698,"nodeType":"ParameterList","parameters":[],"src":"72327:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15707,"nodeType":"FunctionDefinition","src":"72419:59:14","nodes":[],"documentation":{"id":15700,"nodeType":"StructuredDocumentation","src":"72334:80:14","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72428:8:14","parameters":{"id":15705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15702,"mutability":"mutable","name":"left","nameLocation":"72444:4:14","nodeType":"VariableDeclaration","scope":15707,"src":"72437:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15701,"name":"int256","nodeType":"ElementaryTypeName","src":"72437:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15704,"mutability":"mutable","name":"right","nameLocation":"72457:5:14","nodeType":"VariableDeclaration","scope":15707,"src":"72450:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15703,"name":"int256","nodeType":"ElementaryTypeName","src":"72450:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"72436:27:14"},"returnParameters":{"id":15706,"nodeType":"ParameterList","parameters":[],"src":"72477:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15717,"nodeType":"FunctionDefinition","src":"72631:82:14","nodes":[],"documentation":{"id":15708,"nodeType":"StructuredDocumentation","src":"72484:142:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72640:8:14","parameters":{"id":15715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15710,"mutability":"mutable","name":"left","nameLocation":"72656:4:14","nodeType":"VariableDeclaration","scope":15717,"src":"72649:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15709,"name":"int256","nodeType":"ElementaryTypeName","src":"72649:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15712,"mutability":"mutable","name":"right","nameLocation":"72669:5:14","nodeType":"VariableDeclaration","scope":15717,"src":"72662:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15711,"name":"int256","nodeType":"ElementaryTypeName","src":"72662:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15714,"mutability":"mutable","name":"error","nameLocation":"72692:5:14","nodeType":"VariableDeclaration","scope":15717,"src":"72676:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15713,"name":"string","nodeType":"ElementaryTypeName","src":"72676:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72648:50:14"},"returnParameters":{"id":15716,"nodeType":"ParameterList","parameters":[],"src":"72712:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15727,"nodeType":"FunctionDefinition","src":"72871:86:14","nodes":[],"documentation":{"id":15718,"nodeType":"StructuredDocumentation","src":"72719:147:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"72880:15:14","parameters":{"id":15725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15720,"mutability":"mutable","name":"left","nameLocation":"72904:4:14","nodeType":"VariableDeclaration","scope":15727,"src":"72896:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15719,"name":"uint256","nodeType":"ElementaryTypeName","src":"72896:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15722,"mutability":"mutable","name":"right","nameLocation":"72918:5:14","nodeType":"VariableDeclaration","scope":15727,"src":"72910:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15721,"name":"uint256","nodeType":"ElementaryTypeName","src":"72910:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15724,"mutability":"mutable","name":"decimals","nameLocation":"72933:8:14","nodeType":"VariableDeclaration","scope":15727,"src":"72925:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15723,"name":"uint256","nodeType":"ElementaryTypeName","src":"72925:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72895:47:14"},"returnParameters":{"id":15726,"nodeType":"ParameterList","parameters":[],"src":"72956:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15739,"nodeType":"FunctionDefinition","src":"73169:109:14","nodes":[],"documentation":{"id":15728,"nodeType":"StructuredDocumentation","src":"72963:201:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"73178:15:14","parameters":{"id":15737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15730,"mutability":"mutable","name":"left","nameLocation":"73202:4:14","nodeType":"VariableDeclaration","scope":15739,"src":"73194:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15729,"name":"uint256","nodeType":"ElementaryTypeName","src":"73194:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15732,"mutability":"mutable","name":"right","nameLocation":"73216:5:14","nodeType":"VariableDeclaration","scope":15739,"src":"73208:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15731,"name":"uint256","nodeType":"ElementaryTypeName","src":"73208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15734,"mutability":"mutable","name":"decimals","nameLocation":"73231:8:14","nodeType":"VariableDeclaration","scope":15739,"src":"73223:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15733,"name":"uint256","nodeType":"ElementaryTypeName","src":"73223:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15736,"mutability":"mutable","name":"error","nameLocation":"73257:5:14","nodeType":"VariableDeclaration","scope":15739,"src":"73241:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15735,"name":"string","nodeType":"ElementaryTypeName","src":"73241:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73193:70:14"},"returnParameters":{"id":15738,"nodeType":"ParameterList","parameters":[],"src":"73277:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15749,"nodeType":"FunctionDefinition","src":"73435:84:14","nodes":[],"documentation":{"id":15740,"nodeType":"StructuredDocumentation","src":"73284:146:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"73444:15:14","parameters":{"id":15747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15742,"mutability":"mutable","name":"left","nameLocation":"73467:4:14","nodeType":"VariableDeclaration","scope":15749,"src":"73460:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15741,"name":"int256","nodeType":"ElementaryTypeName","src":"73460:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15744,"mutability":"mutable","name":"right","nameLocation":"73480:5:14","nodeType":"VariableDeclaration","scope":15749,"src":"73473:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15743,"name":"int256","nodeType":"ElementaryTypeName","src":"73473:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15746,"mutability":"mutable","name":"decimals","nameLocation":"73495:8:14","nodeType":"VariableDeclaration","scope":15749,"src":"73487:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15745,"name":"uint256","nodeType":"ElementaryTypeName","src":"73487:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73459:45:14"},"returnParameters":{"id":15748,"nodeType":"ParameterList","parameters":[],"src":"73518:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15761,"nodeType":"FunctionDefinition","src":"73730:107:14","nodes":[],"documentation":{"id":15750,"nodeType":"StructuredDocumentation","src":"73525:200:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"73739:15:14","parameters":{"id":15759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15752,"mutability":"mutable","name":"left","nameLocation":"73762:4:14","nodeType":"VariableDeclaration","scope":15761,"src":"73755:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15751,"name":"int256","nodeType":"ElementaryTypeName","src":"73755:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15754,"mutability":"mutable","name":"right","nameLocation":"73775:5:14","nodeType":"VariableDeclaration","scope":15761,"src":"73768:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15753,"name":"int256","nodeType":"ElementaryTypeName","src":"73768:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15756,"mutability":"mutable","name":"decimals","nameLocation":"73790:8:14","nodeType":"VariableDeclaration","scope":15761,"src":"73782:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15755,"name":"uint256","nodeType":"ElementaryTypeName","src":"73782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15758,"mutability":"mutable","name":"error","nameLocation":"73816:5:14","nodeType":"VariableDeclaration","scope":15761,"src":"73800:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15757,"name":"string","nodeType":"ElementaryTypeName","src":"73800:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73754:68:14"},"returnParameters":{"id":15760,"nodeType":"ParameterList","parameters":[],"src":"73836:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15769,"nodeType":"FunctionDefinition","src":"73938:61:14","nodes":[],"documentation":{"id":15762,"nodeType":"StructuredDocumentation","src":"73843:90:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"73947:8:14","parameters":{"id":15767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15764,"mutability":"mutable","name":"left","nameLocation":"73964:4:14","nodeType":"VariableDeclaration","scope":15769,"src":"73956:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15763,"name":"uint256","nodeType":"ElementaryTypeName","src":"73956:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15766,"mutability":"mutable","name":"right","nameLocation":"73978:5:14","nodeType":"VariableDeclaration","scope":15769,"src":"73970:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15765,"name":"uint256","nodeType":"ElementaryTypeName","src":"73970:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73955:29:14"},"returnParameters":{"id":15768,"nodeType":"ParameterList","parameters":[],"src":"73998:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15779,"nodeType":"FunctionDefinition","src":"74162:84:14","nodes":[],"documentation":{"id":15770,"nodeType":"StructuredDocumentation","src":"74005:152:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"74171:8:14","parameters":{"id":15777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15772,"mutability":"mutable","name":"left","nameLocation":"74188:4:14","nodeType":"VariableDeclaration","scope":15779,"src":"74180:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15771,"name":"uint256","nodeType":"ElementaryTypeName","src":"74180:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15774,"mutability":"mutable","name":"right","nameLocation":"74202:5:14","nodeType":"VariableDeclaration","scope":15779,"src":"74194:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15773,"name":"uint256","nodeType":"ElementaryTypeName","src":"74194:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15776,"mutability":"mutable","name":"error","nameLocation":"74225:5:14","nodeType":"VariableDeclaration","scope":15779,"src":"74209:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15775,"name":"string","nodeType":"ElementaryTypeName","src":"74209:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74179:52:14"},"returnParameters":{"id":15778,"nodeType":"ParameterList","parameters":[],"src":"74245:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15787,"nodeType":"FunctionDefinition","src":"74346:59:14","nodes":[],"documentation":{"id":15780,"nodeType":"StructuredDocumentation","src":"74252:89:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"74355:8:14","parameters":{"id":15785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15782,"mutability":"mutable","name":"left","nameLocation":"74371:4:14","nodeType":"VariableDeclaration","scope":15787,"src":"74364:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15781,"name":"int256","nodeType":"ElementaryTypeName","src":"74364:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15784,"mutability":"mutable","name":"right","nameLocation":"74384:5:14","nodeType":"VariableDeclaration","scope":15787,"src":"74377:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15783,"name":"int256","nodeType":"ElementaryTypeName","src":"74377:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"74363:27:14"},"returnParameters":{"id":15786,"nodeType":"ParameterList","parameters":[],"src":"74404:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15797,"nodeType":"FunctionDefinition","src":"74567:82:14","nodes":[],"documentation":{"id":15788,"nodeType":"StructuredDocumentation","src":"74411:151:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"74576:8:14","parameters":{"id":15795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15790,"mutability":"mutable","name":"left","nameLocation":"74592:4:14","nodeType":"VariableDeclaration","scope":15797,"src":"74585:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15789,"name":"int256","nodeType":"ElementaryTypeName","src":"74585:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15792,"mutability":"mutable","name":"right","nameLocation":"74605:5:14","nodeType":"VariableDeclaration","scope":15797,"src":"74598:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15791,"name":"int256","nodeType":"ElementaryTypeName","src":"74598:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15794,"mutability":"mutable","name":"error","nameLocation":"74628:5:14","nodeType":"VariableDeclaration","scope":15797,"src":"74612:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15793,"name":"string","nodeType":"ElementaryTypeName","src":"74612:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74584:50:14"},"returnParameters":{"id":15796,"nodeType":"ParameterList","parameters":[],"src":"74648:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15807,"nodeType":"FunctionDefinition","src":"74795:86:14","nodes":[],"documentation":{"id":15798,"nodeType":"StructuredDocumentation","src":"74655:135:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"74804:15:14","parameters":{"id":15805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15800,"mutability":"mutable","name":"left","nameLocation":"74828:4:14","nodeType":"VariableDeclaration","scope":15807,"src":"74820:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15799,"name":"uint256","nodeType":"ElementaryTypeName","src":"74820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15802,"mutability":"mutable","name":"right","nameLocation":"74842:5:14","nodeType":"VariableDeclaration","scope":15807,"src":"74834:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15801,"name":"uint256","nodeType":"ElementaryTypeName","src":"74834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15804,"mutability":"mutable","name":"decimals","nameLocation":"74857:8:14","nodeType":"VariableDeclaration","scope":15807,"src":"74849:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15803,"name":"uint256","nodeType":"ElementaryTypeName","src":"74849:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74819:47:14"},"returnParameters":{"id":15806,"nodeType":"ParameterList","parameters":[],"src":"74880:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15819,"nodeType":"FunctionDefinition","src":"75081:109:14","nodes":[],"documentation":{"id":15808,"nodeType":"StructuredDocumentation","src":"74887:189:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"75090:15:14","parameters":{"id":15817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15810,"mutability":"mutable","name":"left","nameLocation":"75114:4:14","nodeType":"VariableDeclaration","scope":15819,"src":"75106:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15809,"name":"uint256","nodeType":"ElementaryTypeName","src":"75106:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15812,"mutability":"mutable","name":"right","nameLocation":"75128:5:14","nodeType":"VariableDeclaration","scope":15819,"src":"75120:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15811,"name":"uint256","nodeType":"ElementaryTypeName","src":"75120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15814,"mutability":"mutable","name":"decimals","nameLocation":"75143:8:14","nodeType":"VariableDeclaration","scope":15819,"src":"75135:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15813,"name":"uint256","nodeType":"ElementaryTypeName","src":"75135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15816,"mutability":"mutable","name":"error","nameLocation":"75169:5:14","nodeType":"VariableDeclaration","scope":15819,"src":"75153:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15815,"name":"string","nodeType":"ElementaryTypeName","src":"75153:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75105:70:14"},"returnParameters":{"id":15818,"nodeType":"ParameterList","parameters":[],"src":"75189:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15829,"nodeType":"FunctionDefinition","src":"75335:84:14","nodes":[],"documentation":{"id":15820,"nodeType":"StructuredDocumentation","src":"75196:134:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"75344:15:14","parameters":{"id":15827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15822,"mutability":"mutable","name":"left","nameLocation":"75367:4:14","nodeType":"VariableDeclaration","scope":15829,"src":"75360:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15821,"name":"int256","nodeType":"ElementaryTypeName","src":"75360:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15824,"mutability":"mutable","name":"right","nameLocation":"75380:5:14","nodeType":"VariableDeclaration","scope":15829,"src":"75373:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15823,"name":"int256","nodeType":"ElementaryTypeName","src":"75373:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15826,"mutability":"mutable","name":"decimals","nameLocation":"75395:8:14","nodeType":"VariableDeclaration","scope":15829,"src":"75387:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15825,"name":"uint256","nodeType":"ElementaryTypeName","src":"75387:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75359:45:14"},"returnParameters":{"id":15828,"nodeType":"ParameterList","parameters":[],"src":"75418:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15841,"nodeType":"FunctionDefinition","src":"75618:107:14","nodes":[],"documentation":{"id":15830,"nodeType":"StructuredDocumentation","src":"75425:188:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"75627:15:14","parameters":{"id":15839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15832,"mutability":"mutable","name":"left","nameLocation":"75650:4:14","nodeType":"VariableDeclaration","scope":15841,"src":"75643:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15831,"name":"int256","nodeType":"ElementaryTypeName","src":"75643:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15834,"mutability":"mutable","name":"right","nameLocation":"75663:5:14","nodeType":"VariableDeclaration","scope":15841,"src":"75656:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15833,"name":"int256","nodeType":"ElementaryTypeName","src":"75656:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15836,"mutability":"mutable","name":"decimals","nameLocation":"75678:8:14","nodeType":"VariableDeclaration","scope":15841,"src":"75670:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15835,"name":"uint256","nodeType":"ElementaryTypeName","src":"75670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15838,"mutability":"mutable","name":"error","nameLocation":"75704:5:14","nodeType":"VariableDeclaration","scope":15841,"src":"75688:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15837,"name":"string","nodeType":"ElementaryTypeName","src":"75688:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75642:68:14"},"returnParameters":{"id":15840,"nodeType":"ParameterList","parameters":[],"src":"75724:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15849,"nodeType":"FunctionDefinition","src":"75814:61:14","nodes":[],"documentation":{"id":15842,"nodeType":"StructuredDocumentation","src":"75731:78:14","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"75823:8:14","parameters":{"id":15847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15844,"mutability":"mutable","name":"left","nameLocation":"75840:4:14","nodeType":"VariableDeclaration","scope":15849,"src":"75832:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15843,"name":"uint256","nodeType":"ElementaryTypeName","src":"75832:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15846,"mutability":"mutable","name":"right","nameLocation":"75854:5:14","nodeType":"VariableDeclaration","scope":15849,"src":"75846:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15845,"name":"uint256","nodeType":"ElementaryTypeName","src":"75846:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75831:29:14"},"returnParameters":{"id":15848,"nodeType":"ParameterList","parameters":[],"src":"75874:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15859,"nodeType":"FunctionDefinition","src":"76026:84:14","nodes":[],"documentation":{"id":15850,"nodeType":"StructuredDocumentation","src":"75881:140:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"76035:8:14","parameters":{"id":15857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15852,"mutability":"mutable","name":"left","nameLocation":"76052:4:14","nodeType":"VariableDeclaration","scope":15859,"src":"76044:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15851,"name":"uint256","nodeType":"ElementaryTypeName","src":"76044:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15854,"mutability":"mutable","name":"right","nameLocation":"76066:5:14","nodeType":"VariableDeclaration","scope":15859,"src":"76058:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15853,"name":"uint256","nodeType":"ElementaryTypeName","src":"76058:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15856,"mutability":"mutable","name":"error","nameLocation":"76089:5:14","nodeType":"VariableDeclaration","scope":15859,"src":"76073:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15855,"name":"string","nodeType":"ElementaryTypeName","src":"76073:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76043:52:14"},"returnParameters":{"id":15858,"nodeType":"ParameterList","parameters":[],"src":"76109:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15867,"nodeType":"FunctionDefinition","src":"76198:59:14","nodes":[],"documentation":{"id":15860,"nodeType":"StructuredDocumentation","src":"76116:77:14","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"76207:8:14","parameters":{"id":15865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15862,"mutability":"mutable","name":"left","nameLocation":"76223:4:14","nodeType":"VariableDeclaration","scope":15867,"src":"76216:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15861,"name":"int256","nodeType":"ElementaryTypeName","src":"76216:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15864,"mutability":"mutable","name":"right","nameLocation":"76236:5:14","nodeType":"VariableDeclaration","scope":15867,"src":"76229:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15863,"name":"int256","nodeType":"ElementaryTypeName","src":"76229:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"76215:27:14"},"returnParameters":{"id":15866,"nodeType":"ParameterList","parameters":[],"src":"76256:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15877,"nodeType":"FunctionDefinition","src":"76407:82:14","nodes":[],"documentation":{"id":15868,"nodeType":"StructuredDocumentation","src":"76263:139:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"76416:8:14","parameters":{"id":15875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15870,"mutability":"mutable","name":"left","nameLocation":"76432:4:14","nodeType":"VariableDeclaration","scope":15877,"src":"76425:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15869,"name":"int256","nodeType":"ElementaryTypeName","src":"76425:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15872,"mutability":"mutable","name":"right","nameLocation":"76445:5:14","nodeType":"VariableDeclaration","scope":15877,"src":"76438:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15871,"name":"int256","nodeType":"ElementaryTypeName","src":"76438:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15874,"mutability":"mutable","name":"error","nameLocation":"76468:5:14","nodeType":"VariableDeclaration","scope":15877,"src":"76452:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15873,"name":"string","nodeType":"ElementaryTypeName","src":"76452:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76424:50:14"},"returnParameters":{"id":15876,"nodeType":"ParameterList","parameters":[],"src":"76488:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15887,"nodeType":"FunctionDefinition","src":"76602:89:14","nodes":[],"documentation":{"id":15878,"nodeType":"StructuredDocumentation","src":"76495:102:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"76611:18:14","parameters":{"id":15885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15880,"mutability":"mutable","name":"left","nameLocation":"76638:4:14","nodeType":"VariableDeclaration","scope":15887,"src":"76630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15879,"name":"uint256","nodeType":"ElementaryTypeName","src":"76630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15882,"mutability":"mutable","name":"right","nameLocation":"76652:5:14","nodeType":"VariableDeclaration","scope":15887,"src":"76644:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15881,"name":"uint256","nodeType":"ElementaryTypeName","src":"76644:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15884,"mutability":"mutable","name":"decimals","nameLocation":"76667:8:14","nodeType":"VariableDeclaration","scope":15887,"src":"76659:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15883,"name":"uint256","nodeType":"ElementaryTypeName","src":"76659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76629:47:14"},"returnParameters":{"id":15886,"nodeType":"ParameterList","parameters":[],"src":"76690:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15899,"nodeType":"FunctionDefinition","src":"76866:112:14","nodes":[],"documentation":{"id":15888,"nodeType":"StructuredDocumentation","src":"76697:164:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"76875:18:14","parameters":{"id":15897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15890,"mutability":"mutable","name":"left","nameLocation":"76902:4:14","nodeType":"VariableDeclaration","scope":15899,"src":"76894:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15889,"name":"uint256","nodeType":"ElementaryTypeName","src":"76894:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15892,"mutability":"mutable","name":"right","nameLocation":"76916:5:14","nodeType":"VariableDeclaration","scope":15899,"src":"76908:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15891,"name":"uint256","nodeType":"ElementaryTypeName","src":"76908:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15894,"mutability":"mutable","name":"decimals","nameLocation":"76931:8:14","nodeType":"VariableDeclaration","scope":15899,"src":"76923:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15893,"name":"uint256","nodeType":"ElementaryTypeName","src":"76923:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15896,"mutability":"mutable","name":"error","nameLocation":"76957:5:14","nodeType":"VariableDeclaration","scope":15899,"src":"76941:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15895,"name":"string","nodeType":"ElementaryTypeName","src":"76941:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76893:70:14"},"returnParameters":{"id":15898,"nodeType":"ParameterList","parameters":[],"src":"76977:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15909,"nodeType":"FunctionDefinition","src":"77090:87:14","nodes":[],"documentation":{"id":15900,"nodeType":"StructuredDocumentation","src":"76984:101:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"77099:18:14","parameters":{"id":15907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15902,"mutability":"mutable","name":"left","nameLocation":"77125:4:14","nodeType":"VariableDeclaration","scope":15909,"src":"77118:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15901,"name":"int256","nodeType":"ElementaryTypeName","src":"77118:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15904,"mutability":"mutable","name":"right","nameLocation":"77138:5:14","nodeType":"VariableDeclaration","scope":15909,"src":"77131:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15903,"name":"int256","nodeType":"ElementaryTypeName","src":"77131:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15906,"mutability":"mutable","name":"decimals","nameLocation":"77153:8:14","nodeType":"VariableDeclaration","scope":15909,"src":"77145:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15905,"name":"uint256","nodeType":"ElementaryTypeName","src":"77145:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77117:45:14"},"returnParameters":{"id":15908,"nodeType":"ParameterList","parameters":[],"src":"77176:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15921,"nodeType":"FunctionDefinition","src":"77351:110:14","nodes":[],"documentation":{"id":15910,"nodeType":"StructuredDocumentation","src":"77183:163:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"77360:18:14","parameters":{"id":15919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15912,"mutability":"mutable","name":"left","nameLocation":"77386:4:14","nodeType":"VariableDeclaration","scope":15921,"src":"77379:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15911,"name":"int256","nodeType":"ElementaryTypeName","src":"77379:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15914,"mutability":"mutable","name":"right","nameLocation":"77399:5:14","nodeType":"VariableDeclaration","scope":15921,"src":"77392:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15913,"name":"int256","nodeType":"ElementaryTypeName","src":"77392:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15916,"mutability":"mutable","name":"decimals","nameLocation":"77414:8:14","nodeType":"VariableDeclaration","scope":15921,"src":"77406:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15915,"name":"uint256","nodeType":"ElementaryTypeName","src":"77406:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15918,"mutability":"mutable","name":"error","nameLocation":"77440:5:14","nodeType":"VariableDeclaration","scope":15921,"src":"77424:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15917,"name":"string","nodeType":"ElementaryTypeName","src":"77424:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77378:68:14"},"returnParameters":{"id":15920,"nodeType":"ParameterList","parameters":[],"src":"77460:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15929,"nodeType":"FunctionDefinition","src":"77521:58:14","nodes":[],"documentation":{"id":15922,"nodeType":"StructuredDocumentation","src":"77467:49:14","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77530:11:14","parameters":{"id":15927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15924,"mutability":"mutable","name":"left","nameLocation":"77547:4:14","nodeType":"VariableDeclaration","scope":15929,"src":"77542:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15923,"name":"bool","nodeType":"ElementaryTypeName","src":"77542:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15926,"mutability":"mutable","name":"right","nameLocation":"77558:5:14","nodeType":"VariableDeclaration","scope":15929,"src":"77553:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15925,"name":"bool","nodeType":"ElementaryTypeName","src":"77553:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77541:23:14"},"returnParameters":{"id":15928,"nodeType":"ParameterList","parameters":[],"src":"77578:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15939,"nodeType":"FunctionDefinition","src":"77696:81:14","nodes":[],"documentation":{"id":15930,"nodeType":"StructuredDocumentation","src":"77585:106:14","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77705:11:14","parameters":{"id":15937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15932,"mutability":"mutable","name":"left","nameLocation":"77722:4:14","nodeType":"VariableDeclaration","scope":15939,"src":"77717:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15931,"name":"bool","nodeType":"ElementaryTypeName","src":"77717:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15934,"mutability":"mutable","name":"right","nameLocation":"77733:5:14","nodeType":"VariableDeclaration","scope":15939,"src":"77728:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15933,"name":"bool","nodeType":"ElementaryTypeName","src":"77728:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15936,"mutability":"mutable","name":"error","nameLocation":"77756:5:14","nodeType":"VariableDeclaration","scope":15939,"src":"77740:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15935,"name":"string","nodeType":"ElementaryTypeName","src":"77740:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77716:46:14"},"returnParameters":{"id":15938,"nodeType":"ParameterList","parameters":[],"src":"77776:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15947,"nodeType":"FunctionDefinition","src":"77839:80:14","nodes":[],"documentation":{"id":15940,"nodeType":"StructuredDocumentation","src":"77783:51:14","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77848:11:14","parameters":{"id":15945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15942,"mutability":"mutable","name":"left","nameLocation":"77876:4:14","nodeType":"VariableDeclaration","scope":15947,"src":"77860:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15941,"name":"string","nodeType":"ElementaryTypeName","src":"77860:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15944,"mutability":"mutable","name":"right","nameLocation":"77898:5:14","nodeType":"VariableDeclaration","scope":15947,"src":"77882:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15943,"name":"string","nodeType":"ElementaryTypeName","src":"77882:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77859:45:14"},"returnParameters":{"id":15946,"nodeType":"ParameterList","parameters":[],"src":"77918:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15957,"nodeType":"FunctionDefinition","src":"78038:103:14","nodes":[],"documentation":{"id":15948,"nodeType":"StructuredDocumentation","src":"77925:108:14","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78047:11:14","parameters":{"id":15955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15950,"mutability":"mutable","name":"left","nameLocation":"78075:4:14","nodeType":"VariableDeclaration","scope":15957,"src":"78059:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15949,"name":"string","nodeType":"ElementaryTypeName","src":"78059:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15952,"mutability":"mutable","name":"right","nameLocation":"78097:5:14","nodeType":"VariableDeclaration","scope":15957,"src":"78081:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15951,"name":"string","nodeType":"ElementaryTypeName","src":"78081:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15954,"mutability":"mutable","name":"error","nameLocation":"78120:5:14","nodeType":"VariableDeclaration","scope":15957,"src":"78104:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15953,"name":"string","nodeType":"ElementaryTypeName","src":"78104:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78058:68:14"},"returnParameters":{"id":15956,"nodeType":"ParameterList","parameters":[],"src":"78140:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15965,"nodeType":"FunctionDefinition","src":"78202:78:14","nodes":[],"documentation":{"id":15958,"nodeType":"StructuredDocumentation","src":"78147:50:14","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78211:11:14","parameters":{"id":15963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15960,"mutability":"mutable","name":"left","nameLocation":"78238:4:14","nodeType":"VariableDeclaration","scope":15965,"src":"78223:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15959,"name":"bytes","nodeType":"ElementaryTypeName","src":"78223:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15962,"mutability":"mutable","name":"right","nameLocation":"78259:5:14","nodeType":"VariableDeclaration","scope":15965,"src":"78244:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15961,"name":"bytes","nodeType":"ElementaryTypeName","src":"78244:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78222:43:14"},"returnParameters":{"id":15964,"nodeType":"ParameterList","parameters":[],"src":"78279:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15975,"nodeType":"FunctionDefinition","src":"78398:101:14","nodes":[],"documentation":{"id":15966,"nodeType":"StructuredDocumentation","src":"78286:107:14","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78407:11:14","parameters":{"id":15973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15968,"mutability":"mutable","name":"left","nameLocation":"78434:4:14","nodeType":"VariableDeclaration","scope":15975,"src":"78419:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15967,"name":"bytes","nodeType":"ElementaryTypeName","src":"78419:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15970,"mutability":"mutable","name":"right","nameLocation":"78455:5:14","nodeType":"VariableDeclaration","scope":15975,"src":"78440:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15969,"name":"bytes","nodeType":"ElementaryTypeName","src":"78440:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15972,"mutability":"mutable","name":"error","nameLocation":"78478:5:14","nodeType":"VariableDeclaration","scope":15975,"src":"78462:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15971,"name":"string","nodeType":"ElementaryTypeName","src":"78462:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78418:66:14"},"returnParameters":{"id":15974,"nodeType":"ParameterList","parameters":[],"src":"78498:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15985,"nodeType":"FunctionDefinition","src":"78569:80:14","nodes":[],"documentation":{"id":15976,"nodeType":"StructuredDocumentation","src":"78505:59:14","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78578:11:14","parameters":{"id":15983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15979,"mutability":"mutable","name":"left","nameLocation":"78606:4:14","nodeType":"VariableDeclaration","scope":15985,"src":"78590:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15977,"name":"bool","nodeType":"ElementaryTypeName","src":"78590:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15978,"nodeType":"ArrayTypeName","src":"78590:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15982,"mutability":"mutable","name":"right","nameLocation":"78628:5:14","nodeType":"VariableDeclaration","scope":15985,"src":"78612:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15980,"name":"bool","nodeType":"ElementaryTypeName","src":"78612:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15981,"nodeType":"ArrayTypeName","src":"78612:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"78589:45:14"},"returnParameters":{"id":15984,"nodeType":"ParameterList","parameters":[],"src":"78648:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15997,"nodeType":"FunctionDefinition","src":"78776:103:14","nodes":[],"documentation":{"id":15986,"nodeType":"StructuredDocumentation","src":"78655:116:14","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78785:11:14","parameters":{"id":15995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15989,"mutability":"mutable","name":"left","nameLocation":"78813:4:14","nodeType":"VariableDeclaration","scope":15997,"src":"78797:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15987,"name":"bool","nodeType":"ElementaryTypeName","src":"78797:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15988,"nodeType":"ArrayTypeName","src":"78797:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15992,"mutability":"mutable","name":"right","nameLocation":"78835:5:14","nodeType":"VariableDeclaration","scope":15997,"src":"78819:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15990,"name":"bool","nodeType":"ElementaryTypeName","src":"78819:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15991,"nodeType":"ArrayTypeName","src":"78819:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15994,"mutability":"mutable","name":"error","nameLocation":"78858:5:14","nodeType":"VariableDeclaration","scope":15997,"src":"78842:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15993,"name":"string","nodeType":"ElementaryTypeName","src":"78842:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78796:68:14"},"returnParameters":{"id":15996,"nodeType":"ParameterList","parameters":[],"src":"78878:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16007,"nodeType":"FunctionDefinition","src":"78952:86:14","nodes":[],"documentation":{"id":15998,"nodeType":"StructuredDocumentation","src":"78885:62:14","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78961:11:14","parameters":{"id":16005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16001,"mutability":"mutable","name":"left","nameLocation":"78992:4:14","nodeType":"VariableDeclaration","scope":16007,"src":"78973:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15999,"name":"uint256","nodeType":"ElementaryTypeName","src":"78973:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16000,"nodeType":"ArrayTypeName","src":"78973:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16004,"mutability":"mutable","name":"right","nameLocation":"79017:5:14","nodeType":"VariableDeclaration","scope":16007,"src":"78998:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16002,"name":"uint256","nodeType":"ElementaryTypeName","src":"78998:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16003,"nodeType":"ArrayTypeName","src":"78998:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"78972:51:14"},"returnParameters":{"id":16006,"nodeType":"ParameterList","parameters":[],"src":"79037:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16019,"nodeType":"FunctionDefinition","src":"79168:109:14","nodes":[],"documentation":{"id":16008,"nodeType":"StructuredDocumentation","src":"79044:119:14","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79177:11:14","parameters":{"id":16017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16011,"mutability":"mutable","name":"left","nameLocation":"79208:4:14","nodeType":"VariableDeclaration","scope":16019,"src":"79189:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16009,"name":"uint256","nodeType":"ElementaryTypeName","src":"79189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16010,"nodeType":"ArrayTypeName","src":"79189:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16014,"mutability":"mutable","name":"right","nameLocation":"79233:5:14","nodeType":"VariableDeclaration","scope":16019,"src":"79214:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16012,"name":"uint256","nodeType":"ElementaryTypeName","src":"79214:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16013,"nodeType":"ArrayTypeName","src":"79214:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16016,"mutability":"mutable","name":"error","nameLocation":"79256:5:14","nodeType":"VariableDeclaration","scope":16019,"src":"79240:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16015,"name":"string","nodeType":"ElementaryTypeName","src":"79240:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79188:74:14"},"returnParameters":{"id":16018,"nodeType":"ParameterList","parameters":[],"src":"79276:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16029,"nodeType":"FunctionDefinition","src":"79349:84:14","nodes":[],"documentation":{"id":16020,"nodeType":"StructuredDocumentation","src":"79283:61:14","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79358:11:14","parameters":{"id":16027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16023,"mutability":"mutable","name":"left","nameLocation":"79388:4:14","nodeType":"VariableDeclaration","scope":16029,"src":"79370:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16021,"name":"int256","nodeType":"ElementaryTypeName","src":"79370:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16022,"nodeType":"ArrayTypeName","src":"79370:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16026,"mutability":"mutable","name":"right","nameLocation":"79412:5:14","nodeType":"VariableDeclaration","scope":16029,"src":"79394:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16024,"name":"int256","nodeType":"ElementaryTypeName","src":"79394:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16025,"nodeType":"ArrayTypeName","src":"79394:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"79369:49:14"},"returnParameters":{"id":16028,"nodeType":"ParameterList","parameters":[],"src":"79432:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16041,"nodeType":"FunctionDefinition","src":"79562:107:14","nodes":[],"documentation":{"id":16030,"nodeType":"StructuredDocumentation","src":"79439:118:14","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79571:11:14","parameters":{"id":16039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16033,"mutability":"mutable","name":"left","nameLocation":"79601:4:14","nodeType":"VariableDeclaration","scope":16041,"src":"79583:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16031,"name":"int256","nodeType":"ElementaryTypeName","src":"79583:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16032,"nodeType":"ArrayTypeName","src":"79583:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16036,"mutability":"mutable","name":"right","nameLocation":"79625:5:14","nodeType":"VariableDeclaration","scope":16041,"src":"79607:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16034,"name":"int256","nodeType":"ElementaryTypeName","src":"79607:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16035,"nodeType":"ArrayTypeName","src":"79607:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16038,"mutability":"mutable","name":"error","nameLocation":"79648:5:14","nodeType":"VariableDeclaration","scope":16041,"src":"79632:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16037,"name":"string","nodeType":"ElementaryTypeName","src":"79632:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79582:72:14"},"returnParameters":{"id":16040,"nodeType":"ParameterList","parameters":[],"src":"79668:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16049,"nodeType":"FunctionDefinition","src":"79732:64:14","nodes":[],"documentation":{"id":16042,"nodeType":"StructuredDocumentation","src":"79675:52:14","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79741:11:14","parameters":{"id":16047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16044,"mutability":"mutable","name":"left","nameLocation":"79761:4:14","nodeType":"VariableDeclaration","scope":16049,"src":"79753:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16043,"name":"uint256","nodeType":"ElementaryTypeName","src":"79753:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16046,"mutability":"mutable","name":"right","nameLocation":"79775:5:14","nodeType":"VariableDeclaration","scope":16049,"src":"79767:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16045,"name":"uint256","nodeType":"ElementaryTypeName","src":"79767:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79752:29:14"},"returnParameters":{"id":16048,"nodeType":"ParameterList","parameters":[],"src":"79795:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16059,"nodeType":"FunctionDefinition","src":"79869:86:14","nodes":[],"documentation":{"id":16050,"nodeType":"StructuredDocumentation","src":"79802:62:14","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79878:11:14","parameters":{"id":16057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16053,"mutability":"mutable","name":"left","nameLocation":"79909:4:14","nodeType":"VariableDeclaration","scope":16059,"src":"79890:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16051,"name":"address","nodeType":"ElementaryTypeName","src":"79890:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16052,"nodeType":"ArrayTypeName","src":"79890:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16056,"mutability":"mutable","name":"right","nameLocation":"79934:5:14","nodeType":"VariableDeclaration","scope":16059,"src":"79915:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16054,"name":"address","nodeType":"ElementaryTypeName","src":"79915:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16055,"nodeType":"ArrayTypeName","src":"79915:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"79889:51:14"},"returnParameters":{"id":16058,"nodeType":"ParameterList","parameters":[],"src":"79954:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16071,"nodeType":"FunctionDefinition","src":"80085:109:14","nodes":[],"documentation":{"id":16060,"nodeType":"StructuredDocumentation","src":"79961:119:14","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80094:11:14","parameters":{"id":16069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16063,"mutability":"mutable","name":"left","nameLocation":"80125:4:14","nodeType":"VariableDeclaration","scope":16071,"src":"80106:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16061,"name":"address","nodeType":"ElementaryTypeName","src":"80106:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16062,"nodeType":"ArrayTypeName","src":"80106:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16066,"mutability":"mutable","name":"right","nameLocation":"80150:5:14","nodeType":"VariableDeclaration","scope":16071,"src":"80131:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16064,"name":"address","nodeType":"ElementaryTypeName","src":"80131:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16065,"nodeType":"ArrayTypeName","src":"80131:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16068,"mutability":"mutable","name":"error","nameLocation":"80173:5:14","nodeType":"VariableDeclaration","scope":16071,"src":"80157:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16067,"name":"string","nodeType":"ElementaryTypeName","src":"80157:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80105:74:14"},"returnParameters":{"id":16070,"nodeType":"ParameterList","parameters":[],"src":"80193:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16081,"nodeType":"FunctionDefinition","src":"80267:86:14","nodes":[],"documentation":{"id":16072,"nodeType":"StructuredDocumentation","src":"80200:62:14","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80276:11:14","parameters":{"id":16079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16075,"mutability":"mutable","name":"left","nameLocation":"80307:4:14","nodeType":"VariableDeclaration","scope":16081,"src":"80288:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80288:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16074,"nodeType":"ArrayTypeName","src":"80288:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16078,"mutability":"mutable","name":"right","nameLocation":"80332:5:14","nodeType":"VariableDeclaration","scope":16081,"src":"80313:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80313:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16077,"nodeType":"ArrayTypeName","src":"80313:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"80287:51:14"},"returnParameters":{"id":16080,"nodeType":"ParameterList","parameters":[],"src":"80352:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16093,"nodeType":"FunctionDefinition","src":"80483:109:14","nodes":[],"documentation":{"id":16082,"nodeType":"StructuredDocumentation","src":"80359:119:14","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80492:11:14","parameters":{"id":16091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16085,"mutability":"mutable","name":"left","nameLocation":"80523:4:14","nodeType":"VariableDeclaration","scope":16093,"src":"80504:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80504:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16084,"nodeType":"ArrayTypeName","src":"80504:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16088,"mutability":"mutable","name":"right","nameLocation":"80548:5:14","nodeType":"VariableDeclaration","scope":16093,"src":"80529:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80529:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16087,"nodeType":"ArrayTypeName","src":"80529:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16090,"mutability":"mutable","name":"error","nameLocation":"80571:5:14","nodeType":"VariableDeclaration","scope":16093,"src":"80555:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16089,"name":"string","nodeType":"ElementaryTypeName","src":"80555:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80503:74:14"},"returnParameters":{"id":16092,"nodeType":"ParameterList","parameters":[],"src":"80591:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16103,"nodeType":"FunctionDefinition","src":"80664:84:14","nodes":[],"documentation":{"id":16094,"nodeType":"StructuredDocumentation","src":"80598:61:14","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80673:11:14","parameters":{"id":16101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16097,"mutability":"mutable","name":"left","nameLocation":"80703:4:14","nodeType":"VariableDeclaration","scope":16103,"src":"80685:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16095,"name":"string","nodeType":"ElementaryTypeName","src":"80685:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16096,"nodeType":"ArrayTypeName","src":"80685:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16100,"mutability":"mutable","name":"right","nameLocation":"80727:5:14","nodeType":"VariableDeclaration","scope":16103,"src":"80709:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16098,"name":"string","nodeType":"ElementaryTypeName","src":"80709:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16099,"nodeType":"ArrayTypeName","src":"80709:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"80684:49:14"},"returnParameters":{"id":16102,"nodeType":"ParameterList","parameters":[],"src":"80747:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16115,"nodeType":"FunctionDefinition","src":"80877:107:14","nodes":[],"documentation":{"id":16104,"nodeType":"StructuredDocumentation","src":"80754:118:14","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80886:11:14","parameters":{"id":16113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16107,"mutability":"mutable","name":"left","nameLocation":"80916:4:14","nodeType":"VariableDeclaration","scope":16115,"src":"80898:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16105,"name":"string","nodeType":"ElementaryTypeName","src":"80898:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16106,"nodeType":"ArrayTypeName","src":"80898:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16110,"mutability":"mutable","name":"right","nameLocation":"80940:5:14","nodeType":"VariableDeclaration","scope":16115,"src":"80922:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16108,"name":"string","nodeType":"ElementaryTypeName","src":"80922:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16109,"nodeType":"ArrayTypeName","src":"80922:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16112,"mutability":"mutable","name":"error","nameLocation":"80963:5:14","nodeType":"VariableDeclaration","scope":16115,"src":"80947:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16111,"name":"string","nodeType":"ElementaryTypeName","src":"80947:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80897:72:14"},"returnParameters":{"id":16114,"nodeType":"ParameterList","parameters":[],"src":"80983:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16125,"nodeType":"FunctionDefinition","src":"81055:82:14","nodes":[],"documentation":{"id":16116,"nodeType":"StructuredDocumentation","src":"80990:60:14","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81064:11:14","parameters":{"id":16123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16119,"mutability":"mutable","name":"left","nameLocation":"81093:4:14","nodeType":"VariableDeclaration","scope":16125,"src":"81076:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16117,"name":"bytes","nodeType":"ElementaryTypeName","src":"81076:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16118,"nodeType":"ArrayTypeName","src":"81076:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16122,"mutability":"mutable","name":"right","nameLocation":"81116:5:14","nodeType":"VariableDeclaration","scope":16125,"src":"81099:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16120,"name":"bytes","nodeType":"ElementaryTypeName","src":"81099:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16121,"nodeType":"ArrayTypeName","src":"81099:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"81075:47:14"},"returnParameters":{"id":16124,"nodeType":"ParameterList","parameters":[],"src":"81136:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16137,"nodeType":"FunctionDefinition","src":"81265:105:14","nodes":[],"documentation":{"id":16126,"nodeType":"StructuredDocumentation","src":"81143:117:14","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81274:11:14","parameters":{"id":16135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16129,"mutability":"mutable","name":"left","nameLocation":"81303:4:14","nodeType":"VariableDeclaration","scope":16137,"src":"81286:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16127,"name":"bytes","nodeType":"ElementaryTypeName","src":"81286:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16128,"nodeType":"ArrayTypeName","src":"81286:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16132,"mutability":"mutable","name":"right","nameLocation":"81326:5:14","nodeType":"VariableDeclaration","scope":16137,"src":"81309:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16130,"name":"bytes","nodeType":"ElementaryTypeName","src":"81309:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16131,"nodeType":"ArrayTypeName","src":"81309:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16134,"mutability":"mutable","name":"error","nameLocation":"81349:5:14","nodeType":"VariableDeclaration","scope":16137,"src":"81333:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16133,"name":"string","nodeType":"ElementaryTypeName","src":"81333:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81285:70:14"},"returnParameters":{"id":16136,"nodeType":"ParameterList","parameters":[],"src":"81369:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16147,"nodeType":"FunctionDefinition","src":"81490:87:14","nodes":[],"documentation":{"id":16138,"nodeType":"StructuredDocumentation","src":"81376:109:14","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81499:11:14","parameters":{"id":16145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16140,"mutability":"mutable","name":"left","nameLocation":"81519:4:14","nodeType":"VariableDeclaration","scope":16147,"src":"81511:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16139,"name":"uint256","nodeType":"ElementaryTypeName","src":"81511:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16142,"mutability":"mutable","name":"right","nameLocation":"81533:5:14","nodeType":"VariableDeclaration","scope":16147,"src":"81525:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16141,"name":"uint256","nodeType":"ElementaryTypeName","src":"81525:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16144,"mutability":"mutable","name":"error","nameLocation":"81556:5:14","nodeType":"VariableDeclaration","scope":16147,"src":"81540:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16143,"name":"string","nodeType":"ElementaryTypeName","src":"81540:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81510:52:14"},"returnParameters":{"id":16146,"nodeType":"ParameterList","parameters":[],"src":"81576:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16155,"nodeType":"FunctionDefinition","src":"81639:62:14","nodes":[],"documentation":{"id":16148,"nodeType":"StructuredDocumentation","src":"81583:51:14","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81648:11:14","parameters":{"id":16153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16150,"mutability":"mutable","name":"left","nameLocation":"81667:4:14","nodeType":"VariableDeclaration","scope":16155,"src":"81660:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16149,"name":"int256","nodeType":"ElementaryTypeName","src":"81660:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16152,"mutability":"mutable","name":"right","nameLocation":"81680:5:14","nodeType":"VariableDeclaration","scope":16155,"src":"81673:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16151,"name":"int256","nodeType":"ElementaryTypeName","src":"81673:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"81659:27:14"},"returnParameters":{"id":16154,"nodeType":"ParameterList","parameters":[],"src":"81700:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16165,"nodeType":"FunctionDefinition","src":"81820:85:14","nodes":[],"documentation":{"id":16156,"nodeType":"StructuredDocumentation","src":"81707:108:14","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81829:11:14","parameters":{"id":16163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16158,"mutability":"mutable","name":"left","nameLocation":"81848:4:14","nodeType":"VariableDeclaration","scope":16165,"src":"81841:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16157,"name":"int256","nodeType":"ElementaryTypeName","src":"81841:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16160,"mutability":"mutable","name":"right","nameLocation":"81861:5:14","nodeType":"VariableDeclaration","scope":16165,"src":"81854:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16159,"name":"int256","nodeType":"ElementaryTypeName","src":"81854:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16162,"mutability":"mutable","name":"error","nameLocation":"81884:5:14","nodeType":"VariableDeclaration","scope":16165,"src":"81868:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16161,"name":"string","nodeType":"ElementaryTypeName","src":"81868:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81840:50:14"},"returnParameters":{"id":16164,"nodeType":"ParameterList","parameters":[],"src":"81904:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16173,"nodeType":"FunctionDefinition","src":"81968:64:14","nodes":[],"documentation":{"id":16166,"nodeType":"StructuredDocumentation","src":"81911:52:14","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81977:11:14","parameters":{"id":16171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16168,"mutability":"mutable","name":"left","nameLocation":"81997:4:14","nodeType":"VariableDeclaration","scope":16173,"src":"81989:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16167,"name":"address","nodeType":"ElementaryTypeName","src":"81989:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16170,"mutability":"mutable","name":"right","nameLocation":"82011:5:14","nodeType":"VariableDeclaration","scope":16173,"src":"82003:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16169,"name":"address","nodeType":"ElementaryTypeName","src":"82003:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81988:29:14"},"returnParameters":{"id":16172,"nodeType":"ParameterList","parameters":[],"src":"82031:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16183,"nodeType":"FunctionDefinition","src":"82152:87:14","nodes":[],"documentation":{"id":16174,"nodeType":"StructuredDocumentation","src":"82038:109:14","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82161:11:14","parameters":{"id":16181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16176,"mutability":"mutable","name":"left","nameLocation":"82181:4:14","nodeType":"VariableDeclaration","scope":16183,"src":"82173:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16175,"name":"address","nodeType":"ElementaryTypeName","src":"82173:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16178,"mutability":"mutable","name":"right","nameLocation":"82195:5:14","nodeType":"VariableDeclaration","scope":16183,"src":"82187:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16177,"name":"address","nodeType":"ElementaryTypeName","src":"82187:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16180,"mutability":"mutable","name":"error","nameLocation":"82218:5:14","nodeType":"VariableDeclaration","scope":16183,"src":"82202:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16179,"name":"string","nodeType":"ElementaryTypeName","src":"82202:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82172:52:14"},"returnParameters":{"id":16182,"nodeType":"ParameterList","parameters":[],"src":"82238:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16191,"nodeType":"FunctionDefinition","src":"82302:64:14","nodes":[],"documentation":{"id":16184,"nodeType":"StructuredDocumentation","src":"82245:52:14","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82311:11:14","parameters":{"id":16189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16186,"mutability":"mutable","name":"left","nameLocation":"82331:4:14","nodeType":"VariableDeclaration","scope":16191,"src":"82323:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82323:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16188,"mutability":"mutable","name":"right","nameLocation":"82345:5:14","nodeType":"VariableDeclaration","scope":16191,"src":"82337:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82337:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82322:29:14"},"returnParameters":{"id":16190,"nodeType":"ParameterList","parameters":[],"src":"82365:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16201,"nodeType":"FunctionDefinition","src":"82486:87:14","nodes":[],"documentation":{"id":16192,"nodeType":"StructuredDocumentation","src":"82372:109:14","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82495:11:14","parameters":{"id":16199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16194,"mutability":"mutable","name":"left","nameLocation":"82515:4:14","nodeType":"VariableDeclaration","scope":16201,"src":"82507:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82507:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16196,"mutability":"mutable","name":"right","nameLocation":"82529:5:14","nodeType":"VariableDeclaration","scope":16201,"src":"82521:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82521:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16198,"mutability":"mutable","name":"error","nameLocation":"82552:5:14","nodeType":"VariableDeclaration","scope":16201,"src":"82536:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16197,"name":"string","nodeType":"ElementaryTypeName","src":"82536:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82506:52:14"},"returnParameters":{"id":16200,"nodeType":"ParameterList","parameters":[],"src":"82572:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16207,"nodeType":"FunctionDefinition","src":"82629:50:14","nodes":[],"documentation":{"id":16202,"nodeType":"StructuredDocumentation","src":"82579:45:14","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"82638:10:14","parameters":{"id":16205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16204,"mutability":"mutable","name":"condition","nameLocation":"82654:9:14","nodeType":"VariableDeclaration","scope":16207,"src":"82649:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16203,"name":"bool","nodeType":"ElementaryTypeName","src":"82649:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82648:16:14"},"returnParameters":{"id":16206,"nodeType":"ParameterList","parameters":[],"src":"82678:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16215,"nodeType":"FunctionDefinition","src":"82792:73:14","nodes":[],"documentation":{"id":16208,"nodeType":"StructuredDocumentation","src":"82685:102:14","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"82801:10:14","parameters":{"id":16213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16210,"mutability":"mutable","name":"condition","nameLocation":"82817:9:14","nodeType":"VariableDeclaration","scope":16215,"src":"82812:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16209,"name":"bool","nodeType":"ElementaryTypeName","src":"82812:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16212,"mutability":"mutable","name":"error","nameLocation":"82844:5:14","nodeType":"VariableDeclaration","scope":16215,"src":"82828:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16211,"name":"string","nodeType":"ElementaryTypeName","src":"82828:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82811:39:14"},"returnParameters":{"id":16214,"nodeType":"ParameterList","parameters":[],"src":"82864:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16221,"nodeType":"FunctionDefinition","src":"82960:46:14","nodes":[],"documentation":{"id":16216,"nodeType":"StructuredDocumentation","src":"82871:84:14","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"82969:6:14","parameters":{"id":16219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16218,"mutability":"mutable","name":"condition","nameLocation":"82981:9:14","nodeType":"VariableDeclaration","scope":16221,"src":"82976:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16217,"name":"bool","nodeType":"ElementaryTypeName","src":"82976:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82975:16:14"},"returnParameters":{"id":16220,"nodeType":"ParameterList","parameters":[],"src":"83005:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16225,"nodeType":"FunctionDefinition","src":"83096:40:14","nodes":[],"documentation":{"id":16222,"nodeType":"StructuredDocumentation","src":"83012:79:14","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"83105:14:14","parameters":{"id":16223,"nodeType":"ParameterList","parameters":[],"src":"83119:2:14"},"returnParameters":{"id":16224,"nodeType":"ParameterList","parameters":[],"src":"83135:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16232,"nodeType":"FunctionDefinition","src":"83262:80:14","nodes":[],"documentation":{"id":16226,"nodeType":"StructuredDocumentation","src":"83142:115:14","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"functionSelector":"d8591eeb","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"83271:14:14","parameters":{"id":16230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16229,"mutability":"mutable","name":"potentialRevert","nameLocation":"83311:15:14","nodeType":"VariableDeclaration","scope":16232,"src":"83286:40:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13181_calldata_ptr","typeString":"struct VmSafe.PotentialRevert"},"typeName":{"id":16228,"nodeType":"UserDefinedTypeName","pathNode":{"id":16227,"name":"PotentialRevert","nameLocations":["83286:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":13181,"src":"83286:15:14"},"referencedDeclaration":13181,"src":"83286:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13181_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"visibility":"internal"}],"src":"83285:42:14"},"returnParameters":{"id":16231,"nodeType":"ParameterList","parameters":[],"src":"83341:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16240,"nodeType":"FunctionDefinition","src":"83479:83:14","nodes":[],"documentation":{"id":16233,"nodeType":"StructuredDocumentation","src":"83348:126:14","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"functionSelector":"8a4592cc","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"83488:14:14","parameters":{"id":16238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16237,"mutability":"mutable","name":"potentialReverts","nameLocation":"83530:16:14","nodeType":"VariableDeclaration","scope":16240,"src":"83503:43:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$13181_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.PotentialRevert[]"},"typeName":{"baseType":{"id":16235,"nodeType":"UserDefinedTypeName","pathNode":{"id":16234,"name":"PotentialRevert","nameLocations":["83503:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":13181,"src":"83503:15:14"},"referencedDeclaration":13181,"src":"83503:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13181_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"id":16236,"nodeType":"ArrayTypeName","src":"83503:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$13181_storage_$dyn_storage_ptr","typeString":"struct VmSafe.PotentialRevert[]"}},"visibility":"internal"}],"src":"83502:45:14"},"returnParameters":{"id":16239,"nodeType":"ParameterList","parameters":[],"src":"83561:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16246,"nodeType":"FunctionDefinition","src":"83624:56:14","nodes":[],"documentation":{"id":16241,"nodeType":"StructuredDocumentation","src":"83568:51:14","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"83633:10:14","parameters":{"id":16244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16243,"mutability":"mutable","name":"char","nameLocation":"83660:4:14","nodeType":"VariableDeclaration","scope":16246,"src":"83644:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16242,"name":"string","nodeType":"ElementaryTypeName","src":"83644:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83643:22:14"},"returnParameters":{"id":16245,"nodeType":"ParameterList","parameters":[],"src":"83679:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16254,"nodeType":"FunctionDefinition","src":"83754:68:14","nodes":[],"documentation":{"id":16247,"nodeType":"StructuredDocumentation","src":"83686:63:14","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"83763:10:14","parameters":{"id":16252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16249,"mutability":"mutable","name":"char","nameLocation":"83790:4:14","nodeType":"VariableDeclaration","scope":16254,"src":"83774:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16248,"name":"string","nodeType":"ElementaryTypeName","src":"83774:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16251,"mutability":"mutable","name":"value","nameLocation":"83801:5:14","nodeType":"VariableDeclaration","scope":16254,"src":"83796:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16250,"name":"bool","nodeType":"ElementaryTypeName","src":"83796:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83773:34:14"},"returnParameters":{"id":16253,"nodeType":"ParameterList","parameters":[],"src":"83821:0:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16260,"nodeType":"FunctionDefinition","src":"84257:75:14","nodes":[],"documentation":{"id":16255,"nodeType":"StructuredDocumentation","src":"83828:424:14","text":"Returns the Foundry version.\n Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile>\n Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use UNIX format (e.g., >= 1700000000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"84266:17:14","parameters":{"id":16256,"nodeType":"ParameterList","parameters":[],"src":"84283:2:14"},"returnParameters":{"id":16259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16258,"mutability":"mutable","name":"version","nameLocation":"84323:7:14","nodeType":"VariableDeclaration","scope":16260,"src":"84309:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16257,"name":"string","nodeType":"ElementaryTypeName","src":"84309:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84308:23:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16268,"nodeType":"FunctionDefinition","src":"84387:85:14","nodes":[],"documentation":{"id":16261,"nodeType":"StructuredDocumentation","src":"84338:44:14","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"84396:6:14","parameters":{"id":16264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16263,"mutability":"mutable","name":"rpcAlias","nameLocation":"84419:8:14","nodeType":"VariableDeclaration","scope":16268,"src":"84403:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16262,"name":"string","nodeType":"ElementaryTypeName","src":"84403:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84402:26:14"},"returnParameters":{"id":16267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16266,"mutability":"mutable","name":"json","nameLocation":"84466:4:14","nodeType":"VariableDeclaration","scope":16268,"src":"84452:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16265,"name":"string","nodeType":"ElementaryTypeName","src":"84452:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84451:20:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16276,"nodeType":"FunctionDefinition","src":"84537:67:14","nodes":[],"documentation":{"id":16269,"nodeType":"StructuredDocumentation","src":"84478:54:14","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"84546:13:14","parameters":{"id":16270,"nodeType":"ParameterList","parameters":[],"src":"84559:2:14"},"returnParameters":{"id":16275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16274,"mutability":"mutable","name":"urls","nameLocation":"84598:4:14","nodeType":"VariableDeclaration","scope":16276,"src":"84585:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$13002_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":16272,"nodeType":"UserDefinedTypeName","pathNode":{"id":16271,"name":"Rpc","nameLocations":["84585:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":13002,"src":"84585:3:14"},"referencedDeclaration":13002,"src":"84585:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$13002_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":16273,"nodeType":"ArrayTypeName","src":"84585:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$13002_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"84584:19:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16285,"nodeType":"FunctionDefinition","src":"84675:67:14","nodes":[],"documentation":{"id":16277,"nodeType":"StructuredDocumentation","src":"84610:60:14","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"84684:7:14","parameters":{"id":16278,"nodeType":"ParameterList","parameters":[],"src":"84691:2:14"},"returnParameters":{"id":16284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16283,"mutability":"mutable","name":"urls","nameLocation":"84736:4:14","nodeType":"VariableDeclaration","scope":16285,"src":"84717:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":16279,"name":"string","nodeType":"ElementaryTypeName","src":"84717:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16281,"length":{"hexValue":"32","id":16280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"84724:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"84717:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":16282,"nodeType":"ArrayTypeName","src":"84717:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"84716:25:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16291,"nodeType":"FunctionDefinition","src":"84823:42:14","nodes":[],"documentation":{"id":16286,"nodeType":"StructuredDocumentation","src":"84748:70:14","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"84832:5:14","parameters":{"id":16289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16288,"mutability":"mutable","name":"duration","nameLocation":"84846:8:14","nodeType":"VariableDeclaration","scope":16291,"src":"84838:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16287,"name":"uint256","nodeType":"ElementaryTypeName","src":"84838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84837:18:14"},"returnParameters":{"id":16290,"nodeType":"ParameterList","parameters":[],"src":"84864:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16301,"nodeType":"FunctionDefinition","src":"84950:95:14","nodes":[],"documentation":{"id":16292,"nodeType":"StructuredDocumentation","src":"84902:43:14","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"84959:13:14","parameters":{"id":16297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16294,"mutability":"mutable","name":"toml","nameLocation":"84989:4:14","nodeType":"VariableDeclaration","scope":16301,"src":"84973:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16293,"name":"string","nodeType":"ElementaryTypeName","src":"84973:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16296,"mutability":"mutable","name":"key","nameLocation":"85011:3:14","nodeType":"VariableDeclaration","scope":16301,"src":"84995:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16295,"name":"string","nodeType":"ElementaryTypeName","src":"84995:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84972:43:14"},"returnParameters":{"id":16300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16301,"src":"85039:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16298,"name":"bool","nodeType":"ElementaryTypeName","src":"85039:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85038:6:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16311,"nodeType":"FunctionDefinition","src":"85126:101:14","nodes":[],"documentation":{"id":16302,"nodeType":"StructuredDocumentation","src":"85051:70:14","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"85135:16:14","parameters":{"id":16307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16304,"mutability":"mutable","name":"toml","nameLocation":"85168:4:14","nodeType":"VariableDeclaration","scope":16311,"src":"85152:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16303,"name":"string","nodeType":"ElementaryTypeName","src":"85152:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16306,"mutability":"mutable","name":"key","nameLocation":"85190:3:14","nodeType":"VariableDeclaration","scope":16311,"src":"85174:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16305,"name":"string","nodeType":"ElementaryTypeName","src":"85174:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85151:43:14"},"returnParameters":{"id":16310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16311,"src":"85218:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16308,"name":"address","nodeType":"ElementaryTypeName","src":"85218:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85217:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16322,"nodeType":"FunctionDefinition","src":"85310:139:14","nodes":[],"documentation":{"id":16312,"nodeType":"StructuredDocumentation","src":"85233:72:14","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"85319:21:14","parameters":{"id":16317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16314,"mutability":"mutable","name":"toml","nameLocation":"85357:4:14","nodeType":"VariableDeclaration","scope":16322,"src":"85341:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16313,"name":"string","nodeType":"ElementaryTypeName","src":"85341:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16316,"mutability":"mutable","name":"key","nameLocation":"85379:3:14","nodeType":"VariableDeclaration","scope":16322,"src":"85363:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16315,"name":"string","nodeType":"ElementaryTypeName","src":"85363:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85340:43:14"},"returnParameters":{"id":16321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16322,"src":"85431:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16318,"name":"address","nodeType":"ElementaryTypeName","src":"85431:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16319,"nodeType":"ArrayTypeName","src":"85431:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"85430:18:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16332,"nodeType":"FunctionDefinition","src":"85527:95:14","nodes":[],"documentation":{"id":16323,"nodeType":"StructuredDocumentation","src":"85455:67:14","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"85536:13:14","parameters":{"id":16328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16325,"mutability":"mutable","name":"toml","nameLocation":"85566:4:14","nodeType":"VariableDeclaration","scope":16332,"src":"85550:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16324,"name":"string","nodeType":"ElementaryTypeName","src":"85550:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16327,"mutability":"mutable","name":"key","nameLocation":"85588:3:14","nodeType":"VariableDeclaration","scope":16332,"src":"85572:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16326,"name":"string","nodeType":"ElementaryTypeName","src":"85572:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85549:43:14"},"returnParameters":{"id":16331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16332,"src":"85616:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16329,"name":"bool","nodeType":"ElementaryTypeName","src":"85616:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85615:6:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16343,"nodeType":"FunctionDefinition","src":"85702:109:14","nodes":[],"documentation":{"id":16333,"nodeType":"StructuredDocumentation","src":"85628:69:14","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"85711:18:14","parameters":{"id":16338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16335,"mutability":"mutable","name":"toml","nameLocation":"85746:4:14","nodeType":"VariableDeclaration","scope":16343,"src":"85730:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16334,"name":"string","nodeType":"ElementaryTypeName","src":"85730:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16337,"mutability":"mutable","name":"key","nameLocation":"85768:3:14","nodeType":"VariableDeclaration","scope":16343,"src":"85752:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16336,"name":"string","nodeType":"ElementaryTypeName","src":"85752:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85729:43:14"},"returnParameters":{"id":16342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16343,"src":"85796:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16339,"name":"bool","nodeType":"ElementaryTypeName","src":"85796:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16340,"nodeType":"ArrayTypeName","src":"85796:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"85795:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16353,"nodeType":"FunctionDefinition","src":"85890:104:14","nodes":[],"documentation":{"id":16344,"nodeType":"StructuredDocumentation","src":"85817:68:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"85899:14:14","parameters":{"id":16349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16346,"mutability":"mutable","name":"toml","nameLocation":"85930:4:14","nodeType":"VariableDeclaration","scope":16353,"src":"85914:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16345,"name":"string","nodeType":"ElementaryTypeName","src":"85914:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16348,"mutability":"mutable","name":"key","nameLocation":"85952:3:14","nodeType":"VariableDeclaration","scope":16353,"src":"85936:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16347,"name":"string","nodeType":"ElementaryTypeName","src":"85936:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85913:43:14"},"returnParameters":{"id":16352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16353,"src":"85980:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16350,"name":"bytes","nodeType":"ElementaryTypeName","src":"85980:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85979:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16363,"nodeType":"FunctionDefinition","src":"86075:101:14","nodes":[],"documentation":{"id":16354,"nodeType":"StructuredDocumentation","src":"86000:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"86084:16:14","parameters":{"id":16359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16356,"mutability":"mutable","name":"toml","nameLocation":"86117:4:14","nodeType":"VariableDeclaration","scope":16363,"src":"86101:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16355,"name":"string","nodeType":"ElementaryTypeName","src":"86101:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16358,"mutability":"mutable","name":"key","nameLocation":"86139:3:14","nodeType":"VariableDeclaration","scope":16363,"src":"86123:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16357,"name":"string","nodeType":"ElementaryTypeName","src":"86123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86100:43:14"},"returnParameters":{"id":16362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16363,"src":"86167:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86167:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86166:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16374,"nodeType":"FunctionDefinition","src":"86259:139:14","nodes":[],"documentation":{"id":16364,"nodeType":"StructuredDocumentation","src":"86182:72:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"86268:21:14","parameters":{"id":16369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16366,"mutability":"mutable","name":"toml","nameLocation":"86306:4:14","nodeType":"VariableDeclaration","scope":16374,"src":"86290:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16365,"name":"string","nodeType":"ElementaryTypeName","src":"86290:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16368,"mutability":"mutable","name":"key","nameLocation":"86328:3:14","nodeType":"VariableDeclaration","scope":16374,"src":"86312:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16367,"name":"string","nodeType":"ElementaryTypeName","src":"86312:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86289:43:14"},"returnParameters":{"id":16373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16374,"src":"86380:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86380:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16371,"nodeType":"ArrayTypeName","src":"86380:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"86379:18:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16385,"nodeType":"FunctionDefinition","src":"86479:111:14","nodes":[],"documentation":{"id":16375,"nodeType":"StructuredDocumentation","src":"86404:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"86488:19:14","parameters":{"id":16380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16377,"mutability":"mutable","name":"toml","nameLocation":"86524:4:14","nodeType":"VariableDeclaration","scope":16385,"src":"86508:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16376,"name":"string","nodeType":"ElementaryTypeName","src":"86508:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16379,"mutability":"mutable","name":"key","nameLocation":"86546:3:14","nodeType":"VariableDeclaration","scope":16385,"src":"86530:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16378,"name":"string","nodeType":"ElementaryTypeName","src":"86530:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86507:43:14"},"returnParameters":{"id":16384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16385,"src":"86574:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16381,"name":"bytes","nodeType":"ElementaryTypeName","src":"86574:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16382,"nodeType":"ArrayTypeName","src":"86574:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"86573:16:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16395,"nodeType":"FunctionDefinition","src":"86670:96:14","nodes":[],"documentation":{"id":16386,"nodeType":"StructuredDocumentation","src":"86596:69:14","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"86679:12:14","parameters":{"id":16391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16388,"mutability":"mutable","name":"toml","nameLocation":"86708:4:14","nodeType":"VariableDeclaration","scope":16395,"src":"86692:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16387,"name":"string","nodeType":"ElementaryTypeName","src":"86692:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16390,"mutability":"mutable","name":"key","nameLocation":"86730:3:14","nodeType":"VariableDeclaration","scope":16395,"src":"86714:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16389,"name":"string","nodeType":"ElementaryTypeName","src":"86714:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86691:43:14"},"returnParameters":{"id":16394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16395,"src":"86758:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16392,"name":"int256","nodeType":"ElementaryTypeName","src":"86758:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"86757:8:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16406,"nodeType":"FunctionDefinition","src":"86848:110:14","nodes":[],"documentation":{"id":16396,"nodeType":"StructuredDocumentation","src":"86772:71:14","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"86857:17:14","parameters":{"id":16401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16398,"mutability":"mutable","name":"toml","nameLocation":"86891:4:14","nodeType":"VariableDeclaration","scope":16406,"src":"86875:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16397,"name":"string","nodeType":"ElementaryTypeName","src":"86875:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16400,"mutability":"mutable","name":"key","nameLocation":"86913:3:14","nodeType":"VariableDeclaration","scope":16406,"src":"86897:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16399,"name":"string","nodeType":"ElementaryTypeName","src":"86897:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86874:43:14"},"returnParameters":{"id":16405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16406,"src":"86941:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16402,"name":"int256","nodeType":"ElementaryTypeName","src":"86941:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16403,"nodeType":"ArrayTypeName","src":"86941:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"86940:17:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16417,"nodeType":"FunctionDefinition","src":"87022:111:14","nodes":[],"documentation":{"id":16407,"nodeType":"StructuredDocumentation","src":"86964:53:14","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"87031:13:14","parameters":{"id":16412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16409,"mutability":"mutable","name":"toml","nameLocation":"87061:4:14","nodeType":"VariableDeclaration","scope":16417,"src":"87045:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16408,"name":"string","nodeType":"ElementaryTypeName","src":"87045:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16411,"mutability":"mutable","name":"key","nameLocation":"87083:3:14","nodeType":"VariableDeclaration","scope":16417,"src":"87067:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16410,"name":"string","nodeType":"ElementaryTypeName","src":"87067:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87044:43:14"},"returnParameters":{"id":16416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16415,"mutability":"mutable","name":"keys","nameLocation":"87127:4:14","nodeType":"VariableDeclaration","scope":16417,"src":"87111:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16413,"name":"string","nodeType":"ElementaryTypeName","src":"87111:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16414,"nodeType":"ArrayTypeName","src":"87111:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"87110:22:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16427,"nodeType":"FunctionDefinition","src":"87213:106:14","nodes":[],"documentation":{"id":16418,"nodeType":"StructuredDocumentation","src":"87139:69:14","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"87222:15:14","parameters":{"id":16423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16420,"mutability":"mutable","name":"toml","nameLocation":"87254:4:14","nodeType":"VariableDeclaration","scope":16427,"src":"87238:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16419,"name":"string","nodeType":"ElementaryTypeName","src":"87238:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16422,"mutability":"mutable","name":"key","nameLocation":"87276:3:14","nodeType":"VariableDeclaration","scope":16427,"src":"87260:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16421,"name":"string","nodeType":"ElementaryTypeName","src":"87260:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87237:43:14"},"returnParameters":{"id":16426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16427,"src":"87304:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16424,"name":"string","nodeType":"ElementaryTypeName","src":"87304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87303:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16438,"nodeType":"FunctionDefinition","src":"87401:113:14","nodes":[],"documentation":{"id":16428,"nodeType":"StructuredDocumentation","src":"87325:71:14","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"87410:20:14","parameters":{"id":16433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16430,"mutability":"mutable","name":"toml","nameLocation":"87447:4:14","nodeType":"VariableDeclaration","scope":16438,"src":"87431:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16429,"name":"string","nodeType":"ElementaryTypeName","src":"87431:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16432,"mutability":"mutable","name":"key","nameLocation":"87469:3:14","nodeType":"VariableDeclaration","scope":16438,"src":"87453:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16431,"name":"string","nodeType":"ElementaryTypeName","src":"87453:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87430:43:14"},"returnParameters":{"id":16437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16438,"src":"87497:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16434,"name":"string","nodeType":"ElementaryTypeName","src":"87497:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16435,"nodeType":"ArrayTypeName","src":"87497:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"87496:17:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16450,"nodeType":"FunctionDefinition","src":"87631:165:14","nodes":[],"documentation":{"id":16439,"nodeType":"StructuredDocumentation","src":"87520:106:14","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"87640:18:14","parameters":{"id":16446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16441,"mutability":"mutable","name":"toml","nameLocation":"87675:4:14","nodeType":"VariableDeclaration","scope":16450,"src":"87659:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16440,"name":"string","nodeType":"ElementaryTypeName","src":"87659:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16443,"mutability":"mutable","name":"key","nameLocation":"87697:3:14","nodeType":"VariableDeclaration","scope":16450,"src":"87681:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16442,"name":"string","nodeType":"ElementaryTypeName","src":"87681:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16445,"mutability":"mutable","name":"typeDescription","nameLocation":"87718:15:14","nodeType":"VariableDeclaration","scope":16450,"src":"87702:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16444,"name":"string","nodeType":"ElementaryTypeName","src":"87702:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87658:76:14"},"returnParameters":{"id":16449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16450,"src":"87782:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16447,"name":"bytes","nodeType":"ElementaryTypeName","src":"87782:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87781:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16460,"nodeType":"FunctionDefinition","src":"87898:139:14","nodes":[],"documentation":{"id":16451,"nodeType":"StructuredDocumentation","src":"87802:91:14","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"87907:13:14","parameters":{"id":16456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16453,"mutability":"mutable","name":"toml","nameLocation":"87937:4:14","nodeType":"VariableDeclaration","scope":16460,"src":"87921:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16452,"name":"string","nodeType":"ElementaryTypeName","src":"87921:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16455,"mutability":"mutable","name":"typeDescription","nameLocation":"87959:15:14","nodeType":"VariableDeclaration","scope":16460,"src":"87943:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16454,"name":"string","nodeType":"ElementaryTypeName","src":"87943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87920:55:14"},"returnParameters":{"id":16459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16460,"src":"88023:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16457,"name":"bytes","nodeType":"ElementaryTypeName","src":"88023:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88022:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16472,"nodeType":"FunctionDefinition","src":"88148:160:14","nodes":[],"documentation":{"id":16461,"nodeType":"StructuredDocumentation","src":"88043:100:14","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"88157:13:14","parameters":{"id":16468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16463,"mutability":"mutable","name":"toml","nameLocation":"88187:4:14","nodeType":"VariableDeclaration","scope":16472,"src":"88171:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16462,"name":"string","nodeType":"ElementaryTypeName","src":"88171:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16465,"mutability":"mutable","name":"key","nameLocation":"88209:3:14","nodeType":"VariableDeclaration","scope":16472,"src":"88193:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16464,"name":"string","nodeType":"ElementaryTypeName","src":"88193:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16467,"mutability":"mutable","name":"typeDescription","nameLocation":"88230:15:14","nodeType":"VariableDeclaration","scope":16472,"src":"88214:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16466,"name":"string","nodeType":"ElementaryTypeName","src":"88214:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88170:76:14"},"returnParameters":{"id":16471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16472,"src":"88294:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16469,"name":"bytes","nodeType":"ElementaryTypeName","src":"88294:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88293:14:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16482,"nodeType":"FunctionDefinition","src":"88389:98:14","nodes":[],"documentation":{"id":16473,"nodeType":"StructuredDocumentation","src":"88314:70:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"88398:13:14","parameters":{"id":16478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16475,"mutability":"mutable","name":"toml","nameLocation":"88428:4:14","nodeType":"VariableDeclaration","scope":16482,"src":"88412:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16474,"name":"string","nodeType":"ElementaryTypeName","src":"88412:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16477,"mutability":"mutable","name":"key","nameLocation":"88450:3:14","nodeType":"VariableDeclaration","scope":16482,"src":"88434:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16476,"name":"string","nodeType":"ElementaryTypeName","src":"88434:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88411:43:14"},"returnParameters":{"id":16481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16482,"src":"88478:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16479,"name":"uint256","nodeType":"ElementaryTypeName","src":"88478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88477:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16493,"nodeType":"FunctionDefinition","src":"88570:112:14","nodes":[],"documentation":{"id":16483,"nodeType":"StructuredDocumentation","src":"88493:72:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"88579:18:14","parameters":{"id":16488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16485,"mutability":"mutable","name":"toml","nameLocation":"88614:4:14","nodeType":"VariableDeclaration","scope":16493,"src":"88598:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16484,"name":"string","nodeType":"ElementaryTypeName","src":"88598:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16487,"mutability":"mutable","name":"key","nameLocation":"88636:3:14","nodeType":"VariableDeclaration","scope":16493,"src":"88620:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16486,"name":"string","nodeType":"ElementaryTypeName","src":"88620:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88597:43:14"},"returnParameters":{"id":16492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16493,"src":"88664:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16489,"name":"uint256","nodeType":"ElementaryTypeName","src":"88664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16490,"nodeType":"ArrayTypeName","src":"88664:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"88663:18:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16501,"nodeType":"FunctionDefinition","src":"88722:93:14","nodes":[],"documentation":{"id":16494,"nodeType":"StructuredDocumentation","src":"88688:29:14","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"88731:9:14","parameters":{"id":16497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16496,"mutability":"mutable","name":"toml","nameLocation":"88757:4:14","nodeType":"VariableDeclaration","scope":16501,"src":"88741:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16495,"name":"string","nodeType":"ElementaryTypeName","src":"88741:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88740:22:14"},"returnParameters":{"id":16500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16499,"mutability":"mutable","name":"abiEncodedData","nameLocation":"88799:14:14","nodeType":"VariableDeclaration","scope":16501,"src":"88786:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16498,"name":"bytes","nodeType":"ElementaryTypeName","src":"88786:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88785:29:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16511,"nodeType":"FunctionDefinition","src":"88864:114:14","nodes":[],"documentation":{"id":16502,"nodeType":"StructuredDocumentation","src":"88821:38:14","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"88873:9:14","parameters":{"id":16507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16504,"mutability":"mutable","name":"toml","nameLocation":"88899:4:14","nodeType":"VariableDeclaration","scope":16511,"src":"88883:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16503,"name":"string","nodeType":"ElementaryTypeName","src":"88883:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16506,"mutability":"mutable","name":"key","nameLocation":"88921:3:14","nodeType":"VariableDeclaration","scope":16511,"src":"88905:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16505,"name":"string","nodeType":"ElementaryTypeName","src":"88905:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88882:43:14"},"returnParameters":{"id":16510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16509,"mutability":"mutable","name":"abiEncodedData","nameLocation":"88962:14:14","nodeType":"VariableDeclaration","scope":16511,"src":"88949:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16508,"name":"bytes","nodeType":"ElementaryTypeName","src":"88949:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88948:29:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16519,"nodeType":"FunctionDefinition","src":"89071:72:14","nodes":[],"documentation":{"id":16512,"nodeType":"StructuredDocumentation","src":"88984:82:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"89080:9:14","parameters":{"id":16517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16514,"mutability":"mutable","name":"json","nameLocation":"89106:4:14","nodeType":"VariableDeclaration","scope":16519,"src":"89090:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16513,"name":"string","nodeType":"ElementaryTypeName","src":"89090:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16516,"mutability":"mutable","name":"path","nameLocation":"89128:4:14","nodeType":"VariableDeclaration","scope":16519,"src":"89112:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16515,"name":"string","nodeType":"ElementaryTypeName","src":"89112:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89089:44:14"},"returnParameters":{"id":16518,"nodeType":"ParameterList","parameters":[],"src":"89142:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16529,"nodeType":"FunctionDefinition","src":"89412:98:14","nodes":[],"documentation":{"id":16520,"nodeType":"StructuredDocumentation","src":"89149:258:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"89421:9:14","parameters":{"id":16527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16522,"mutability":"mutable","name":"json","nameLocation":"89447:4:14","nodeType":"VariableDeclaration","scope":16529,"src":"89431:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16521,"name":"string","nodeType":"ElementaryTypeName","src":"89431:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16524,"mutability":"mutable","name":"path","nameLocation":"89469:4:14","nodeType":"VariableDeclaration","scope":16529,"src":"89453:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16523,"name":"string","nodeType":"ElementaryTypeName","src":"89453:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16526,"mutability":"mutable","name":"valueKey","nameLocation":"89491:8:14","nodeType":"VariableDeclaration","scope":16529,"src":"89475:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16525,"name":"string","nodeType":"ElementaryTypeName","src":"89475:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89430:70:14"},"returnParameters":{"id":16528,"nodeType":"ParameterList","parameters":[],"src":"89509:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16541,"nodeType":"FunctionDefinition","src":"89649:141:14","nodes":[],"documentation":{"id":16530,"nodeType":"StructuredDocumentation","src":"89552:92:14","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"89658:21:14","parameters":{"id":16537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16532,"mutability":"mutable","name":"salt","nameLocation":"89688:4:14","nodeType":"VariableDeclaration","scope":16541,"src":"89680:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89680:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16534,"mutability":"mutable","name":"initCodeHash","nameLocation":"89702:12:14","nodeType":"VariableDeclaration","scope":16541,"src":"89694:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89694:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16536,"mutability":"mutable","name":"deployer","nameLocation":"89724:8:14","nodeType":"VariableDeclaration","scope":16541,"src":"89716:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16535,"name":"address","nodeType":"ElementaryTypeName","src":"89716:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89679:54:14"},"returnParameters":{"id":16540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16541,"src":"89781:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16538,"name":"address","nodeType":"ElementaryTypeName","src":"89781:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89780:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16551,"nodeType":"FunctionDefinition","src":"89895:99:14","nodes":[],"documentation":{"id":16542,"nodeType":"StructuredDocumentation","src":"89796:94:14","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"89904:21:14","parameters":{"id":16547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16544,"mutability":"mutable","name":"salt","nameLocation":"89934:4:14","nodeType":"VariableDeclaration","scope":16551,"src":"89926:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89926:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16546,"mutability":"mutable","name":"initCodeHash","nameLocation":"89948:12:14","nodeType":"VariableDeclaration","scope":16551,"src":"89940:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89940:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89925:36:14"},"returnParameters":{"id":16550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16551,"src":"89985:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16548,"name":"address","nodeType":"ElementaryTypeName","src":"89985:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89984:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16561,"nodeType":"FunctionDefinition","src":"90099:95:14","nodes":[],"documentation":{"id":16552,"nodeType":"StructuredDocumentation","src":"90000:94:14","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"90108:20:14","parameters":{"id":16557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16554,"mutability":"mutable","name":"deployer","nameLocation":"90137:8:14","nodeType":"VariableDeclaration","scope":16561,"src":"90129:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16553,"name":"address","nodeType":"ElementaryTypeName","src":"90129:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16556,"mutability":"mutable","name":"nonce","nameLocation":"90155:5:14","nodeType":"VariableDeclaration","scope":16561,"src":"90147:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16555,"name":"uint256","nodeType":"ElementaryTypeName","src":"90147:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90128:33:14"},"returnParameters":{"id":16560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16561,"src":"90185:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16558,"name":"address","nodeType":"ElementaryTypeName","src":"90185:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90184:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16569,"nodeType":"FunctionDefinition","src":"90287:56:14","nodes":[],"documentation":{"id":16562,"nodeType":"StructuredDocumentation","src":"90200:82:14","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"90296:11:14","parameters":{"id":16567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16564,"mutability":"mutable","name":"from","nameLocation":"90316:4:14","nodeType":"VariableDeclaration","scope":16569,"src":"90308:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16563,"name":"address","nodeType":"ElementaryTypeName","src":"90308:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16566,"mutability":"mutable","name":"to","nameLocation":"90330:2:14","nodeType":"VariableDeclaration","scope":16569,"src":"90322:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16565,"name":"address","nodeType":"ElementaryTypeName","src":"90322:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90307:26:14"},"returnParameters":{"id":16568,"nodeType":"ParameterList","parameters":[],"src":"90342:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16577,"nodeType":"FunctionDefinition","src":"90399:75:14","nodes":[],"documentation":{"id":16570,"nodeType":"StructuredDocumentation","src":"90349:45:14","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"90408:11:14","parameters":{"id":16573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16572,"mutability":"mutable","name":"name","nameLocation":"90436:4:14","nodeType":"VariableDeclaration","scope":16577,"src":"90420:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16571,"name":"string","nodeType":"ElementaryTypeName","src":"90420:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90419:22:14"},"returnParameters":{"id":16576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16577,"src":"90465:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90465:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90464:9:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16585,"nodeType":"FunctionDefinition","src":"90530:86:14","nodes":[],"documentation":{"id":16578,"nodeType":"StructuredDocumentation","src":"90480:45:14","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"90539:8:14","parameters":{"id":16581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16580,"mutability":"mutable","name":"account","nameLocation":"90556:7:14","nodeType":"VariableDeclaration","scope":16585,"src":"90548:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16579,"name":"address","nodeType":"ElementaryTypeName","src":"90548:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90547:17:14"},"returnParameters":{"id":16584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16583,"mutability":"mutable","name":"currentLabel","nameLocation":"90602:12:14","nodeType":"VariableDeclaration","scope":16585,"src":"90588:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16582,"name":"string","nodeType":"ElementaryTypeName","src":"90588:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90587:28:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16593,"nodeType":"FunctionDefinition","src":"90664:67:14","nodes":[],"documentation":{"id":16586,"nodeType":"StructuredDocumentation","src":"90622:37:14","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"90673:5:14","parameters":{"id":16591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16588,"mutability":"mutable","name":"account","nameLocation":"90687:7:14","nodeType":"VariableDeclaration","scope":16593,"src":"90679:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16587,"name":"address","nodeType":"ElementaryTypeName","src":"90679:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16590,"mutability":"mutable","name":"newLabel","nameLocation":"90712:8:14","nodeType":"VariableDeclaration","scope":16593,"src":"90696:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16589,"name":"string","nodeType":"ElementaryTypeName","src":"90696:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90678:43:14"},"returnParameters":{"id":16592,"nodeType":"ParameterList","parameters":[],"src":"90730:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16597,"nodeType":"FunctionDefinition","src":"90886:38:14","nodes":[],"documentation":{"id":16594,"nodeType":"StructuredDocumentation","src":"90737:144:14","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"90895:12:14","parameters":{"id":16595,"nodeType":"ParameterList","parameters":[],"src":"90907:2:14"},"returnParameters":{"id":16596,"nodeType":"ParameterList","parameters":[],"src":"90923:0:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16603,"nodeType":"FunctionDefinition","src":"90966:52:14","nodes":[],"documentation":{"id":16598,"nodeType":"StructuredDocumentation","src":"90930:31:14","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"90975:13:14","parameters":{"id":16599,"nodeType":"ParameterList","parameters":[],"src":"90988:2:14"},"returnParameters":{"id":16602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16603,"src":"91009:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16600,"name":"address","nodeType":"ElementaryTypeName","src":"91009:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91008:9:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16609,"nodeType":"FunctionDefinition","src":"91057:51:14","nodes":[],"documentation":{"id":16604,"nodeType":"StructuredDocumentation","src":"91024:28:14","text":"Returns a random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"91066:10:14","parameters":{"id":16605,"nodeType":"ParameterList","parameters":[],"src":"91076:2:14"},"returnParameters":{"id":16608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16609,"src":"91102:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16606,"name":"bool","nodeType":"ElementaryTypeName","src":"91102:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91101:6:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16617,"nodeType":"FunctionDefinition","src":"91177:71:14","nodes":[],"documentation":{"id":16610,"nodeType":"StructuredDocumentation","src":"91114:58:14","text":"Returns a random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"91186:11:14","parameters":{"id":16613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16612,"mutability":"mutable","name":"len","nameLocation":"91206:3:14","nodeType":"VariableDeclaration","scope":16617,"src":"91198:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16611,"name":"uint256","nodeType":"ElementaryTypeName","src":"91198:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91197:13:14"},"returnParameters":{"id":16616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16617,"src":"91234:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16614,"name":"bytes","nodeType":"ElementaryTypeName","src":"91234:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"91233:14:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16623,"nodeType":"FunctionDefinition","src":"91314:55:14","nodes":[],"documentation":{"id":16618,"nodeType":"StructuredDocumentation","src":"91254:55:14","text":"Returns a random fixed-size byte array of length 4."},"functionSelector":"9b7cd579","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes4","nameLocation":"91323:12:14","parameters":{"id":16619,"nodeType":"ParameterList","parameters":[],"src":"91335:2:14"},"returnParameters":{"id":16622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16623,"src":"91361:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16620,"name":"bytes4","nodeType":"ElementaryTypeName","src":"91361:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"91360:8:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16629,"nodeType":"FunctionDefinition","src":"91435:55:14","nodes":[],"documentation":{"id":16624,"nodeType":"StructuredDocumentation","src":"91375:55:14","text":"Returns a random fixed-size byte array of length 8."},"functionSelector":"0497b0a5","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes8","nameLocation":"91444:12:14","parameters":{"id":16625,"nodeType":"ParameterList","parameters":[],"src":"91456:2:14"},"returnParameters":{"id":16628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16629,"src":"91482:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":16626,"name":"bytes8","nodeType":"ElementaryTypeName","src":"91482:6:14","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"91481:8:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16635,"nodeType":"FunctionDefinition","src":"91537:52:14","nodes":[],"documentation":{"id":16630,"nodeType":"StructuredDocumentation","src":"91496:36:14","text":"Returns a random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"91546:9:14","parameters":{"id":16631,"nodeType":"ParameterList","parameters":[],"src":"91555:2:14"},"returnParameters":{"id":16634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16635,"src":"91581:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16632,"name":"int256","nodeType":"ElementaryTypeName","src":"91581:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"91580:8:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16643,"nodeType":"FunctionDefinition","src":"91650:64:14","nodes":[],"documentation":{"id":16636,"nodeType":"StructuredDocumentation","src":"91595:50:14","text":"Returns a random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"91659:9:14","parameters":{"id":16639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16638,"mutability":"mutable","name":"bits","nameLocation":"91677:4:14","nodeType":"VariableDeclaration","scope":16643,"src":"91669:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16637,"name":"uint256","nodeType":"ElementaryTypeName","src":"91669:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91668:14:14"},"returnParameters":{"id":16642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16643,"src":"91706:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16640,"name":"int256","nodeType":"ElementaryTypeName","src":"91706:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"91705:8:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16649,"nodeType":"FunctionDefinition","src":"91760:49:14","nodes":[],"documentation":{"id":16644,"nodeType":"StructuredDocumentation","src":"91720:35:14","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"91769:10:14","parameters":{"id":16645,"nodeType":"ParameterList","parameters":[],"src":"91779:2:14"},"returnParameters":{"id":16648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16649,"src":"91800:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16646,"name":"uint256","nodeType":"ElementaryTypeName","src":"91800:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91799:9:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16659,"nodeType":"FunctionDefinition","src":"91893:73:14","nodes":[],"documentation":{"id":16650,"nodeType":"StructuredDocumentation","src":"91815:73:14","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"91902:10:14","parameters":{"id":16655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16652,"mutability":"mutable","name":"min","nameLocation":"91921:3:14","nodeType":"VariableDeclaration","scope":16659,"src":"91913:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16651,"name":"uint256","nodeType":"ElementaryTypeName","src":"91913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16654,"mutability":"mutable","name":"max","nameLocation":"91934:3:14","nodeType":"VariableDeclaration","scope":16659,"src":"91926:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16653,"name":"uint256","nodeType":"ElementaryTypeName","src":"91926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91912:26:14"},"returnParameters":{"id":16658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16659,"src":"91957:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16656,"name":"uint256","nodeType":"ElementaryTypeName","src":"91957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91956:9:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16667,"nodeType":"FunctionDefinition","src":"92028:66:14","nodes":[],"documentation":{"id":16660,"nodeType":"StructuredDocumentation","src":"91972:51:14","text":"Returns a random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"92037:10:14","parameters":{"id":16663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16662,"mutability":"mutable","name":"bits","nameLocation":"92056:4:14","nodeType":"VariableDeclaration","scope":16667,"src":"92048:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16661,"name":"uint256","nodeType":"ElementaryTypeName","src":"92048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92047:14:14"},"returnParameters":{"id":16666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16667,"src":"92085:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16664,"name":"uint256","nodeType":"ElementaryTypeName","src":"92085:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92084:9:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16671,"nodeType":"FunctionDefinition","src":"92144:39:14","nodes":[],"documentation":{"id":16668,"nodeType":"StructuredDocumentation","src":"92100:39:14","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"92153:13:14","parameters":{"id":16669,"nodeType":"ParameterList","parameters":[],"src":"92166:2:14"},"returnParameters":{"id":16670,"nodeType":"ParameterList","parameters":[],"src":"92182:0:14"},"scope":16710,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16677,"nodeType":"FunctionDefinition","src":"92266:54:14","nodes":[],"documentation":{"id":16672,"nodeType":"StructuredDocumentation","src":"92189:72:14","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"92275:19:14","parameters":{"id":16675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16674,"mutability":"mutable","name":"target","nameLocation":"92303:6:14","nodeType":"VariableDeclaration","scope":16677,"src":"92295:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16673,"name":"address","nodeType":"ElementaryTypeName","src":"92295:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92294:16:14"},"returnParameters":{"id":16676,"nodeType":"ParameterList","parameters":[],"src":"92319:0:14"},"scope":16710,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16685,"nodeType":"FunctionDefinition","src":"92381:80:14","nodes":[],"documentation":{"id":16678,"nodeType":"StructuredDocumentation","src":"92326:50:14","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"92390:11:14","parameters":{"id":16681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16680,"mutability":"mutable","name":"data","nameLocation":"92417:4:14","nodeType":"VariableDeclaration","scope":16685,"src":"92402:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16679,"name":"bytes","nodeType":"ElementaryTypeName","src":"92402:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92401:21:14"},"returnParameters":{"id":16684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16685,"src":"92446:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16682,"name":"string","nodeType":"ElementaryTypeName","src":"92446:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92445:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16693,"nodeType":"FunctionDefinition","src":"92523:81:14","nodes":[],"documentation":{"id":16686,"nodeType":"StructuredDocumentation","src":"92467:51:14","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"92532:11:14","parameters":{"id":16689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16688,"mutability":"mutable","name":"data","nameLocation":"92560:4:14","nodeType":"VariableDeclaration","scope":16693,"src":"92544:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16687,"name":"string","nodeType":"ElementaryTypeName","src":"92544:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92543:22:14"},"returnParameters":{"id":16692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16693,"src":"92589:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16690,"name":"string","nodeType":"ElementaryTypeName","src":"92589:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92588:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16701,"nodeType":"FunctionDefinition","src":"92662:77:14","nodes":[],"documentation":{"id":16694,"nodeType":"StructuredDocumentation","src":"92610:47:14","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"92671:8:14","parameters":{"id":16697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16696,"mutability":"mutable","name":"data","nameLocation":"92695:4:14","nodeType":"VariableDeclaration","scope":16701,"src":"92680:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16695,"name":"bytes","nodeType":"ElementaryTypeName","src":"92680:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92679:21:14"},"returnParameters":{"id":16700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16701,"src":"92724:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16698,"name":"string","nodeType":"ElementaryTypeName","src":"92724:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92723:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16709,"nodeType":"FunctionDefinition","src":"92798:78:14","nodes":[],"documentation":{"id":16702,"nodeType":"StructuredDocumentation","src":"92745:48:14","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"92807:8:14","parameters":{"id":16705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16704,"mutability":"mutable","name":"data","nameLocation":"92832:4:14","nodeType":"VariableDeclaration","scope":16709,"src":"92816:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16703,"name":"string","nodeType":"ElementaryTypeName","src":"92816:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92815:22:14"},"returnParameters":{"id":16708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16709,"src":"92861:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16706,"name":"string","nodeType":"ElementaryTypeName","src":"92861:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92860:15:14"},"scope":16710,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12951,"nodeType":"StructuredDocumentation","src":"184:225:14","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[16710],"name":"VmSafe","nameLocation":"419:6:14","scope":17728,"usedErrors":[],"usedEvents":[]},{"id":17727,"nodeType":"ContractDefinition","src":"93051:24974:14","nodes":[{"id":16719,"nodeType":"FunctionDefinition","src":"93211:61:14","nodes":[],"documentation":{"id":16714,"nodeType":"StructuredDocumentation","src":"93110:96:14","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"93220:10:14","parameters":{"id":16715,"nodeType":"ParameterList","parameters":[],"src":"93230:2:14"},"returnParameters":{"id":16718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16717,"mutability":"mutable","name":"forkId","nameLocation":"93264:6:14","nodeType":"VariableDeclaration","scope":16719,"src":"93256:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16716,"name":"uint256","nodeType":"ElementaryTypeName","src":"93256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93255:16:14"},"scope":17727,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16725,"nodeType":"FunctionDefinition","src":"93356:51:14","nodes":[],"documentation":{"id":16720,"nodeType":"StructuredDocumentation","src":"93278:73:14","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"93365:15:14","parameters":{"id":16723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16722,"mutability":"mutable","name":"account","nameLocation":"93389:7:14","nodeType":"VariableDeclaration","scope":16725,"src":"93381:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16721,"name":"address","nodeType":"ElementaryTypeName","src":"93381:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93380:17:14"},"returnParameters":{"id":16724,"nodeType":"ParameterList","parameters":[],"src":"93406:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16731,"nodeType":"FunctionDefinition","src":"93446:54:14","nodes":[],"documentation":{"id":16726,"nodeType":"StructuredDocumentation","src":"93413:28:14","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"93455:11:14","parameters":{"id":16729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16728,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"93475:14:14","nodeType":"VariableDeclaration","scope":16731,"src":"93467:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16727,"name":"uint256","nodeType":"ElementaryTypeName","src":"93467:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93466:24:14"},"returnParameters":{"id":16730,"nodeType":"ParameterList","parameters":[],"src":"93499:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16738,"nodeType":"FunctionDefinition","src":"93667:56:14","nodes":[],"documentation":{"id":16732,"nodeType":"StructuredDocumentation","src":"93506:156:14","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"93676:10:14","parameters":{"id":16736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16735,"mutability":"mutable","name":"hashes","nameLocation":"93706:6:14","nodeType":"VariableDeclaration","scope":16738,"src":"93687:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93687:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16734,"nodeType":"ArrayTypeName","src":"93687:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"93686:27:14"},"returnParameters":{"id":16737,"nodeType":"ParameterList","parameters":[],"src":"93722:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16744,"nodeType":"FunctionDefinition","src":"93759:46:14","nodes":[],"documentation":{"id":16739,"nodeType":"StructuredDocumentation","src":"93729:25:14","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"93768:7:14","parameters":{"id":16742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16741,"mutability":"mutable","name":"newChainId","nameLocation":"93784:10:14","nodeType":"VariableDeclaration","scope":16744,"src":"93776:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16740,"name":"uint256","nodeType":"ElementaryTypeName","src":"93776:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93775:20:14"},"returnParameters":{"id":16743,"nodeType":"ParameterList","parameters":[],"src":"93804:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16748,"nodeType":"FunctionDefinition","src":"93844:37:14","nodes":[],"documentation":{"id":16745,"nodeType":"StructuredDocumentation","src":"93811:28:14","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"93853:16:14","parameters":{"id":16746,"nodeType":"ParameterList","parameters":[],"src":"93869:2:14"},"returnParameters":{"id":16747,"nodeType":"ParameterList","parameters":[],"src":"93880:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16756,"nodeType":"FunctionDefinition","src":"94003:63:14","nodes":[],"documentation":{"id":16749,"nodeType":"StructuredDocumentation","src":"93887:111:14","text":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"functionSelector":"533d61c9","implemented":false,"kind":"function","modifiers":[],"name":"cloneAccount","nameLocation":"94012:12:14","parameters":{"id":16754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16751,"mutability":"mutable","name":"source","nameLocation":"94033:6:14","nodeType":"VariableDeclaration","scope":16756,"src":"94025:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16750,"name":"address","nodeType":"ElementaryTypeName","src":"94025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16753,"mutability":"mutable","name":"target","nameLocation":"94049:6:14","nodeType":"VariableDeclaration","scope":16756,"src":"94041:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16752,"name":"address","nodeType":"ElementaryTypeName","src":"94041:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94024:32:14"},"returnParameters":{"id":16755,"nodeType":"ParameterList","parameters":[],"src":"94065:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16762,"nodeType":"FunctionDefinition","src":"94103:48:14","nodes":[],"documentation":{"id":16757,"nodeType":"StructuredDocumentation","src":"94072:26:14","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"94112:8:14","parameters":{"id":16760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16759,"mutability":"mutable","name":"newCoinbase","nameLocation":"94129:11:14","nodeType":"VariableDeclaration","scope":16762,"src":"94121:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16758,"name":"address","nodeType":"ElementaryTypeName","src":"94121:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94120:21:14"},"returnParameters":{"id":16761,"nodeType":"ParameterList","parameters":[],"src":"94150:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16770,"nodeType":"FunctionDefinition","src":"94271:82:14","nodes":[],"documentation":{"id":16763,"nodeType":"StructuredDocumentation","src":"94157:109:14","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"94280:10:14","parameters":{"id":16766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16765,"mutability":"mutable","name":"urlOrAlias","nameLocation":"94307:10:14","nodeType":"VariableDeclaration","scope":16770,"src":"94291:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16764,"name":"string","nodeType":"ElementaryTypeName","src":"94291:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94290:28:14"},"returnParameters":{"id":16769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16768,"mutability":"mutable","name":"forkId","nameLocation":"94345:6:14","nodeType":"VariableDeclaration","scope":16770,"src":"94337:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16767,"name":"uint256","nodeType":"ElementaryTypeName","src":"94337:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94336:16:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16780,"nodeType":"FunctionDefinition","src":"94460:103:14","nodes":[],"documentation":{"id":16771,"nodeType":"StructuredDocumentation","src":"94359:96:14","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"94469:10:14","parameters":{"id":16776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16773,"mutability":"mutable","name":"urlOrAlias","nameLocation":"94496:10:14","nodeType":"VariableDeclaration","scope":16780,"src":"94480:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16772,"name":"string","nodeType":"ElementaryTypeName","src":"94480:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16775,"mutability":"mutable","name":"blockNumber","nameLocation":"94516:11:14","nodeType":"VariableDeclaration","scope":16780,"src":"94508:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16774,"name":"uint256","nodeType":"ElementaryTypeName","src":"94508:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94479:49:14"},"returnParameters":{"id":16779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16778,"mutability":"mutable","name":"forkId","nameLocation":"94555:6:14","nodeType":"VariableDeclaration","scope":16780,"src":"94547:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16777,"name":"uint256","nodeType":"ElementaryTypeName","src":"94547:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94546:16:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16790,"nodeType":"FunctionDefinition","src":"94788:98:14","nodes":[],"documentation":{"id":16781,"nodeType":"StructuredDocumentation","src":"94569:214:14","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"94797:10:14","parameters":{"id":16786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16783,"mutability":"mutable","name":"urlOrAlias","nameLocation":"94824:10:14","nodeType":"VariableDeclaration","scope":16790,"src":"94808:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16782,"name":"string","nodeType":"ElementaryTypeName","src":"94808:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16785,"mutability":"mutable","name":"txHash","nameLocation":"94844:6:14","nodeType":"VariableDeclaration","scope":16790,"src":"94836:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94836:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"94807:44:14"},"returnParameters":{"id":16789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16788,"mutability":"mutable","name":"forkId","nameLocation":"94878:6:14","nodeType":"VariableDeclaration","scope":16790,"src":"94870:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16787,"name":"uint256","nodeType":"ElementaryTypeName","src":"94870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94869:16:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16798,"nodeType":"FunctionDefinition","src":"95021:88:14","nodes":[],"documentation":{"id":16791,"nodeType":"StructuredDocumentation","src":"94892:124:14","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"95030:16:14","parameters":{"id":16794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16793,"mutability":"mutable","name":"urlOrAlias","nameLocation":"95063:10:14","nodeType":"VariableDeclaration","scope":16798,"src":"95047:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16792,"name":"string","nodeType":"ElementaryTypeName","src":"95047:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95046:28:14"},"returnParameters":{"id":16797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16796,"mutability":"mutable","name":"forkId","nameLocation":"95101:6:14","nodeType":"VariableDeclaration","scope":16798,"src":"95093:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16795,"name":"uint256","nodeType":"ElementaryTypeName","src":"95093:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95092:16:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16808,"nodeType":"FunctionDefinition","src":"95233:109:14","nodes":[],"documentation":{"id":16799,"nodeType":"StructuredDocumentation","src":"95115:113:14","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"95242:16:14","parameters":{"id":16804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16801,"mutability":"mutable","name":"urlOrAlias","nameLocation":"95275:10:14","nodeType":"VariableDeclaration","scope":16808,"src":"95259:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16800,"name":"string","nodeType":"ElementaryTypeName","src":"95259:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16803,"mutability":"mutable","name":"blockNumber","nameLocation":"95295:11:14","nodeType":"VariableDeclaration","scope":16808,"src":"95287:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16802,"name":"uint256","nodeType":"ElementaryTypeName","src":"95287:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95258:49:14"},"returnParameters":{"id":16807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16806,"mutability":"mutable","name":"forkId","nameLocation":"95334:6:14","nodeType":"VariableDeclaration","scope":16808,"src":"95326:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16805,"name":"uint256","nodeType":"ElementaryTypeName","src":"95326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95325:16:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16818,"nodeType":"FunctionDefinition","src":"95578:104:14","nodes":[],"documentation":{"id":16809,"nodeType":"StructuredDocumentation","src":"95348:225:14","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"95587:16:14","parameters":{"id":16814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16811,"mutability":"mutable","name":"urlOrAlias","nameLocation":"95620:10:14","nodeType":"VariableDeclaration","scope":16818,"src":"95604:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16810,"name":"string","nodeType":"ElementaryTypeName","src":"95604:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16813,"mutability":"mutable","name":"txHash","nameLocation":"95640:6:14","nodeType":"VariableDeclaration","scope":16818,"src":"95632:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95632:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95603:44:14"},"returnParameters":{"id":16817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16816,"mutability":"mutable","name":"forkId","nameLocation":"95674:6:14","nodeType":"VariableDeclaration","scope":16818,"src":"95666:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16815,"name":"uint256","nodeType":"ElementaryTypeName","src":"95666:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95665:16:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16826,"nodeType":"FunctionDefinition","src":"95722:60:14","nodes":[],"documentation":{"id":16819,"nodeType":"StructuredDocumentation","src":"95688:29:14","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"95731:4:14","parameters":{"id":16824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16821,"mutability":"mutable","name":"account","nameLocation":"95744:7:14","nodeType":"VariableDeclaration","scope":16826,"src":"95736:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16820,"name":"address","nodeType":"ElementaryTypeName","src":"95736:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16823,"mutability":"mutable","name":"newBalance","nameLocation":"95761:10:14","nodeType":"VariableDeclaration","scope":16826,"src":"95753:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16822,"name":"uint256","nodeType":"ElementaryTypeName","src":"95753:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95735:37:14"},"returnParameters":{"id":16825,"nodeType":"ParameterList","parameters":[],"src":"95781:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16834,"nodeType":"FunctionDefinition","src":"96020:81:14","nodes":[],"documentation":{"id":16827,"nodeType":"StructuredDocumentation","src":"95788:227:14","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"08d6b37a","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshot","nameLocation":"96029:19:14","parameters":{"id":16830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16829,"mutability":"mutable","name":"snapshotId","nameLocation":"96057:10:14","nodeType":"VariableDeclaration","scope":16834,"src":"96049:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16828,"name":"uint256","nodeType":"ElementaryTypeName","src":"96049:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96048:20:14"},"returnParameters":{"id":16833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16832,"mutability":"mutable","name":"success","nameLocation":"96092:7:14","nodeType":"VariableDeclaration","scope":16834,"src":"96087:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16831,"name":"bool","nodeType":"ElementaryTypeName","src":"96087:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"96086:14:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16838,"nodeType":"FunctionDefinition","src":"96173:41:14","nodes":[],"documentation":{"id":16835,"nodeType":"StructuredDocumentation","src":"96107:61:14","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"e0933c74","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshots","nameLocation":"96182:20:14","parameters":{"id":16836,"nodeType":"ParameterList","parameters":[],"src":"96202:2:14"},"returnParameters":{"id":16837,"nodeType":"ParameterList","parameters":[],"src":"96213:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16844,"nodeType":"FunctionDefinition","src":"96390:52:14","nodes":[],"documentation":{"id":16839,"nodeType":"StructuredDocumentation","src":"96220:165:14","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"96399:10:14","parameters":{"id":16842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16841,"mutability":"mutable","name":"newDifficulty","nameLocation":"96418:13:14","nodeType":"VariableDeclaration","scope":16844,"src":"96410:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16840,"name":"uint256","nodeType":"ElementaryTypeName","src":"96410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96409:23:14"},"returnParameters":{"id":16843,"nodeType":"ParameterList","parameters":[],"src":"96441:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16850,"nodeType":"FunctionDefinition","src":"96501:61:14","nodes":[],"documentation":{"id":16845,"nodeType":"StructuredDocumentation","src":"96448:48:14","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"96510:9:14","parameters":{"id":16848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16847,"mutability":"mutable","name":"pathToStateJson","nameLocation":"96536:15:14","nodeType":"VariableDeclaration","scope":16850,"src":"96520:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16846,"name":"string","nodeType":"ElementaryTypeName","src":"96520:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96519:33:14"},"returnParameters":{"id":16849,"nodeType":"ParameterList","parameters":[],"src":"96561:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16858,"nodeType":"FunctionDefinition","src":"96599:74:14","nodes":[],"documentation":{"id":16851,"nodeType":"StructuredDocumentation","src":"96568:26:14","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"96608:4:14","parameters":{"id":16856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16853,"mutability":"mutable","name":"target","nameLocation":"96621:6:14","nodeType":"VariableDeclaration","scope":16858,"src":"96613:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16852,"name":"address","nodeType":"ElementaryTypeName","src":"96613:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16855,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"96644:18:14","nodeType":"VariableDeclaration","scope":16858,"src":"96629:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16854,"name":"bytes","nodeType":"ElementaryTypeName","src":"96629:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96612:51:14"},"returnParameters":{"id":16857,"nodeType":"ParameterList","parameters":[],"src":"96672:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16864,"nodeType":"FunctionDefinition","src":"96709:42:14","nodes":[],"documentation":{"id":16859,"nodeType":"StructuredDocumentation","src":"96679:25:14","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"96718:3:14","parameters":{"id":16862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16861,"mutability":"mutable","name":"newBasefee","nameLocation":"96730:10:14","nodeType":"VariableDeclaration","scope":16864,"src":"96722:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16860,"name":"uint256","nodeType":"ElementaryTypeName","src":"96722:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96721:20:14"},"returnParameters":{"id":16863,"nodeType":"ParameterList","parameters":[],"src":"96750:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16871,"nodeType":"FunctionDefinition","src":"96929:73:14","nodes":[],"documentation":{"id":16865,"nodeType":"StructuredDocumentation","src":"96757:167:14","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"96938:13:14","parameters":{"id":16866,"nodeType":"ParameterList","parameters":[],"src":"96951:2:14"},"returnParameters":{"id":16870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16869,"mutability":"mutable","name":"hashes","nameLocation":"96994:6:14","nodeType":"VariableDeclaration","scope":16871,"src":"96977:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"96977:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16868,"nodeType":"ArrayTypeName","src":"96977:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"96976:25:14"},"scope":17727,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16879,"nodeType":"FunctionDefinition","src":"97069:79:14","nodes":[],"documentation":{"id":16872,"nodeType":"StructuredDocumentation","src":"97008:56:14","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"97078:12:14","parameters":{"id":16875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16874,"mutability":"mutable","name":"account","nameLocation":"97099:7:14","nodeType":"VariableDeclaration","scope":16879,"src":"97091:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16873,"name":"address","nodeType":"ElementaryTypeName","src":"97091:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97090:17:14"},"returnParameters":{"id":16878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16877,"mutability":"mutable","name":"persistent","nameLocation":"97136:10:14","nodeType":"VariableDeclaration","scope":16879,"src":"97131:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16876,"name":"bool","nodeType":"ElementaryTypeName","src":"97131:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97130:17:14"},"scope":17727,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16885,"nodeType":"FunctionDefinition","src":"97228:63:14","nodes":[],"documentation":{"id":16880,"nodeType":"StructuredDocumentation","src":"97154:69:14","text":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"97237:10:14","parameters":{"id":16883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16882,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"97264:16:14","nodeType":"VariableDeclaration","scope":16885,"src":"97248:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16881,"name":"string","nodeType":"ElementaryTypeName","src":"97248:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97247:34:14"},"returnParameters":{"id":16884,"nodeType":"ParameterList","parameters":[],"src":"97290:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16891,"nodeType":"FunctionDefinition","src":"97494:50:14","nodes":[],"documentation":{"id":16886,"nodeType":"StructuredDocumentation","src":"97297:192:14","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97503:14:14","parameters":{"id":16889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16888,"mutability":"mutable","name":"account","nameLocation":"97526:7:14","nodeType":"VariableDeclaration","scope":16891,"src":"97518:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16887,"name":"address","nodeType":"ElementaryTypeName","src":"97518:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97517:17:14"},"returnParameters":{"id":16890,"nodeType":"ParameterList","parameters":[],"src":"97543:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16899,"nodeType":"FunctionDefinition","src":"97589:69:14","nodes":[],"documentation":{"id":16892,"nodeType":"StructuredDocumentation","src":"97550:34:14","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97598:14:14","parameters":{"id":16897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16894,"mutability":"mutable","name":"account0","nameLocation":"97621:8:14","nodeType":"VariableDeclaration","scope":16899,"src":"97613:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16893,"name":"address","nodeType":"ElementaryTypeName","src":"97613:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16896,"mutability":"mutable","name":"account1","nameLocation":"97639:8:14","nodeType":"VariableDeclaration","scope":16899,"src":"97631:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16895,"name":"address","nodeType":"ElementaryTypeName","src":"97631:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97612:36:14"},"returnParameters":{"id":16898,"nodeType":"ParameterList","parameters":[],"src":"97657:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16909,"nodeType":"FunctionDefinition","src":"97703:87:14","nodes":[],"documentation":{"id":16900,"nodeType":"StructuredDocumentation","src":"97664:34:14","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97712:14:14","parameters":{"id":16907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16902,"mutability":"mutable","name":"account0","nameLocation":"97735:8:14","nodeType":"VariableDeclaration","scope":16909,"src":"97727:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16901,"name":"address","nodeType":"ElementaryTypeName","src":"97727:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16904,"mutability":"mutable","name":"account1","nameLocation":"97753:8:14","nodeType":"VariableDeclaration","scope":16909,"src":"97745:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16903,"name":"address","nodeType":"ElementaryTypeName","src":"97745:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16906,"mutability":"mutable","name":"account2","nameLocation":"97771:8:14","nodeType":"VariableDeclaration","scope":16909,"src":"97763:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16905,"name":"address","nodeType":"ElementaryTypeName","src":"97763:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97726:54:14"},"returnParameters":{"id":16908,"nodeType":"ParameterList","parameters":[],"src":"97789:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16916,"nodeType":"FunctionDefinition","src":"97835:62:14","nodes":[],"documentation":{"id":16910,"nodeType":"StructuredDocumentation","src":"97796:34:14","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97844:14:14","parameters":{"id":16914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16913,"mutability":"mutable","name":"accounts","nameLocation":"97878:8:14","nodeType":"VariableDeclaration","scope":16916,"src":"97859:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16911,"name":"address","nodeType":"ElementaryTypeName","src":"97859:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16912,"nodeType":"ArrayTypeName","src":"97859:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"97858:29:14"},"returnParameters":{"id":16915,"nodeType":"ParameterList","parameters":[],"src":"97896:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16926,"nodeType":"FunctionDefinition","src":"97968:97:14","nodes":[],"documentation":{"id":16917,"nodeType":"StructuredDocumentation","src":"97903:60:14","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"97977:14:14","parameters":{"id":16924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16919,"mutability":"mutable","name":"callee","nameLocation":"98000:6:14","nodeType":"VariableDeclaration","scope":16926,"src":"97992:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16918,"name":"address","nodeType":"ElementaryTypeName","src":"97992:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16921,"mutability":"mutable","name":"data","nameLocation":"98023:4:14","nodeType":"VariableDeclaration","scope":16926,"src":"98008:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16920,"name":"bytes","nodeType":"ElementaryTypeName","src":"98008:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16923,"mutability":"mutable","name":"revertData","nameLocation":"98044:10:14","nodeType":"VariableDeclaration","scope":16926,"src":"98029:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16922,"name":"bytes","nodeType":"ElementaryTypeName","src":"98029:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97991:64:14"},"returnParameters":{"id":16925,"nodeType":"ParameterList","parameters":[],"src":"98064:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16938,"nodeType":"FunctionDefinition","src":"98165:123:14","nodes":[],"documentation":{"id":16927,"nodeType":"StructuredDocumentation","src":"98071:89:14","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"98174:14:14","parameters":{"id":16936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16929,"mutability":"mutable","name":"callee","nameLocation":"98197:6:14","nodeType":"VariableDeclaration","scope":16938,"src":"98189:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16928,"name":"address","nodeType":"ElementaryTypeName","src":"98189:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16931,"mutability":"mutable","name":"msgValue","nameLocation":"98213:8:14","nodeType":"VariableDeclaration","scope":16938,"src":"98205:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16930,"name":"uint256","nodeType":"ElementaryTypeName","src":"98205:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16933,"mutability":"mutable","name":"data","nameLocation":"98238:4:14","nodeType":"VariableDeclaration","scope":16938,"src":"98223:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16932,"name":"bytes","nodeType":"ElementaryTypeName","src":"98223:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16935,"mutability":"mutable","name":"revertData","nameLocation":"98259:10:14","nodeType":"VariableDeclaration","scope":16938,"src":"98244:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16934,"name":"bytes","nodeType":"ElementaryTypeName","src":"98244:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98188:82:14"},"returnParameters":{"id":16937,"nodeType":"ParameterList","parameters":[],"src":"98287:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16948,"nodeType":"FunctionDefinition","src":"98501:89:14","nodes":[],"documentation":{"id":16939,"nodeType":"StructuredDocumentation","src":"98294:202:14","text":"Reverts a call to an address with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"2dfba5df","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"98510:14:14","parameters":{"id":16946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16941,"mutability":"mutable","name":"callee","nameLocation":"98533:6:14","nodeType":"VariableDeclaration","scope":16948,"src":"98525:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16940,"name":"address","nodeType":"ElementaryTypeName","src":"98525:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16943,"mutability":"mutable","name":"data","nameLocation":"98548:4:14","nodeType":"VariableDeclaration","scope":16948,"src":"98541:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16942,"name":"bytes4","nodeType":"ElementaryTypeName","src":"98541:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":16945,"mutability":"mutable","name":"revertData","nameLocation":"98569:10:14","nodeType":"VariableDeclaration","scope":16948,"src":"98554:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16944,"name":"bytes","nodeType":"ElementaryTypeName","src":"98554:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98524:56:14"},"returnParameters":{"id":16947,"nodeType":"ParameterList","parameters":[],"src":"98589:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16960,"nodeType":"FunctionDefinition","src":"98832:107:14","nodes":[],"documentation":{"id":16949,"nodeType":"StructuredDocumentation","src":"98596:231:14","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"596c8f04","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"98841:14:14","parameters":{"id":16958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16951,"mutability":"mutable","name":"callee","nameLocation":"98864:6:14","nodeType":"VariableDeclaration","scope":16960,"src":"98856:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16950,"name":"address","nodeType":"ElementaryTypeName","src":"98856:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16953,"mutability":"mutable","name":"msgValue","nameLocation":"98880:8:14","nodeType":"VariableDeclaration","scope":16960,"src":"98872:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16952,"name":"uint256","nodeType":"ElementaryTypeName","src":"98872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16955,"mutability":"mutable","name":"data","nameLocation":"98897:4:14","nodeType":"VariableDeclaration","scope":16960,"src":"98890:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16954,"name":"bytes4","nodeType":"ElementaryTypeName","src":"98890:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":16957,"mutability":"mutable","name":"revertData","nameLocation":"98918:10:14","nodeType":"VariableDeclaration","scope":16960,"src":"98903:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16956,"name":"bytes","nodeType":"ElementaryTypeName","src":"98903:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98855:74:14"},"returnParameters":{"id":16959,"nodeType":"ParameterList","parameters":[],"src":"98938:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16970,"nodeType":"FunctionDefinition","src":"99199:91:14","nodes":[],"documentation":{"id":16961,"nodeType":"StructuredDocumentation","src":"98945:249:14","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"99208:8:14","parameters":{"id":16968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16963,"mutability":"mutable","name":"callee","nameLocation":"99225:6:14","nodeType":"VariableDeclaration","scope":16970,"src":"99217:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16962,"name":"address","nodeType":"ElementaryTypeName","src":"99217:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16965,"mutability":"mutable","name":"data","nameLocation":"99248:4:14","nodeType":"VariableDeclaration","scope":16970,"src":"99233:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16964,"name":"bytes","nodeType":"ElementaryTypeName","src":"99233:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16967,"mutability":"mutable","name":"returnData","nameLocation":"99269:10:14","nodeType":"VariableDeclaration","scope":16970,"src":"99254:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16966,"name":"bytes","nodeType":"ElementaryTypeName","src":"99254:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99216:64:14"},"returnParameters":{"id":16969,"nodeType":"ParameterList","parameters":[],"src":"99289:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16982,"nodeType":"FunctionDefinition","src":"99465:109:14","nodes":[],"documentation":{"id":16971,"nodeType":"StructuredDocumentation","src":"99296:164:14","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"99474:8:14","parameters":{"id":16980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16973,"mutability":"mutable","name":"callee","nameLocation":"99491:6:14","nodeType":"VariableDeclaration","scope":16982,"src":"99483:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16972,"name":"address","nodeType":"ElementaryTypeName","src":"99483:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16975,"mutability":"mutable","name":"msgValue","nameLocation":"99507:8:14","nodeType":"VariableDeclaration","scope":16982,"src":"99499:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16974,"name":"uint256","nodeType":"ElementaryTypeName","src":"99499:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16977,"mutability":"mutable","name":"data","nameLocation":"99532:4:14","nodeType":"VariableDeclaration","scope":16982,"src":"99517:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16976,"name":"bytes","nodeType":"ElementaryTypeName","src":"99517:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16979,"mutability":"mutable","name":"returnData","nameLocation":"99553:10:14","nodeType":"VariableDeclaration","scope":16982,"src":"99538:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16978,"name":"bytes","nodeType":"ElementaryTypeName","src":"99538:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99482:82:14"},"returnParameters":{"id":16981,"nodeType":"ParameterList","parameters":[],"src":"99573:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16992,"nodeType":"FunctionDefinition","src":"99976:83:14","nodes":[],"documentation":{"id":16983,"nodeType":"StructuredDocumentation","src":"99580:391:14","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"08e0c537","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"99985:8:14","parameters":{"id":16990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16985,"mutability":"mutable","name":"callee","nameLocation":"100002:6:14","nodeType":"VariableDeclaration","scope":16992,"src":"99994:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16984,"name":"address","nodeType":"ElementaryTypeName","src":"99994:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16987,"mutability":"mutable","name":"data","nameLocation":"100017:4:14","nodeType":"VariableDeclaration","scope":16992,"src":"100010:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16986,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100010:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":16989,"mutability":"mutable","name":"returnData","nameLocation":"100038:10:14","nodeType":"VariableDeclaration","scope":16992,"src":"100023:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16988,"name":"bytes","nodeType":"ElementaryTypeName","src":"100023:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99993:56:14"},"returnParameters":{"id":16991,"nodeType":"ParameterList","parameters":[],"src":"100058:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17004,"nodeType":"FunctionDefinition","src":"100376:101:14","nodes":[],"documentation":{"id":16993,"nodeType":"StructuredDocumentation","src":"100065:306:14","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"e7b36a3d","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"100385:8:14","parameters":{"id":17002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16995,"mutability":"mutable","name":"callee","nameLocation":"100402:6:14","nodeType":"VariableDeclaration","scope":17004,"src":"100394:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16994,"name":"address","nodeType":"ElementaryTypeName","src":"100394:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16997,"mutability":"mutable","name":"msgValue","nameLocation":"100418:8:14","nodeType":"VariableDeclaration","scope":17004,"src":"100410:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16996,"name":"uint256","nodeType":"ElementaryTypeName","src":"100410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16999,"mutability":"mutable","name":"data","nameLocation":"100435:4:14","nodeType":"VariableDeclaration","scope":17004,"src":"100428:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16998,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100428:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17001,"mutability":"mutable","name":"returnData","nameLocation":"100456:10:14","nodeType":"VariableDeclaration","scope":17004,"src":"100441:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17000,"name":"bytes","nodeType":"ElementaryTypeName","src":"100441:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100393:74:14"},"returnParameters":{"id":17003,"nodeType":"ParameterList","parameters":[],"src":"100476:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17015,"nodeType":"FunctionDefinition","src":"100567:94:14","nodes":[],"documentation":{"id":17005,"nodeType":"StructuredDocumentation","src":"100483:79:14","text":"Mocks multiple calls to an address, returning specified data for each call."},"functionSelector":"5c5c3de9","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"100576:9:14","parameters":{"id":17013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17007,"mutability":"mutable","name":"callee","nameLocation":"100594:6:14","nodeType":"VariableDeclaration","scope":17015,"src":"100586:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17006,"name":"address","nodeType":"ElementaryTypeName","src":"100586:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17009,"mutability":"mutable","name":"data","nameLocation":"100617:4:14","nodeType":"VariableDeclaration","scope":17015,"src":"100602:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17008,"name":"bytes","nodeType":"ElementaryTypeName","src":"100602:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17012,"mutability":"mutable","name":"returnData","nameLocation":"100640:10:14","nodeType":"VariableDeclaration","scope":17015,"src":"100623:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17010,"name":"bytes","nodeType":"ElementaryTypeName","src":"100623:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17011,"nodeType":"ArrayTypeName","src":"100623:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"100585:66:14"},"returnParameters":{"id":17014,"nodeType":"ParameterList","parameters":[],"src":"100660:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17028,"nodeType":"FunctionDefinition","src":"100779:112:14","nodes":[],"documentation":{"id":17016,"nodeType":"StructuredDocumentation","src":"100667:107:14","text":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"functionSelector":"08bcbae1","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"100788:9:14","parameters":{"id":17026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17018,"mutability":"mutable","name":"callee","nameLocation":"100806:6:14","nodeType":"VariableDeclaration","scope":17028,"src":"100798:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17017,"name":"address","nodeType":"ElementaryTypeName","src":"100798:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17020,"mutability":"mutable","name":"msgValue","nameLocation":"100822:8:14","nodeType":"VariableDeclaration","scope":17028,"src":"100814:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17019,"name":"uint256","nodeType":"ElementaryTypeName","src":"100814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17022,"mutability":"mutable","name":"data","nameLocation":"100847:4:14","nodeType":"VariableDeclaration","scope":17028,"src":"100832:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17021,"name":"bytes","nodeType":"ElementaryTypeName","src":"100832:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17025,"mutability":"mutable","name":"returnData","nameLocation":"100870:10:14","nodeType":"VariableDeclaration","scope":17028,"src":"100853:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17023,"name":"bytes","nodeType":"ElementaryTypeName","src":"100853:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17024,"nodeType":"ArrayTypeName","src":"100853:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"100797:84:14"},"returnParameters":{"id":17027,"nodeType":"ParameterList","parameters":[],"src":"100890:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17038,"nodeType":"FunctionDefinition","src":"101397:84:14","nodes":[],"documentation":{"id":17029,"nodeType":"StructuredDocumentation","src":"100897:495:14","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"101406:12:14","parameters":{"id":17036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17031,"mutability":"mutable","name":"callee","nameLocation":"101427:6:14","nodeType":"VariableDeclaration","scope":17038,"src":"101419:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17030,"name":"address","nodeType":"ElementaryTypeName","src":"101419:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17033,"mutability":"mutable","name":"target","nameLocation":"101443:6:14","nodeType":"VariableDeclaration","scope":17038,"src":"101435:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17032,"name":"address","nodeType":"ElementaryTypeName","src":"101435:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17035,"mutability":"mutable","name":"data","nameLocation":"101466:4:14","nodeType":"VariableDeclaration","scope":17038,"src":"101451:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17034,"name":"bytes","nodeType":"ElementaryTypeName","src":"101451:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"101418:53:14"},"returnParameters":{"id":17037,"nodeType":"ParameterList","parameters":[],"src":"101480:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17044,"nodeType":"FunctionDefinition","src":"101556:43:14","nodes":[],"documentation":{"id":17039,"nodeType":"StructuredDocumentation","src":"101487:64:14","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"101565:5:14","parameters":{"id":17042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17041,"mutability":"mutable","name":"msgSender","nameLocation":"101579:9:14","nodeType":"VariableDeclaration","scope":17044,"src":"101571:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17040,"name":"address","nodeType":"ElementaryTypeName","src":"101571:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101570:19:14"},"returnParameters":{"id":17043,"nodeType":"ParameterList","parameters":[],"src":"101598:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17052,"nodeType":"FunctionDefinition","src":"101718:61:14","nodes":[],"documentation":{"id":17045,"nodeType":"StructuredDocumentation","src":"101605:108:14","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"101727:5:14","parameters":{"id":17050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17047,"mutability":"mutable","name":"msgSender","nameLocation":"101741:9:14","nodeType":"VariableDeclaration","scope":17052,"src":"101733:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17046,"name":"address","nodeType":"ElementaryTypeName","src":"101733:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17049,"mutability":"mutable","name":"txOrigin","nameLocation":"101760:8:14","nodeType":"VariableDeclaration","scope":17052,"src":"101752:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17048,"name":"address","nodeType":"ElementaryTypeName","src":"101752:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101732:37:14"},"returnParameters":{"id":17051,"nodeType":"ParameterList","parameters":[],"src":"101778:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17060,"nodeType":"FunctionDefinition","src":"101863:62:14","nodes":[],"documentation":{"id":17053,"nodeType":"StructuredDocumentation","src":"101785:73:14","text":"Sets the *next* delegate call's `msg.sender` to be the input address."},"functionSelector":"a7f8bf5c","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"101872:5:14","parameters":{"id":17058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17055,"mutability":"mutable","name":"msgSender","nameLocation":"101886:9:14","nodeType":"VariableDeclaration","scope":17060,"src":"101878:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17054,"name":"address","nodeType":"ElementaryTypeName","src":"101878:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17057,"mutability":"mutable","name":"delegateCall","nameLocation":"101902:12:14","nodeType":"VariableDeclaration","scope":17060,"src":"101897:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17056,"name":"bool","nodeType":"ElementaryTypeName","src":"101897:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101877:38:14"},"returnParameters":{"id":17059,"nodeType":"ParameterList","parameters":[],"src":"101924:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17070,"nodeType":"FunctionDefinition","src":"102053:80:14","nodes":[],"documentation":{"id":17061,"nodeType":"StructuredDocumentation","src":"101931:117:14","text":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"7d73d042","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"102062:5:14","parameters":{"id":17068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17063,"mutability":"mutable","name":"msgSender","nameLocation":"102076:9:14","nodeType":"VariableDeclaration","scope":17070,"src":"102068:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17062,"name":"address","nodeType":"ElementaryTypeName","src":"102068:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17065,"mutability":"mutable","name":"txOrigin","nameLocation":"102095:8:14","nodeType":"VariableDeclaration","scope":17070,"src":"102087:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17064,"name":"address","nodeType":"ElementaryTypeName","src":"102087:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17067,"mutability":"mutable","name":"delegateCall","nameLocation":"102110:12:14","nodeType":"VariableDeclaration","scope":17070,"src":"102105:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17066,"name":"bool","nodeType":"ElementaryTypeName","src":"102105:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102067:56:14"},"returnParameters":{"id":17069,"nodeType":"ParameterList","parameters":[],"src":"102132:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17076,"nodeType":"FunctionDefinition","src":"102310:52:14","nodes":[],"documentation":{"id":17071,"nodeType":"StructuredDocumentation","src":"102139:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"102319:10:14","parameters":{"id":17074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17073,"mutability":"mutable","name":"newPrevrandao","nameLocation":"102338:13:14","nodeType":"VariableDeclaration","scope":17076,"src":"102330:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"102330:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"102329:23:14"},"returnParameters":{"id":17075,"nodeType":"ParameterList","parameters":[],"src":"102361:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17082,"nodeType":"FunctionDefinition","src":"102539:52:14","nodes":[],"documentation":{"id":17077,"nodeType":"StructuredDocumentation","src":"102368:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"102548:10:14","parameters":{"id":17080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17079,"mutability":"mutable","name":"newPrevrandao","nameLocation":"102567:13:14","nodeType":"VariableDeclaration","scope":17082,"src":"102559:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17078,"name":"uint256","nodeType":"ElementaryTypeName","src":"102559:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102558:23:14"},"returnParameters":{"id":17081,"nodeType":"ParameterList","parameters":[],"src":"102590:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17093,"nodeType":"FunctionDefinition","src":"102719:101:14","nodes":[],"documentation":{"id":17083,"nodeType":"StructuredDocumentation","src":"102597:117:14","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"102728:11:14","parameters":{"id":17084,"nodeType":"ParameterList","parameters":[],"src":"102739:2:14"},"returnParameters":{"id":17092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17087,"mutability":"mutable","name":"callerMode","nameLocation":"102771:10:14","nodeType":"VariableDeclaration","scope":17093,"src":"102760:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12958","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":17086,"nodeType":"UserDefinedTypeName","pathNode":{"id":17085,"name":"CallerMode","nameLocations":["102760:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":12958,"src":"102760:10:14"},"referencedDeclaration":12958,"src":"102760:10:14","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12958","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":17089,"mutability":"mutable","name":"msgSender","nameLocation":"102791:9:14","nodeType":"VariableDeclaration","scope":17093,"src":"102783:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17088,"name":"address","nodeType":"ElementaryTypeName","src":"102783:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17091,"mutability":"mutable","name":"txOrigin","nameLocation":"102810:8:14","nodeType":"VariableDeclaration","scope":17093,"src":"102802:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17090,"name":"address","nodeType":"ElementaryTypeName","src":"102802:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102759:60:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17099,"nodeType":"FunctionDefinition","src":"102908:46:14","nodes":[],"documentation":{"id":17094,"nodeType":"StructuredDocumentation","src":"102826:77:14","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"102917:10:14","parameters":{"id":17097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17096,"mutability":"mutable","name":"account","nameLocation":"102936:7:14","nodeType":"VariableDeclaration","scope":17099,"src":"102928:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17095,"name":"address","nodeType":"ElementaryTypeName","src":"102928:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102927:17:14"},"returnParameters":{"id":17098,"nodeType":"ParameterList","parameters":[],"src":"102953:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17107,"nodeType":"FunctionDefinition","src":"103302:75:14","nodes":[],"documentation":{"id":17100,"nodeType":"StructuredDocumentation","src":"102960:337:14","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"functionSelector":"c2527405","implemented":false,"kind":"function","modifiers":[],"name":"revertToState","nameLocation":"103311:13:14","parameters":{"id":17103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17102,"mutability":"mutable","name":"snapshotId","nameLocation":"103333:10:14","nodeType":"VariableDeclaration","scope":17107,"src":"103325:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17101,"name":"uint256","nodeType":"ElementaryTypeName","src":"103325:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103324:20:14"},"returnParameters":{"id":17106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17105,"mutability":"mutable","name":"success","nameLocation":"103368:7:14","nodeType":"VariableDeclaration","scope":17107,"src":"103363:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17104,"name":"bool","nodeType":"ElementaryTypeName","src":"103363:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"103362:14:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17115,"nodeType":"FunctionDefinition","src":"103660:84:14","nodes":[],"documentation":{"id":17108,"nodeType":"StructuredDocumentation","src":"103383:272:14","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"3a1985dc","implemented":false,"kind":"function","modifiers":[],"name":"revertToStateAndDelete","nameLocation":"103669:22:14","parameters":{"id":17111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17110,"mutability":"mutable","name":"snapshotId","nameLocation":"103700:10:14","nodeType":"VariableDeclaration","scope":17115,"src":"103692:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17109,"name":"uint256","nodeType":"ElementaryTypeName","src":"103692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103691:20:14"},"returnParameters":{"id":17114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17113,"mutability":"mutable","name":"success","nameLocation":"103735:7:14","nodeType":"VariableDeclaration","scope":17115,"src":"103730:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17112,"name":"bool","nodeType":"ElementaryTypeName","src":"103730:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"103729:14:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17121,"nodeType":"FunctionDefinition","src":"103841:52:14","nodes":[],"documentation":{"id":17116,"nodeType":"StructuredDocumentation","src":"103750:86:14","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"103850:16:14","parameters":{"id":17119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17118,"mutability":"mutable","name":"account","nameLocation":"103875:7:14","nodeType":"VariableDeclaration","scope":17121,"src":"103867:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17117,"name":"address","nodeType":"ElementaryTypeName","src":"103867:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103866:17:14"},"returnParameters":{"id":17120,"nodeType":"ParameterList","parameters":[],"src":"103892:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17128,"nodeType":"FunctionDefinition","src":"103940:64:14","nodes":[],"documentation":{"id":17122,"nodeType":"StructuredDocumentation","src":"103899:36:14","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"103949:16:14","parameters":{"id":17126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17125,"mutability":"mutable","name":"accounts","nameLocation":"103985:8:14","nodeType":"VariableDeclaration","scope":17128,"src":"103966:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17123,"name":"address","nodeType":"ElementaryTypeName","src":"103966:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17124,"nodeType":"ArrayTypeName","src":"103966:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"103965:29:14"},"returnParameters":{"id":17127,"nodeType":"ParameterList","parameters":[],"src":"104003:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17134,"nodeType":"FunctionDefinition","src":"104039:42:14","nodes":[],"documentation":{"id":17129,"nodeType":"StructuredDocumentation","src":"104010:24:14","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"104048:4:14","parameters":{"id":17132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17131,"mutability":"mutable","name":"newHeight","nameLocation":"104061:9:14","nodeType":"VariableDeclaration","scope":17134,"src":"104053:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17130,"name":"uint256","nodeType":"ElementaryTypeName","src":"104053:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104052:19:14"},"returnParameters":{"id":17133,"nodeType":"ParameterList","parameters":[],"src":"104080:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17140,"nodeType":"FunctionDefinition","src":"104220:48:14","nodes":[],"documentation":{"id":17135,"nodeType":"StructuredDocumentation","src":"104087:128:14","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104229:8:14","parameters":{"id":17138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17137,"mutability":"mutable","name":"blockNumber","nameLocation":"104246:11:14","nodeType":"VariableDeclaration","scope":17140,"src":"104238:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17136,"name":"uint256","nodeType":"ElementaryTypeName","src":"104238:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104237:21:14"},"returnParameters":{"id":17139,"nodeType":"ParameterList","parameters":[],"src":"104267:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17146,"nodeType":"FunctionDefinition","src":"104483:43:14","nodes":[],"documentation":{"id":17141,"nodeType":"StructuredDocumentation","src":"104274:204:14","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104492:8:14","parameters":{"id":17144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17143,"mutability":"mutable","name":"txHash","nameLocation":"104509:6:14","nodeType":"VariableDeclaration","scope":17146,"src":"104501:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104501:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104500:16:14"},"returnParameters":{"id":17145,"nodeType":"ParameterList","parameters":[],"src":"104525:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17154,"nodeType":"FunctionDefinition","src":"104586:64:14","nodes":[],"documentation":{"id":17147,"nodeType":"StructuredDocumentation","src":"104532:49:14","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104595:8:14","parameters":{"id":17152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17149,"mutability":"mutable","name":"forkId","nameLocation":"104612:6:14","nodeType":"VariableDeclaration","scope":17154,"src":"104604:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17148,"name":"uint256","nodeType":"ElementaryTypeName","src":"104604:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17151,"mutability":"mutable","name":"blockNumber","nameLocation":"104628:11:14","nodeType":"VariableDeclaration","scope":17154,"src":"104620:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17150,"name":"uint256","nodeType":"ElementaryTypeName","src":"104620:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104603:37:14"},"returnParameters":{"id":17153,"nodeType":"ParameterList","parameters":[],"src":"104649:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17162,"nodeType":"FunctionDefinition","src":"104786:59:14","nodes":[],"documentation":{"id":17155,"nodeType":"StructuredDocumentation","src":"104656:125:14","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104795:8:14","parameters":{"id":17160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17157,"mutability":"mutable","name":"forkId","nameLocation":"104812:6:14","nodeType":"VariableDeclaration","scope":17162,"src":"104804:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17156,"name":"uint256","nodeType":"ElementaryTypeName","src":"104804:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17159,"mutability":"mutable","name":"txHash","nameLocation":"104828:6:14","nodeType":"VariableDeclaration","scope":17162,"src":"104820:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104820:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104803:32:14"},"returnParameters":{"id":17161,"nodeType":"ParameterList","parameters":[],"src":"104844:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17168,"nodeType":"FunctionDefinition","src":"104958:45:14","nodes":[],"documentation":{"id":17163,"nodeType":"StructuredDocumentation","src":"104851:102:14","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"104967:10:14","parameters":{"id":17166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17165,"mutability":"mutable","name":"forkId","nameLocation":"104986:6:14","nodeType":"VariableDeclaration","scope":17168,"src":"104978:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17164,"name":"uint256","nodeType":"ElementaryTypeName","src":"104978:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104977:16:14"},"returnParameters":{"id":17167,"nodeType":"ParameterList","parameters":[],"src":"105002:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17176,"nodeType":"FunctionDefinition","src":"105153:71:14","nodes":[],"documentation":{"id":17169,"nodeType":"StructuredDocumentation","src":"105009:139:14","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"105162:12:14","parameters":{"id":17174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17171,"mutability":"mutable","name":"blockNumber","nameLocation":"105183:11:14","nodeType":"VariableDeclaration","scope":17176,"src":"105175:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17170,"name":"uint256","nodeType":"ElementaryTypeName","src":"105175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17173,"mutability":"mutable","name":"blockHash","nameLocation":"105204:9:14","nodeType":"VariableDeclaration","scope":17176,"src":"105196:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105196:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"105174:40:14"},"returnParameters":{"id":17175,"nodeType":"ParameterList","parameters":[],"src":"105223:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17184,"nodeType":"FunctionDefinition","src":"105322:61:14","nodes":[],"documentation":{"id":17177,"nodeType":"StructuredDocumentation","src":"105230:87:14","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"105331:8:14","parameters":{"id":17182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17179,"mutability":"mutable","name":"account","nameLocation":"105348:7:14","nodeType":"VariableDeclaration","scope":17184,"src":"105340:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17178,"name":"address","nodeType":"ElementaryTypeName","src":"105340:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17181,"mutability":"mutable","name":"newNonce","nameLocation":"105364:8:14","nodeType":"VariableDeclaration","scope":17184,"src":"105357:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17180,"name":"uint64","nodeType":"ElementaryTypeName","src":"105357:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"105339:34:14"},"returnParameters":{"id":17183,"nodeType":"ParameterList","parameters":[],"src":"105382:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17192,"nodeType":"FunctionDefinition","src":"105449:67:14","nodes":[],"documentation":{"id":17185,"nodeType":"StructuredDocumentation","src":"105389:55:14","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"105458:14:14","parameters":{"id":17190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17187,"mutability":"mutable","name":"account","nameLocation":"105481:7:14","nodeType":"VariableDeclaration","scope":17192,"src":"105473:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17186,"name":"address","nodeType":"ElementaryTypeName","src":"105473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17189,"mutability":"mutable","name":"newNonce","nameLocation":"105497:8:14","nodeType":"VariableDeclaration","scope":17192,"src":"105490:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17188,"name":"uint64","nodeType":"ElementaryTypeName","src":"105490:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"105472:34:14"},"returnParameters":{"id":17191,"nodeType":"ParameterList","parameters":[],"src":"105515:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17200,"nodeType":"FunctionDefinition","src":"105615:86:14","nodes":[],"documentation":{"id":17193,"nodeType":"StructuredDocumentation","src":"105522:88:14","text":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"functionSelector":"dd9fca12","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"105624:19:14","parameters":{"id":17196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17195,"mutability":"mutable","name":"name","nameLocation":"105660:4:14","nodeType":"VariableDeclaration","scope":17200,"src":"105644:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17194,"name":"string","nodeType":"ElementaryTypeName","src":"105644:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"105643:22:14"},"returnParameters":{"id":17199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17198,"mutability":"mutable","name":"gasUsed","nameLocation":"105692:7:14","nodeType":"VariableDeclaration","scope":17200,"src":"105684:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17197,"name":"uint256","nodeType":"ElementaryTypeName","src":"105684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105683:17:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17210,"nodeType":"FunctionDefinition","src":"105811:109:14","nodes":[],"documentation":{"id":17201,"nodeType":"StructuredDocumentation","src":"105707:99:14","text":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"functionSelector":"200c6772","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"105820:19:14","parameters":{"id":17206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17203,"mutability":"mutable","name":"group","nameLocation":"105856:5:14","nodeType":"VariableDeclaration","scope":17210,"src":"105840:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17202,"name":"string","nodeType":"ElementaryTypeName","src":"105840:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17205,"mutability":"mutable","name":"name","nameLocation":"105879:4:14","nodeType":"VariableDeclaration","scope":17210,"src":"105863:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17204,"name":"string","nodeType":"ElementaryTypeName","src":"105863:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"105839:45:14"},"returnParameters":{"id":17209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17208,"mutability":"mutable","name":"gasUsed","nameLocation":"105911:7:14","nodeType":"VariableDeclaration","scope":17210,"src":"105903:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17207,"name":"uint256","nodeType":"ElementaryTypeName","src":"105903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105902:17:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17216,"nodeType":"FunctionDefinition","src":"106080:63:14","nodes":[],"documentation":{"id":17211,"nodeType":"StructuredDocumentation","src":"105926:149:14","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertToState`."},"functionSelector":"9cd23835","implemented":false,"kind":"function","modifiers":[],"name":"snapshotState","nameLocation":"106089:13:14","parameters":{"id":17212,"nodeType":"ParameterList","parameters":[],"src":"106102:2:14"},"returnParameters":{"id":17215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17214,"mutability":"mutable","name":"snapshotId","nameLocation":"106131:10:14","nodeType":"VariableDeclaration","scope":17216,"src":"106123:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17213,"name":"uint256","nodeType":"ElementaryTypeName","src":"106123:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106122:20:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17224,"nodeType":"FunctionDefinition","src":"106270:69:14","nodes":[],"documentation":{"id":17217,"nodeType":"StructuredDocumentation","src":"106149:116:14","text":"Snapshot capture an arbitrary numerical value by name.\n The group name is derived from the contract name."},"functionSelector":"51db805a","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"106279:13:14","parameters":{"id":17222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17219,"mutability":"mutable","name":"name","nameLocation":"106309:4:14","nodeType":"VariableDeclaration","scope":17224,"src":"106293:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17218,"name":"string","nodeType":"ElementaryTypeName","src":"106293:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17221,"mutability":"mutable","name":"value","nameLocation":"106323:5:14","nodeType":"VariableDeclaration","scope":17224,"src":"106315:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17220,"name":"uint256","nodeType":"ElementaryTypeName","src":"106315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106292:37:14"},"returnParameters":{"id":17223,"nodeType":"ParameterList","parameters":[],"src":"106338:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17234,"nodeType":"FunctionDefinition","src":"106419:92:14","nodes":[],"documentation":{"id":17225,"nodeType":"StructuredDocumentation","src":"106345:69:14","text":"Snapshot capture an arbitrary numerical value by name in a group."},"functionSelector":"6d2b27d8","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"106428:13:14","parameters":{"id":17232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17227,"mutability":"mutable","name":"group","nameLocation":"106458:5:14","nodeType":"VariableDeclaration","scope":17234,"src":"106442:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17226,"name":"string","nodeType":"ElementaryTypeName","src":"106442:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17229,"mutability":"mutable","name":"name","nameLocation":"106481:4:14","nodeType":"VariableDeclaration","scope":17234,"src":"106465:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17228,"name":"string","nodeType":"ElementaryTypeName","src":"106465:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17231,"mutability":"mutable","name":"value","nameLocation":"106495:5:14","nodeType":"VariableDeclaration","scope":17234,"src":"106487:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17230,"name":"uint256","nodeType":"ElementaryTypeName","src":"106487:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106441:60:14"},"returnParameters":{"id":17233,"nodeType":"ParameterList","parameters":[],"src":"106510:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17240,"nodeType":"FunctionDefinition","src":"106618:48:14","nodes":[],"documentation":{"id":17235,"nodeType":"StructuredDocumentation","src":"106517:96:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"106627:10:14","parameters":{"id":17238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17237,"mutability":"mutable","name":"msgSender","nameLocation":"106646:9:14","nodeType":"VariableDeclaration","scope":17240,"src":"106638:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17236,"name":"address","nodeType":"ElementaryTypeName","src":"106638:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106637:19:14"},"returnParameters":{"id":17239,"nodeType":"ParameterList","parameters":[],"src":"106665:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17248,"nodeType":"FunctionDefinition","src":"106817:66:14","nodes":[],"documentation":{"id":17241,"nodeType":"StructuredDocumentation","src":"106672:140:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"106826:10:14","parameters":{"id":17246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17243,"mutability":"mutable","name":"msgSender","nameLocation":"106845:9:14","nodeType":"VariableDeclaration","scope":17248,"src":"106837:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17242,"name":"address","nodeType":"ElementaryTypeName","src":"106837:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17245,"mutability":"mutable","name":"txOrigin","nameLocation":"106864:8:14","nodeType":"VariableDeclaration","scope":17248,"src":"106856:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17244,"name":"address","nodeType":"ElementaryTypeName","src":"106856:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106836:37:14"},"returnParameters":{"id":17247,"nodeType":"ParameterList","parameters":[],"src":"106882:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17256,"nodeType":"FunctionDefinition","src":"106999:67:14","nodes":[],"documentation":{"id":17249,"nodeType":"StructuredDocumentation","src":"106889:105:14","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"1cc0b435","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"107008:10:14","parameters":{"id":17254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17251,"mutability":"mutable","name":"msgSender","nameLocation":"107027:9:14","nodeType":"VariableDeclaration","scope":17256,"src":"107019:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17250,"name":"address","nodeType":"ElementaryTypeName","src":"107019:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17253,"mutability":"mutable","name":"delegateCall","nameLocation":"107043:12:14","nodeType":"VariableDeclaration","scope":17256,"src":"107038:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17252,"name":"bool","nodeType":"ElementaryTypeName","src":"107038:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"107018:38:14"},"returnParameters":{"id":17255,"nodeType":"ParameterList","parameters":[],"src":"107065:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17266,"nodeType":"FunctionDefinition","src":"107226:85:14","nodes":[],"documentation":{"id":17257,"nodeType":"StructuredDocumentation","src":"107072:149:14","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"4eb859b5","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"107235:10:14","parameters":{"id":17264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17259,"mutability":"mutable","name":"msgSender","nameLocation":"107254:9:14","nodeType":"VariableDeclaration","scope":17266,"src":"107246:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17258,"name":"address","nodeType":"ElementaryTypeName","src":"107246:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17261,"mutability":"mutable","name":"txOrigin","nameLocation":"107273:8:14","nodeType":"VariableDeclaration","scope":17266,"src":"107265:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17260,"name":"address","nodeType":"ElementaryTypeName","src":"107265:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17263,"mutability":"mutable","name":"delegateCall","nameLocation":"107288:12:14","nodeType":"VariableDeclaration","scope":17266,"src":"107283:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17262,"name":"bool","nodeType":"ElementaryTypeName","src":"107283:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"107245:56:14"},"returnParameters":{"id":17265,"nodeType":"ParameterList","parameters":[],"src":"107310:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17272,"nodeType":"FunctionDefinition","src":"107442:57:14","nodes":[],"documentation":{"id":17267,"nodeType":"StructuredDocumentation","src":"107317:120:14","text":"Start a snapshot capture of the current gas usage by name.\n The group name is derived from the contract name."},"functionSelector":"3cad9d7b","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"107451:16:14","parameters":{"id":17270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17269,"mutability":"mutable","name":"name","nameLocation":"107484:4:14","nodeType":"VariableDeclaration","scope":17272,"src":"107468:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17268,"name":"string","nodeType":"ElementaryTypeName","src":"107468:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107467:22:14"},"returnParameters":{"id":17271,"nodeType":"ParameterList","parameters":[],"src":"107498:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17280,"nodeType":"FunctionDefinition","src":"107583:80:14","nodes":[],"documentation":{"id":17273,"nodeType":"StructuredDocumentation","src":"107505:73:14","text":"Start a snapshot capture of the current gas usage by name in a group."},"functionSelector":"6cd0cc53","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"107592:16:14","parameters":{"id":17278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17275,"mutability":"mutable","name":"group","nameLocation":"107625:5:14","nodeType":"VariableDeclaration","scope":17280,"src":"107609:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17274,"name":"string","nodeType":"ElementaryTypeName","src":"107609:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17277,"mutability":"mutable","name":"name","nameLocation":"107648:4:14","nodeType":"VariableDeclaration","scope":17280,"src":"107632:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17276,"name":"string","nodeType":"ElementaryTypeName","src":"107632:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107608:45:14"},"returnParameters":{"id":17279,"nodeType":"ParameterList","parameters":[],"src":"107662:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17284,"nodeType":"FunctionDefinition","src":"107738:30:14","nodes":[],"documentation":{"id":17281,"nodeType":"StructuredDocumentation","src":"107669:64:14","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"107747:9:14","parameters":{"id":17282,"nodeType":"ParameterList","parameters":[],"src":"107756:2:14"},"returnParameters":{"id":17283,"nodeType":"ParameterList","parameters":[],"src":"107767:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17290,"nodeType":"FunctionDefinition","src":"107892:62:14","nodes":[],"documentation":{"id":17285,"nodeType":"StructuredDocumentation","src":"107774:113:14","text":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"functionSelector":"f6402eda","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"107901:15:14","parameters":{"id":17286,"nodeType":"ParameterList","parameters":[],"src":"107916:2:14"},"returnParameters":{"id":17289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17288,"mutability":"mutable","name":"gasUsed","nameLocation":"107945:7:14","nodeType":"VariableDeclaration","scope":17290,"src":"107937:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17287,"name":"uint256","nodeType":"ElementaryTypeName","src":"107937:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107936:17:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17298,"nodeType":"FunctionDefinition","src":"108126:82:14","nodes":[],"documentation":{"id":17291,"nodeType":"StructuredDocumentation","src":"107960:161:14","text":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start.\n The group name is derived from the contract name."},"functionSelector":"773b2805","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"108135:15:14","parameters":{"id":17294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17293,"mutability":"mutable","name":"name","nameLocation":"108167:4:14","nodeType":"VariableDeclaration","scope":17298,"src":"108151:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17292,"name":"string","nodeType":"ElementaryTypeName","src":"108151:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"108150:22:14"},"returnParameters":{"id":17297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17296,"mutability":"mutable","name":"gasUsed","nameLocation":"108199:7:14","nodeType":"VariableDeclaration","scope":17298,"src":"108191:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17295,"name":"uint256","nodeType":"ElementaryTypeName","src":"108191:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108190:17:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17308,"nodeType":"FunctionDefinition","src":"108333:105:14","nodes":[],"documentation":{"id":17299,"nodeType":"StructuredDocumentation","src":"108214:114:14","text":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"functionSelector":"0c9db707","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"108342:15:14","parameters":{"id":17304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17301,"mutability":"mutable","name":"group","nameLocation":"108374:5:14","nodeType":"VariableDeclaration","scope":17308,"src":"108358:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17300,"name":"string","nodeType":"ElementaryTypeName","src":"108358:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17303,"mutability":"mutable","name":"name","nameLocation":"108397:4:14","nodeType":"VariableDeclaration","scope":17308,"src":"108381:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17302,"name":"string","nodeType":"ElementaryTypeName","src":"108381:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"108357:45:14"},"returnParameters":{"id":17307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17306,"mutability":"mutable","name":"gasUsed","nameLocation":"108429:7:14","nodeType":"VariableDeclaration","scope":17308,"src":"108421:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17305,"name":"uint256","nodeType":"ElementaryTypeName","src":"108421:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108420:17:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17318,"nodeType":"FunctionDefinition","src":"108496:69:14","nodes":[],"documentation":{"id":17309,"nodeType":"StructuredDocumentation","src":"108444:47:14","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"108505:5:14","parameters":{"id":17316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17311,"mutability":"mutable","name":"target","nameLocation":"108519:6:14","nodeType":"VariableDeclaration","scope":17318,"src":"108511:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17310,"name":"address","nodeType":"ElementaryTypeName","src":"108511:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17313,"mutability":"mutable","name":"slot","nameLocation":"108535:4:14","nodeType":"VariableDeclaration","scope":17318,"src":"108527:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108527:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17315,"mutability":"mutable","name":"value","nameLocation":"108549:5:14","nodeType":"VariableDeclaration","scope":17318,"src":"108541:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108541:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108510:45:14"},"returnParameters":{"id":17317,"nodeType":"ParameterList","parameters":[],"src":"108564:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17324,"nodeType":"FunctionDefinition","src":"108668:43:14","nodes":[],"documentation":{"id":17319,"nodeType":"StructuredDocumentation","src":"108571:92:14","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"108677:8:14","parameters":{"id":17322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17321,"mutability":"mutable","name":"txHash","nameLocation":"108694:6:14","nodeType":"VariableDeclaration","scope":17324,"src":"108686:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108686:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108685:16:14"},"returnParameters":{"id":17323,"nodeType":"ParameterList","parameters":[],"src":"108710:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17332,"nodeType":"FunctionDefinition","src":"108813:59:14","nodes":[],"documentation":{"id":17325,"nodeType":"StructuredDocumentation","src":"108717:91:14","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"108822:8:14","parameters":{"id":17330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17327,"mutability":"mutable","name":"forkId","nameLocation":"108839:6:14","nodeType":"VariableDeclaration","scope":17332,"src":"108831:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17326,"name":"uint256","nodeType":"ElementaryTypeName","src":"108831:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17329,"mutability":"mutable","name":"txHash","nameLocation":"108855:6:14","nodeType":"VariableDeclaration","scope":17332,"src":"108847:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108847:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108830:32:14"},"returnParameters":{"id":17331,"nodeType":"ParameterList","parameters":[],"src":"108871:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17338,"nodeType":"FunctionDefinition","src":"108906:50:14","nodes":[],"documentation":{"id":17333,"nodeType":"StructuredDocumentation","src":"108878:23:14","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"108915:10:14","parameters":{"id":17336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17335,"mutability":"mutable","name":"newGasPrice","nameLocation":"108934:11:14","nodeType":"VariableDeclaration","scope":17338,"src":"108926:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17334,"name":"uint256","nodeType":"ElementaryTypeName","src":"108926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108925:21:14"},"returnParameters":{"id":17337,"nodeType":"ParameterList","parameters":[],"src":"108955:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17344,"nodeType":"FunctionDefinition","src":"108994:45:14","nodes":[],"documentation":{"id":17339,"nodeType":"StructuredDocumentation","src":"108962:27:14","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"109003:4:14","parameters":{"id":17342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17341,"mutability":"mutable","name":"newTimestamp","nameLocation":"109016:12:14","nodeType":"VariableDeclaration","scope":17344,"src":"109008:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17340,"name":"uint256","nodeType":"ElementaryTypeName","src":"109008:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109007:22:14"},"returnParameters":{"id":17343,"nodeType":"ParameterList","parameters":[],"src":"109038:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17352,"nodeType":"FunctionDefinition","src":"109164:76:14","nodes":[],"documentation":{"id":17345,"nodeType":"StructuredDocumentation","src":"109045:114:14","text":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"109173:14:14","parameters":{"id":17348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17347,"mutability":"mutable","name":"snapshotId","nameLocation":"109196:10:14","nodeType":"VariableDeclaration","scope":17352,"src":"109188:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17346,"name":"uint256","nodeType":"ElementaryTypeName","src":"109188:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109187:20:14"},"returnParameters":{"id":17351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17350,"mutability":"mutable","name":"success","nameLocation":"109231:7:14","nodeType":"VariableDeclaration","scope":17352,"src":"109226:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17349,"name":"bool","nodeType":"ElementaryTypeName","src":"109226:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109225:14:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17356,"nodeType":"FunctionDefinition","src":"109367:36:14","nodes":[],"documentation":{"id":17353,"nodeType":"StructuredDocumentation","src":"109246:116:14","text":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"109376:15:14","parameters":{"id":17354,"nodeType":"ParameterList","parameters":[],"src":"109391:2:14"},"returnParameters":{"id":17355,"nodeType":"ParameterList","parameters":[],"src":"109402:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17364,"nodeType":"FunctionDefinition","src":"109534:79:14","nodes":[],"documentation":{"id":17357,"nodeType":"StructuredDocumentation","src":"109409:120:14","text":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"109543:17:14","parameters":{"id":17360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17359,"mutability":"mutable","name":"snapshotId","nameLocation":"109569:10:14","nodeType":"VariableDeclaration","scope":17364,"src":"109561:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17358,"name":"uint256","nodeType":"ElementaryTypeName","src":"109561:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109560:20:14"},"returnParameters":{"id":17363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17362,"mutability":"mutable","name":"success","nameLocation":"109604:7:14","nodeType":"VariableDeclaration","scope":17364,"src":"109599:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17361,"name":"bool","nodeType":"ElementaryTypeName","src":"109599:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109598:14:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17372,"nodeType":"FunctionDefinition","src":"109726:70:14","nodes":[],"documentation":{"id":17365,"nodeType":"StructuredDocumentation","src":"109619:102:14","text":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"109735:8:14","parameters":{"id":17368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17367,"mutability":"mutable","name":"snapshotId","nameLocation":"109752:10:14","nodeType":"VariableDeclaration","scope":17372,"src":"109744:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17366,"name":"uint256","nodeType":"ElementaryTypeName","src":"109744:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109743:20:14"},"returnParameters":{"id":17371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17370,"mutability":"mutable","name":"success","nameLocation":"109787:7:14","nodeType":"VariableDeclaration","scope":17372,"src":"109782:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17369,"name":"bool","nodeType":"ElementaryTypeName","src":"109782:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109781:14:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17378,"nodeType":"FunctionDefinition","src":"109909:58:14","nodes":[],"documentation":{"id":17373,"nodeType":"StructuredDocumentation","src":"109802:102:14","text":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"109918:8:14","parameters":{"id":17374,"nodeType":"ParameterList","parameters":[],"src":"109926:2:14"},"returnParameters":{"id":17377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17376,"mutability":"mutable","name":"snapshotId","nameLocation":"109955:10:14","nodeType":"VariableDeclaration","scope":17378,"src":"109947:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17375,"name":"uint256","nodeType":"ElementaryTypeName","src":"109947:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109946:20:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17390,"nodeType":"FunctionDefinition","src":"110119:105:14","nodes":[],"documentation":{"id":17379,"nodeType":"StructuredDocumentation","src":"110007:107:14","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"110128:16:14","parameters":{"id":17388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17381,"mutability":"mutable","name":"callee","nameLocation":"110153:6:14","nodeType":"VariableDeclaration","scope":17390,"src":"110145:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17380,"name":"address","nodeType":"ElementaryTypeName","src":"110145:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17383,"mutability":"mutable","name":"msgValue","nameLocation":"110169:8:14","nodeType":"VariableDeclaration","scope":17390,"src":"110161:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17382,"name":"uint256","nodeType":"ElementaryTypeName","src":"110161:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17385,"mutability":"mutable","name":"minGas","nameLocation":"110186:6:14","nodeType":"VariableDeclaration","scope":17390,"src":"110179:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17384,"name":"uint64","nodeType":"ElementaryTypeName","src":"110179:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17387,"mutability":"mutable","name":"data","nameLocation":"110209:4:14","nodeType":"VariableDeclaration","scope":17390,"src":"110194:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17386,"name":"bytes","nodeType":"ElementaryTypeName","src":"110194:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110144:70:14"},"returnParameters":{"id":17389,"nodeType":"ParameterList","parameters":[],"src":"110223:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17404,"nodeType":"FunctionDefinition","src":"110357:127:14","nodes":[],"documentation":{"id":17391,"nodeType":"StructuredDocumentation","src":"110230:122:14","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"110366:16:14","parameters":{"id":17402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17393,"mutability":"mutable","name":"callee","nameLocation":"110391:6:14","nodeType":"VariableDeclaration","scope":17404,"src":"110383:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17392,"name":"address","nodeType":"ElementaryTypeName","src":"110383:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17395,"mutability":"mutable","name":"msgValue","nameLocation":"110407:8:14","nodeType":"VariableDeclaration","scope":17404,"src":"110399:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17394,"name":"uint256","nodeType":"ElementaryTypeName","src":"110399:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17397,"mutability":"mutable","name":"minGas","nameLocation":"110424:6:14","nodeType":"VariableDeclaration","scope":17404,"src":"110417:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17396,"name":"uint64","nodeType":"ElementaryTypeName","src":"110417:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17399,"mutability":"mutable","name":"data","nameLocation":"110447:4:14","nodeType":"VariableDeclaration","scope":17404,"src":"110432:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17398,"name":"bytes","nodeType":"ElementaryTypeName","src":"110432:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17401,"mutability":"mutable","name":"count","nameLocation":"110460:5:14","nodeType":"VariableDeclaration","scope":17404,"src":"110453:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17400,"name":"uint64","nodeType":"ElementaryTypeName","src":"110453:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"110382:84:14"},"returnParameters":{"id":17403,"nodeType":"ParameterList","parameters":[],"src":"110483:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17412,"nodeType":"FunctionDefinition","src":"110616:66:14","nodes":[],"documentation":{"id":17405,"nodeType":"StructuredDocumentation","src":"110490:121:14","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"110625:10:14","parameters":{"id":17410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17407,"mutability":"mutable","name":"callee","nameLocation":"110644:6:14","nodeType":"VariableDeclaration","scope":17412,"src":"110636:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17406,"name":"address","nodeType":"ElementaryTypeName","src":"110636:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17409,"mutability":"mutable","name":"data","nameLocation":"110667:4:14","nodeType":"VariableDeclaration","scope":17412,"src":"110652:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17408,"name":"bytes","nodeType":"ElementaryTypeName","src":"110652:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110635:37:14"},"returnParameters":{"id":17411,"nodeType":"ParameterList","parameters":[],"src":"110681:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17422,"nodeType":"FunctionDefinition","src":"110769:80:14","nodes":[],"documentation":{"id":17413,"nodeType":"StructuredDocumentation","src":"110688:76:14","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"110778:10:14","parameters":{"id":17420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17415,"mutability":"mutable","name":"callee","nameLocation":"110797:6:14","nodeType":"VariableDeclaration","scope":17422,"src":"110789:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17414,"name":"address","nodeType":"ElementaryTypeName","src":"110789:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17417,"mutability":"mutable","name":"data","nameLocation":"110820:4:14","nodeType":"VariableDeclaration","scope":17422,"src":"110805:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17416,"name":"bytes","nodeType":"ElementaryTypeName","src":"110805:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17419,"mutability":"mutable","name":"count","nameLocation":"110833:5:14","nodeType":"VariableDeclaration","scope":17422,"src":"110826:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17418,"name":"uint64","nodeType":"ElementaryTypeName","src":"110826:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"110788:51:14"},"returnParameters":{"id":17421,"nodeType":"ParameterList","parameters":[],"src":"110848:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17432,"nodeType":"FunctionDefinition","src":"110937:84:14","nodes":[],"documentation":{"id":17423,"nodeType":"StructuredDocumentation","src":"110855:77:14","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"110946:10:14","parameters":{"id":17430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17425,"mutability":"mutable","name":"callee","nameLocation":"110965:6:14","nodeType":"VariableDeclaration","scope":17432,"src":"110957:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17424,"name":"address","nodeType":"ElementaryTypeName","src":"110957:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17427,"mutability":"mutable","name":"msgValue","nameLocation":"110981:8:14","nodeType":"VariableDeclaration","scope":17432,"src":"110973:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17426,"name":"uint256","nodeType":"ElementaryTypeName","src":"110973:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17429,"mutability":"mutable","name":"data","nameLocation":"111006:4:14","nodeType":"VariableDeclaration","scope":17432,"src":"110991:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17428,"name":"bytes","nodeType":"ElementaryTypeName","src":"110991:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110956:55:14"},"returnParameters":{"id":17431,"nodeType":"ParameterList","parameters":[],"src":"111020:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17444,"nodeType":"FunctionDefinition","src":"111124:98:14","nodes":[],"documentation":{"id":17433,"nodeType":"StructuredDocumentation","src":"111027:92:14","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"111133:10:14","parameters":{"id":17442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17435,"mutability":"mutable","name":"callee","nameLocation":"111152:6:14","nodeType":"VariableDeclaration","scope":17444,"src":"111144:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17434,"name":"address","nodeType":"ElementaryTypeName","src":"111144:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17437,"mutability":"mutable","name":"msgValue","nameLocation":"111168:8:14","nodeType":"VariableDeclaration","scope":17444,"src":"111160:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17436,"name":"uint256","nodeType":"ElementaryTypeName","src":"111160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17439,"mutability":"mutable","name":"data","nameLocation":"111193:4:14","nodeType":"VariableDeclaration","scope":17444,"src":"111178:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17438,"name":"bytes","nodeType":"ElementaryTypeName","src":"111178:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17441,"mutability":"mutable","name":"count","nameLocation":"111206:5:14","nodeType":"VariableDeclaration","scope":17444,"src":"111199:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17440,"name":"uint64","nodeType":"ElementaryTypeName","src":"111199:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"111143:69:14"},"returnParameters":{"id":17443,"nodeType":"ParameterList","parameters":[],"src":"111221:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17456,"nodeType":"FunctionDefinition","src":"111315:96:14","nodes":[],"documentation":{"id":17445,"nodeType":"StructuredDocumentation","src":"111228:82:14","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"111324:10:14","parameters":{"id":17454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17447,"mutability":"mutable","name":"callee","nameLocation":"111343:6:14","nodeType":"VariableDeclaration","scope":17456,"src":"111335:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17446,"name":"address","nodeType":"ElementaryTypeName","src":"111335:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17449,"mutability":"mutable","name":"msgValue","nameLocation":"111359:8:14","nodeType":"VariableDeclaration","scope":17456,"src":"111351:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17448,"name":"uint256","nodeType":"ElementaryTypeName","src":"111351:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17451,"mutability":"mutable","name":"gas","nameLocation":"111376:3:14","nodeType":"VariableDeclaration","scope":17456,"src":"111369:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17450,"name":"uint64","nodeType":"ElementaryTypeName","src":"111369:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17453,"mutability":"mutable","name":"data","nameLocation":"111396:4:14","nodeType":"VariableDeclaration","scope":17456,"src":"111381:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17452,"name":"bytes","nodeType":"ElementaryTypeName","src":"111381:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111334:67:14"},"returnParameters":{"id":17455,"nodeType":"ParameterList","parameters":[],"src":"111410:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17470,"nodeType":"FunctionDefinition","src":"111520:110:14","nodes":[],"documentation":{"id":17457,"nodeType":"StructuredDocumentation","src":"111417:98:14","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"111529:10:14","parameters":{"id":17468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17459,"mutability":"mutable","name":"callee","nameLocation":"111548:6:14","nodeType":"VariableDeclaration","scope":17470,"src":"111540:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17458,"name":"address","nodeType":"ElementaryTypeName","src":"111540:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17461,"mutability":"mutable","name":"msgValue","nameLocation":"111564:8:14","nodeType":"VariableDeclaration","scope":17470,"src":"111556:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17460,"name":"uint256","nodeType":"ElementaryTypeName","src":"111556:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17463,"mutability":"mutable","name":"gas","nameLocation":"111581:3:14","nodeType":"VariableDeclaration","scope":17470,"src":"111574:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17462,"name":"uint64","nodeType":"ElementaryTypeName","src":"111574:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17465,"mutability":"mutable","name":"data","nameLocation":"111601:4:14","nodeType":"VariableDeclaration","scope":17470,"src":"111586:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17464,"name":"bytes","nodeType":"ElementaryTypeName","src":"111586:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17467,"mutability":"mutable","name":"count","nameLocation":"111614:5:14","nodeType":"VariableDeclaration","scope":17470,"src":"111607:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17466,"name":"uint64","nodeType":"ElementaryTypeName","src":"111607:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"111539:81:14"},"returnParameters":{"id":17469,"nodeType":"ParameterList","parameters":[],"src":"111629:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17484,"nodeType":"FunctionDefinition","src":"111989:134:14","nodes":[],"documentation":{"id":17471,"nodeType":"StructuredDocumentation","src":"111636:348:14","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"111998:19:14","parameters":{"id":17482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17473,"mutability":"mutable","name":"checkTopic0","nameLocation":"112023:11:14","nodeType":"VariableDeclaration","scope":17484,"src":"112018:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17472,"name":"bool","nodeType":"ElementaryTypeName","src":"112018:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17475,"mutability":"mutable","name":"checkTopic1","nameLocation":"112041:11:14","nodeType":"VariableDeclaration","scope":17484,"src":"112036:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17474,"name":"bool","nodeType":"ElementaryTypeName","src":"112036:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17477,"mutability":"mutable","name":"checkTopic2","nameLocation":"112059:11:14","nodeType":"VariableDeclaration","scope":17484,"src":"112054:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17476,"name":"bool","nodeType":"ElementaryTypeName","src":"112054:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17479,"mutability":"mutable","name":"checkTopic3","nameLocation":"112077:11:14","nodeType":"VariableDeclaration","scope":17484,"src":"112072:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17478,"name":"bool","nodeType":"ElementaryTypeName","src":"112072:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17481,"mutability":"mutable","name":"checkData","nameLocation":"112095:9:14","nodeType":"VariableDeclaration","scope":17484,"src":"112090:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17480,"name":"bool","nodeType":"ElementaryTypeName","src":"112090:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"112017:88:14"},"returnParameters":{"id":17483,"nodeType":"ParameterList","parameters":[],"src":"112122:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17500,"nodeType":"FunctionDefinition","src":"112226:197:14","nodes":[],"documentation":{"id":17485,"nodeType":"StructuredDocumentation","src":"112129:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"112235:19:14","parameters":{"id":17498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17487,"mutability":"mutable","name":"checkTopic0","nameLocation":"112269:11:14","nodeType":"VariableDeclaration","scope":17500,"src":"112264:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17486,"name":"bool","nodeType":"ElementaryTypeName","src":"112264:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17489,"mutability":"mutable","name":"checkTopic1","nameLocation":"112295:11:14","nodeType":"VariableDeclaration","scope":17500,"src":"112290:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17488,"name":"bool","nodeType":"ElementaryTypeName","src":"112290:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17491,"mutability":"mutable","name":"checkTopic2","nameLocation":"112321:11:14","nodeType":"VariableDeclaration","scope":17500,"src":"112316:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17490,"name":"bool","nodeType":"ElementaryTypeName","src":"112316:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17493,"mutability":"mutable","name":"checkTopic3","nameLocation":"112347:11:14","nodeType":"VariableDeclaration","scope":17500,"src":"112342:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17492,"name":"bool","nodeType":"ElementaryTypeName","src":"112342:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17495,"mutability":"mutable","name":"checkData","nameLocation":"112373:9:14","nodeType":"VariableDeclaration","scope":17500,"src":"112368:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17494,"name":"bool","nodeType":"ElementaryTypeName","src":"112368:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17497,"mutability":"mutable","name":"emitter","nameLocation":"112400:7:14","nodeType":"VariableDeclaration","scope":17500,"src":"112392:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17496,"name":"address","nodeType":"ElementaryTypeName","src":"112392:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112254:159:14"},"returnParameters":{"id":17499,"nodeType":"ParameterList","parameters":[],"src":"112422:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17504,"nodeType":"FunctionDefinition","src":"112713:40:14","nodes":[],"documentation":{"id":17501,"nodeType":"StructuredDocumentation","src":"112429:279:14","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"112722:19:14","parameters":{"id":17502,"nodeType":"ParameterList","parameters":[],"src":"112741:2:14"},"returnParameters":{"id":17503,"nodeType":"ParameterList","parameters":[],"src":"112752:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17510,"nodeType":"FunctionDefinition","src":"112856:55:14","nodes":[],"documentation":{"id":17505,"nodeType":"StructuredDocumentation","src":"112759:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"112865:19:14","parameters":{"id":17508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17507,"mutability":"mutable","name":"emitter","nameLocation":"112893:7:14","nodeType":"VariableDeclaration","scope":17510,"src":"112885:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17506,"name":"address","nodeType":"ElementaryTypeName","src":"112885:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112884:17:14"},"returnParameters":{"id":17509,"nodeType":"ParameterList","parameters":[],"src":"112910:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17522,"nodeType":"FunctionDefinition","src":"113250:99:14","nodes":[],"documentation":{"id":17511,"nodeType":"StructuredDocumentation","src":"112917:328:14","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113259:10:14","parameters":{"id":17520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17513,"mutability":"mutable","name":"checkTopic1","nameLocation":"113275:11:14","nodeType":"VariableDeclaration","scope":17522,"src":"113270:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17512,"name":"bool","nodeType":"ElementaryTypeName","src":"113270:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17515,"mutability":"mutable","name":"checkTopic2","nameLocation":"113293:11:14","nodeType":"VariableDeclaration","scope":17522,"src":"113288:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17514,"name":"bool","nodeType":"ElementaryTypeName","src":"113288:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17517,"mutability":"mutable","name":"checkTopic3","nameLocation":"113311:11:14","nodeType":"VariableDeclaration","scope":17522,"src":"113306:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17516,"name":"bool","nodeType":"ElementaryTypeName","src":"113306:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17519,"mutability":"mutable","name":"checkData","nameLocation":"113329:9:14","nodeType":"VariableDeclaration","scope":17522,"src":"113324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17518,"name":"bool","nodeType":"ElementaryTypeName","src":"113324:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"113269:70:14"},"returnParameters":{"id":17521,"nodeType":"ParameterList","parameters":[],"src":"113348:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17536,"nodeType":"FunctionDefinition","src":"113452:124:14","nodes":[],"documentation":{"id":17523,"nodeType":"StructuredDocumentation","src":"113355:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113461:10:14","parameters":{"id":17534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17525,"mutability":"mutable","name":"checkTopic1","nameLocation":"113477:11:14","nodeType":"VariableDeclaration","scope":17536,"src":"113472:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17524,"name":"bool","nodeType":"ElementaryTypeName","src":"113472:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17527,"mutability":"mutable","name":"checkTopic2","nameLocation":"113495:11:14","nodeType":"VariableDeclaration","scope":17536,"src":"113490:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17526,"name":"bool","nodeType":"ElementaryTypeName","src":"113490:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17529,"mutability":"mutable","name":"checkTopic3","nameLocation":"113513:11:14","nodeType":"VariableDeclaration","scope":17536,"src":"113508:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17528,"name":"bool","nodeType":"ElementaryTypeName","src":"113508:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17531,"mutability":"mutable","name":"checkData","nameLocation":"113531:9:14","nodeType":"VariableDeclaration","scope":17536,"src":"113526:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17530,"name":"bool","nodeType":"ElementaryTypeName","src":"113526:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17533,"mutability":"mutable","name":"emitter","nameLocation":"113550:7:14","nodeType":"VariableDeclaration","scope":17536,"src":"113542:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17532,"name":"address","nodeType":"ElementaryTypeName","src":"113542:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"113471:87:14"},"returnParameters":{"id":17535,"nodeType":"ParameterList","parameters":[],"src":"113575:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17540,"nodeType":"FunctionDefinition","src":"113846:31:14","nodes":[],"documentation":{"id":17537,"nodeType":"StructuredDocumentation","src":"113582:259:14","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113855:10:14","parameters":{"id":17538,"nodeType":"ParameterList","parameters":[],"src":"113865:2:14"},"returnParameters":{"id":17539,"nodeType":"ParameterList","parameters":[],"src":"113876:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17546,"nodeType":"FunctionDefinition","src":"113980:46:14","nodes":[],"documentation":{"id":17541,"nodeType":"StructuredDocumentation","src":"113883:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113989:10:14","parameters":{"id":17544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17543,"mutability":"mutable","name":"emitter","nameLocation":"114008:7:14","nodeType":"VariableDeclaration","scope":17546,"src":"114000:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17542,"name":"address","nodeType":"ElementaryTypeName","src":"114000:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"113999:17:14"},"returnParameters":{"id":17545,"nodeType":"ParameterList","parameters":[],"src":"114025:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17560,"nodeType":"FunctionDefinition","src":"114096:113:14","nodes":[],"documentation":{"id":17547,"nodeType":"StructuredDocumentation","src":"114032:59:14","text":"Expect a given number of logs with the provided topics."},"functionSelector":"5e1d1c33","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114105:10:14","parameters":{"id":17558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17549,"mutability":"mutable","name":"checkTopic1","nameLocation":"114121:11:14","nodeType":"VariableDeclaration","scope":17560,"src":"114116:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17548,"name":"bool","nodeType":"ElementaryTypeName","src":"114116:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17551,"mutability":"mutable","name":"checkTopic2","nameLocation":"114139:11:14","nodeType":"VariableDeclaration","scope":17560,"src":"114134:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17550,"name":"bool","nodeType":"ElementaryTypeName","src":"114134:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17553,"mutability":"mutable","name":"checkTopic3","nameLocation":"114157:11:14","nodeType":"VariableDeclaration","scope":17560,"src":"114152:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17552,"name":"bool","nodeType":"ElementaryTypeName","src":"114152:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17555,"mutability":"mutable","name":"checkData","nameLocation":"114175:9:14","nodeType":"VariableDeclaration","scope":17560,"src":"114170:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17554,"name":"bool","nodeType":"ElementaryTypeName","src":"114170:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17557,"mutability":"mutable","name":"count","nameLocation":"114193:5:14","nodeType":"VariableDeclaration","scope":17560,"src":"114186:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17556,"name":"uint64","nodeType":"ElementaryTypeName","src":"114186:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114115:84:14"},"returnParameters":{"id":17559,"nodeType":"ParameterList","parameters":[],"src":"114208:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17576,"nodeType":"FunctionDefinition","src":"114303:184:14","nodes":[],"documentation":{"id":17561,"nodeType":"StructuredDocumentation","src":"114215:83:14","text":"Expect a given number of logs from a specific emitter with the provided topics."},"functionSelector":"c339d02c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114312:10:14","parameters":{"id":17574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17563,"mutability":"mutable","name":"checkTopic1","nameLocation":"114337:11:14","nodeType":"VariableDeclaration","scope":17576,"src":"114332:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17562,"name":"bool","nodeType":"ElementaryTypeName","src":"114332:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17565,"mutability":"mutable","name":"checkTopic2","nameLocation":"114363:11:14","nodeType":"VariableDeclaration","scope":17576,"src":"114358:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17564,"name":"bool","nodeType":"ElementaryTypeName","src":"114358:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17567,"mutability":"mutable","name":"checkTopic3","nameLocation":"114389:11:14","nodeType":"VariableDeclaration","scope":17576,"src":"114384:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17566,"name":"bool","nodeType":"ElementaryTypeName","src":"114384:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17569,"mutability":"mutable","name":"checkData","nameLocation":"114415:9:14","nodeType":"VariableDeclaration","scope":17576,"src":"114410:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17568,"name":"bool","nodeType":"ElementaryTypeName","src":"114410:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17571,"mutability":"mutable","name":"emitter","nameLocation":"114442:7:14","nodeType":"VariableDeclaration","scope":17576,"src":"114434:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17570,"name":"address","nodeType":"ElementaryTypeName","src":"114434:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17573,"mutability":"mutable","name":"count","nameLocation":"114466:5:14","nodeType":"VariableDeclaration","scope":17576,"src":"114459:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17572,"name":"uint64","nodeType":"ElementaryTypeName","src":"114459:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114322:155:14"},"returnParameters":{"id":17575,"nodeType":"ParameterList","parameters":[],"src":"114486:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17582,"nodeType":"FunctionDefinition","src":"114571:43:14","nodes":[],"documentation":{"id":17577,"nodeType":"StructuredDocumentation","src":"114493:73:14","text":"Expect a given number of logs with all topic and data checks enabled."},"functionSelector":"4c74a335","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114580:10:14","parameters":{"id":17580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17579,"mutability":"mutable","name":"count","nameLocation":"114598:5:14","nodeType":"VariableDeclaration","scope":17582,"src":"114591:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17578,"name":"uint64","nodeType":"ElementaryTypeName","src":"114591:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114590:14:14"},"returnParameters":{"id":17581,"nodeType":"ParameterList","parameters":[],"src":"114613:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17590,"nodeType":"FunctionDefinition","src":"114722:60:14","nodes":[],"documentation":{"id":17583,"nodeType":"StructuredDocumentation","src":"114620:97:14","text":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"functionSelector":"b43aece3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114731:10:14","parameters":{"id":17588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17585,"mutability":"mutable","name":"emitter","nameLocation":"114750:7:14","nodeType":"VariableDeclaration","scope":17590,"src":"114742:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17584,"name":"address","nodeType":"ElementaryTypeName","src":"114742:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17587,"mutability":"mutable","name":"count","nameLocation":"114766:5:14","nodeType":"VariableDeclaration","scope":17590,"src":"114759:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17586,"name":"uint64","nodeType":"ElementaryTypeName","src":"114759:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114741:31:14"},"returnParameters":{"id":17589,"nodeType":"ParameterList","parameters":[],"src":"114781:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17596,"nodeType":"FunctionDefinition","src":"114860:57:14","nodes":[],"documentation":{"id":17591,"nodeType":"StructuredDocumentation","src":"114788:67:14","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"114869:19:14","parameters":{"id":17594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17593,"mutability":"mutable","name":"revertData","nameLocation":"114896:10:14","nodeType":"VariableDeclaration","scope":17596,"src":"114889:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17592,"name":"bytes4","nodeType":"ElementaryTypeName","src":"114889:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"114888:19:14"},"returnParameters":{"id":17595,"nodeType":"ParameterList","parameters":[],"src":"114916:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17604,"nodeType":"FunctionDefinition","src":"115016:75:14","nodes":[],"documentation":{"id":17597,"nodeType":"StructuredDocumentation","src":"114923:88:14","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"115025:19:14","parameters":{"id":17602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17599,"mutability":"mutable","name":"revertData","nameLocation":"115052:10:14","nodeType":"VariableDeclaration","scope":17604,"src":"115045:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17598,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115045:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17601,"mutability":"mutable","name":"reverter","nameLocation":"115072:8:14","nodeType":"VariableDeclaration","scope":17604,"src":"115064:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17600,"name":"address","nodeType":"ElementaryTypeName","src":"115064:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"115044:37:14"},"returnParameters":{"id":17603,"nodeType":"ParameterList","parameters":[],"src":"115090:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17608,"nodeType":"FunctionDefinition","src":"115157:33:14","nodes":[],"documentation":{"id":17605,"nodeType":"StructuredDocumentation","src":"115097:55:14","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115166:12:14","parameters":{"id":17606,"nodeType":"ParameterList","parameters":[],"src":"115178:2:14"},"returnParameters":{"id":17607,"nodeType":"ParameterList","parameters":[],"src":"115189:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17614,"nodeType":"FunctionDefinition","src":"115272:50:14","nodes":[],"documentation":{"id":17609,"nodeType":"StructuredDocumentation","src":"115196:71:14","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115281:12:14","parameters":{"id":17612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17611,"mutability":"mutable","name":"revertData","nameLocation":"115301:10:14","nodeType":"VariableDeclaration","scope":17614,"src":"115294:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17610,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115294:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"115293:19:14"},"returnParameters":{"id":17613,"nodeType":"ParameterList","parameters":[],"src":"115321:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17624,"nodeType":"FunctionDefinition","src":"115450:82:14","nodes":[],"documentation":{"id":17615,"nodeType":"StructuredDocumentation","src":"115328:117:14","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"functionSelector":"b0762d73","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115459:12:14","parameters":{"id":17622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17617,"mutability":"mutable","name":"revertData","nameLocation":"115479:10:14","nodeType":"VariableDeclaration","scope":17624,"src":"115472:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17616,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115472:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17619,"mutability":"mutable","name":"reverter","nameLocation":"115499:8:14","nodeType":"VariableDeclaration","scope":17624,"src":"115491:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17618,"name":"address","nodeType":"ElementaryTypeName","src":"115491:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17621,"mutability":"mutable","name":"count","nameLocation":"115516:5:14","nodeType":"VariableDeclaration","scope":17624,"src":"115509:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17620,"name":"uint64","nodeType":"ElementaryTypeName","src":"115509:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"115471:51:14"},"returnParameters":{"id":17623,"nodeType":"ParameterList","parameters":[],"src":"115531:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17634,"nodeType":"FunctionDefinition","src":"115668:90:14","nodes":[],"documentation":{"id":17625,"nodeType":"StructuredDocumentation","src":"115538:125:14","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"functionSelector":"d345fb1f","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115677:12:14","parameters":{"id":17632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17627,"mutability":"mutable","name":"revertData","nameLocation":"115705:10:14","nodeType":"VariableDeclaration","scope":17634,"src":"115690:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17626,"name":"bytes","nodeType":"ElementaryTypeName","src":"115690:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17629,"mutability":"mutable","name":"reverter","nameLocation":"115725:8:14","nodeType":"VariableDeclaration","scope":17634,"src":"115717:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17628,"name":"address","nodeType":"ElementaryTypeName","src":"115717:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17631,"mutability":"mutable","name":"count","nameLocation":"115742:5:14","nodeType":"VariableDeclaration","scope":17634,"src":"115735:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17630,"name":"uint64","nodeType":"ElementaryTypeName","src":"115735:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"115689:59:14"},"returnParameters":{"id":17633,"nodeType":"ParameterList","parameters":[],"src":"115757:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17640,"nodeType":"FunctionDefinition","src":"115840:58:14","nodes":[],"documentation":{"id":17635,"nodeType":"StructuredDocumentation","src":"115764:71:14","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115849:12:14","parameters":{"id":17638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17637,"mutability":"mutable","name":"revertData","nameLocation":"115877:10:14","nodeType":"VariableDeclaration","scope":17640,"src":"115862:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17636,"name":"bytes","nodeType":"ElementaryTypeName","src":"115862:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"115861:27:14"},"returnParameters":{"id":17639,"nodeType":"ParameterList","parameters":[],"src":"115897:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17646,"nodeType":"FunctionDefinition","src":"115984:49:14","nodes":[],"documentation":{"id":17641,"nodeType":"StructuredDocumentation","src":"115904:75:14","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115993:12:14","parameters":{"id":17644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17643,"mutability":"mutable","name":"reverter","nameLocation":"116014:8:14","nodeType":"VariableDeclaration","scope":17646,"src":"116006:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17642,"name":"address","nodeType":"ElementaryTypeName","src":"116006:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116005:18:14"},"returnParameters":{"id":17645,"nodeType":"ParameterList","parameters":[],"src":"116032:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17654,"nodeType":"FunctionDefinition","src":"116122:68:14","nodes":[],"documentation":{"id":17647,"nodeType":"StructuredDocumentation","src":"116039:78:14","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116131:12:14","parameters":{"id":17652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17649,"mutability":"mutable","name":"revertData","nameLocation":"116151:10:14","nodeType":"VariableDeclaration","scope":17654,"src":"116144:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17648,"name":"bytes4","nodeType":"ElementaryTypeName","src":"116144:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17651,"mutability":"mutable","name":"reverter","nameLocation":"116171:8:14","nodeType":"VariableDeclaration","scope":17654,"src":"116163:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17650,"name":"address","nodeType":"ElementaryTypeName","src":"116163:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116143:37:14"},"returnParameters":{"id":17653,"nodeType":"ParameterList","parameters":[],"src":"116189:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17662,"nodeType":"FunctionDefinition","src":"116295:76:14","nodes":[],"documentation":{"id":17655,"nodeType":"StructuredDocumentation","src":"116196:94:14","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116304:12:14","parameters":{"id":17660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17657,"mutability":"mutable","name":"revertData","nameLocation":"116332:10:14","nodeType":"VariableDeclaration","scope":17662,"src":"116317:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17656,"name":"bytes","nodeType":"ElementaryTypeName","src":"116317:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17659,"mutability":"mutable","name":"reverter","nameLocation":"116352:8:14","nodeType":"VariableDeclaration","scope":17662,"src":"116344:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17658,"name":"address","nodeType":"ElementaryTypeName","src":"116344:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116316:45:14"},"returnParameters":{"id":17661,"nodeType":"ParameterList","parameters":[],"src":"116370:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17668,"nodeType":"FunctionDefinition","src":"116479:45:14","nodes":[],"documentation":{"id":17663,"nodeType":"StructuredDocumentation","src":"116377:97:14","text":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"functionSelector":"4ee38244","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116488:12:14","parameters":{"id":17666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17665,"mutability":"mutable","name":"count","nameLocation":"116508:5:14","nodeType":"VariableDeclaration","scope":17668,"src":"116501:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17664,"name":"uint64","nodeType":"ElementaryTypeName","src":"116501:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116500:14:14"},"returnParameters":{"id":17667,"nodeType":"ParameterList","parameters":[],"src":"116523:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17676,"nodeType":"FunctionDefinition","src":"116626:64:14","nodes":[],"documentation":{"id":17669,"nodeType":"StructuredDocumentation","src":"116530:91:14","text":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"functionSelector":"e45ca72d","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116635:12:14","parameters":{"id":17674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17671,"mutability":"mutable","name":"revertData","nameLocation":"116655:10:14","nodeType":"VariableDeclaration","scope":17676,"src":"116648:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17670,"name":"bytes4","nodeType":"ElementaryTypeName","src":"116648:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17673,"mutability":"mutable","name":"count","nameLocation":"116674:5:14","nodeType":"VariableDeclaration","scope":17676,"src":"116667:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17672,"name":"uint64","nodeType":"ElementaryTypeName","src":"116667:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116647:33:14"},"returnParameters":{"id":17675,"nodeType":"ParameterList","parameters":[],"src":"116689:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17684,"nodeType":"FunctionDefinition","src":"116800:72:14","nodes":[],"documentation":{"id":17677,"nodeType":"StructuredDocumentation","src":"116696:99:14","text":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"functionSelector":"4994c273","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116809:12:14","parameters":{"id":17682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17679,"mutability":"mutable","name":"revertData","nameLocation":"116837:10:14","nodeType":"VariableDeclaration","scope":17684,"src":"116822:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17678,"name":"bytes","nodeType":"ElementaryTypeName","src":"116822:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17681,"mutability":"mutable","name":"count","nameLocation":"116856:5:14","nodeType":"VariableDeclaration","scope":17684,"src":"116849:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17680,"name":"uint64","nodeType":"ElementaryTypeName","src":"116849:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116821:41:14"},"returnParameters":{"id":17683,"nodeType":"ParameterList","parameters":[],"src":"116871:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17692,"nodeType":"FunctionDefinition","src":"116973:63:14","nodes":[],"documentation":{"id":17685,"nodeType":"StructuredDocumentation","src":"116878:90:14","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"functionSelector":"1ff5f952","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116982:12:14","parameters":{"id":17690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17687,"mutability":"mutable","name":"reverter","nameLocation":"117003:8:14","nodeType":"VariableDeclaration","scope":17692,"src":"116995:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17686,"name":"address","nodeType":"ElementaryTypeName","src":"116995:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17689,"mutability":"mutable","name":"count","nameLocation":"117020:5:14","nodeType":"VariableDeclaration","scope":17692,"src":"117013:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17688,"name":"uint64","nodeType":"ElementaryTypeName","src":"117013:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116994:32:14"},"returnParameters":{"id":17691,"nodeType":"ParameterList","parameters":[],"src":"117035:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17700,"nodeType":"FunctionDefinition","src":"117265:59:14","nodes":[],"documentation":{"id":17693,"nodeType":"StructuredDocumentation","src":"117042:218:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"117274:16:14","parameters":{"id":17698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17695,"mutability":"mutable","name":"min","nameLocation":"117298:3:14","nodeType":"VariableDeclaration","scope":17700,"src":"117291:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17694,"name":"uint64","nodeType":"ElementaryTypeName","src":"117291:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17697,"mutability":"mutable","name":"max","nameLocation":"117310:3:14","nodeType":"VariableDeclaration","scope":17700,"src":"117303:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17696,"name":"uint64","nodeType":"ElementaryTypeName","src":"117303:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"117290:24:14"},"returnParameters":{"id":17699,"nodeType":"ParameterList","parameters":[],"src":"117323:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17708,"nodeType":"FunctionDefinition","src":"117566:63:14","nodes":[],"documentation":{"id":17701,"nodeType":"StructuredDocumentation","src":"117330:231:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"117575:20:14","parameters":{"id":17706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17703,"mutability":"mutable","name":"min","nameLocation":"117603:3:14","nodeType":"VariableDeclaration","scope":17708,"src":"117596:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17702,"name":"uint64","nodeType":"ElementaryTypeName","src":"117596:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17705,"mutability":"mutable","name":"max","nameLocation":"117615:3:14","nodeType":"VariableDeclaration","scope":17708,"src":"117608:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17704,"name":"uint64","nodeType":"ElementaryTypeName","src":"117608:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"117595:24:14"},"returnParameters":{"id":17707,"nodeType":"ParameterList","parameters":[],"src":"117628:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17714,"nodeType":"FunctionDefinition","src":"117711:38:14","nodes":[],"documentation":{"id":17709,"nodeType":"StructuredDocumentation","src":"117635:71:14","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"117720:4:14","parameters":{"id":17712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17711,"mutability":"mutable","name":"skipTest","nameLocation":"117730:8:14","nodeType":"VariableDeclaration","scope":17714,"src":"117725:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17710,"name":"bool","nodeType":"ElementaryTypeName","src":"117725:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"117724:15:14"},"returnParameters":{"id":17713,"nodeType":"ParameterList","parameters":[],"src":"117748:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17722,"nodeType":"FunctionDefinition","src":"117845:62:14","nodes":[],"documentation":{"id":17715,"nodeType":"StructuredDocumentation","src":"117755:85:14","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"117854:4:14","parameters":{"id":17720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17717,"mutability":"mutable","name":"skipTest","nameLocation":"117864:8:14","nodeType":"VariableDeclaration","scope":17722,"src":"117859:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17716,"name":"bool","nodeType":"ElementaryTypeName","src":"117859:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17719,"mutability":"mutable","name":"reason","nameLocation":"117890:6:14","nodeType":"VariableDeclaration","scope":17722,"src":"117874:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17718,"name":"string","nodeType":"ElementaryTypeName","src":"117874:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"117858:39:14"},"returnParameters":{"id":17721,"nodeType":"ParameterList","parameters":[],"src":"117906:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17726,"nodeType":"FunctionDefinition","src":"117982:41:14","nodes":[],"documentation":{"id":17723,"nodeType":"StructuredDocumentation","src":"117913:64:14","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"117991:20:14","parameters":{"id":17724,"nodeType":"ParameterList","parameters":[],"src":"118011:2:14"},"returnParameters":{"id":17725,"nodeType":"ParameterList","parameters":[],"src":"118022:0:14"},"scope":17727,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":16712,"name":"VmSafe","nameLocations":["93067:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":16710,"src":"93067:6:14"},"id":16713,"nodeType":"InheritanceSpecifier","src":"93067:6:14"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":16711,"nodeType":"StructuredDocumentation","src":"92880:171:14","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[17727,16710],"name":"Vm","nameLocation":"93061:2:14","scope":17728,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":14}